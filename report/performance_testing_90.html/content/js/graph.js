/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 60.0, "minX": 0.0, "maxY": 21054.0, "series": [{"data": [[0.0, 298.0], [0.1, 298.0], [0.2, 298.0], [0.3, 298.0], [0.4, 298.0], [0.5, 298.0], [0.6, 298.0], [0.7, 298.0], [0.8, 298.0], [0.9, 298.0], [1.0, 298.0], [1.1, 298.0], [1.2, 305.0], [1.3, 305.0], [1.4, 305.0], [1.5, 305.0], [1.6, 305.0], [1.7, 305.0], [1.8, 305.0], [1.9, 305.0], [2.0, 305.0], [2.1, 305.0], [2.2, 305.0], [2.3, 387.0], [2.4, 387.0], [2.5, 387.0], [2.6, 387.0], [2.7, 387.0], [2.8, 387.0], [2.9, 387.0], [3.0, 387.0], [3.1, 387.0], [3.2, 387.0], [3.3, 387.0], [3.4, 390.0], [3.5, 390.0], [3.6, 390.0], [3.7, 390.0], [3.8, 390.0], [3.9, 390.0], [4.0, 390.0], [4.1, 390.0], [4.2, 390.0], [4.3, 390.0], [4.4, 390.0], [4.5, 672.0], [4.6, 672.0], [4.7, 672.0], [4.8, 672.0], [4.9, 672.0], [5.0, 672.0], [5.1, 672.0], [5.2, 672.0], [5.3, 672.0], [5.4, 672.0], [5.5, 672.0], [5.6, 741.0], [5.7, 741.0], [5.8, 741.0], [5.9, 741.0], [6.0, 741.0], [6.1, 741.0], [6.2, 741.0], [6.3, 741.0], [6.4, 741.0], [6.5, 741.0], [6.6, 741.0], [6.7, 747.0], [6.8, 747.0], [6.9, 747.0], [7.0, 747.0], [7.1, 747.0], [7.2, 747.0], [7.3, 747.0], [7.4, 747.0], [7.5, 747.0], [7.6, 747.0], [7.7, 747.0], [7.8, 788.0], [7.9, 788.0], [8.0, 788.0], [8.1, 788.0], [8.2, 788.0], [8.3, 788.0], [8.4, 788.0], [8.5, 788.0], [8.6, 788.0], [8.7, 788.0], [8.8, 788.0], [8.9, 830.0], [9.0, 830.0], [9.1, 830.0], [9.2, 830.0], [9.3, 830.0], [9.4, 830.0], [9.5, 830.0], [9.6, 830.0], [9.7, 830.0], [9.8, 830.0], [9.9, 830.0], [10.0, 858.0], [10.1, 858.0], [10.2, 858.0], [10.3, 858.0], [10.4, 858.0], [10.5, 858.0], [10.6, 858.0], [10.7, 858.0], [10.8, 858.0], [10.9, 858.0], [11.0, 858.0], [11.1, 858.0], [11.2, 866.0], [11.3, 866.0], [11.4, 866.0], [11.5, 866.0], [11.6, 866.0], [11.7, 866.0], [11.8, 866.0], [11.9, 866.0], [12.0, 866.0], [12.1, 866.0], [12.2, 866.0], [12.3, 867.0], [12.4, 867.0], [12.5, 867.0], [12.6, 867.0], [12.7, 867.0], [12.8, 867.0], [12.9, 867.0], [13.0, 867.0], [13.1, 867.0], [13.2, 867.0], [13.3, 867.0], [13.4, 876.0], [13.5, 876.0], [13.6, 876.0], [13.7, 876.0], [13.8, 876.0], [13.9, 876.0], [14.0, 876.0], [14.1, 876.0], [14.2, 876.0], [14.3, 876.0], [14.4, 876.0], [14.5, 911.0], [14.6, 911.0], [14.7, 911.0], [14.8, 911.0], [14.9, 911.0], [15.0, 911.0], [15.1, 911.0], [15.2, 911.0], [15.3, 911.0], [15.4, 911.0], [15.5, 911.0], [15.6, 940.0], [15.7, 940.0], [15.8, 940.0], [15.9, 940.0], [16.0, 940.0], [16.1, 940.0], [16.2, 940.0], [16.3, 940.0], [16.4, 940.0], [16.5, 940.0], [16.6, 940.0], [16.7, 952.0], [16.8, 952.0], [16.9, 952.0], [17.0, 952.0], [17.1, 952.0], [17.2, 952.0], [17.3, 952.0], [17.4, 952.0], [17.5, 952.0], [17.6, 952.0], [17.7, 952.0], [17.8, 953.0], [17.9, 953.0], [18.0, 953.0], [18.1, 953.0], [18.2, 953.0], [18.3, 953.0], [18.4, 953.0], [18.5, 953.0], [18.6, 953.0], [18.7, 953.0], [18.8, 953.0], [18.9, 969.0], [19.0, 969.0], [19.1, 969.0], [19.2, 969.0], [19.3, 969.0], [19.4, 969.0], [19.5, 969.0], [19.6, 969.0], [19.7, 969.0], [19.8, 969.0], [19.9, 969.0], [20.0, 975.0], [20.1, 975.0], [20.2, 975.0], [20.3, 975.0], [20.4, 975.0], [20.5, 975.0], [20.6, 975.0], [20.7, 975.0], [20.8, 975.0], [20.9, 975.0], [21.0, 975.0], [21.1, 975.0], [21.2, 982.0], [21.3, 982.0], [21.4, 982.0], [21.5, 982.0], [21.6, 982.0], [21.7, 982.0], [21.8, 982.0], [21.9, 982.0], [22.0, 982.0], [22.1, 982.0], [22.2, 982.0], [22.3, 996.0], [22.4, 996.0], [22.5, 996.0], [22.6, 996.0], [22.7, 996.0], [22.8, 996.0], [22.9, 996.0], [23.0, 996.0], [23.1, 996.0], [23.2, 996.0], [23.3, 996.0], [23.4, 998.0], [23.5, 998.0], [23.6, 998.0], [23.7, 998.0], [23.8, 998.0], [23.9, 998.0], [24.0, 998.0], [24.1, 998.0], [24.2, 998.0], [24.3, 998.0], [24.4, 998.0], [24.5, 1029.0], [24.6, 1029.0], [24.7, 1029.0], [24.8, 1029.0], [24.9, 1029.0], [25.0, 1029.0], [25.1, 1029.0], [25.2, 1029.0], [25.3, 1029.0], [25.4, 1029.0], [25.5, 1029.0], [25.6, 1036.0], [25.7, 1036.0], [25.8, 1036.0], [25.9, 1036.0], [26.0, 1036.0], [26.1, 1036.0], [26.2, 1036.0], [26.3, 1036.0], [26.4, 1036.0], [26.5, 1036.0], [26.6, 1036.0], [26.7, 1060.0], [26.8, 1060.0], [26.9, 1060.0], [27.0, 1060.0], [27.1, 1060.0], [27.2, 1060.0], [27.3, 1060.0], [27.4, 1060.0], [27.5, 1060.0], [27.6, 1060.0], [27.7, 1060.0], [27.8, 1066.0], [27.9, 1066.0], [28.0, 1066.0], [28.1, 1066.0], [28.2, 1066.0], [28.3, 1066.0], [28.4, 1066.0], [28.5, 1066.0], [28.6, 1066.0], [28.7, 1066.0], [28.8, 1066.0], [28.9, 1085.0], [29.0, 1085.0], [29.1, 1085.0], [29.2, 1085.0], [29.3, 1085.0], [29.4, 1085.0], [29.5, 1085.0], [29.6, 1085.0], [29.7, 1085.0], [29.8, 1085.0], [29.9, 1085.0], [30.0, 1103.0], [30.1, 1103.0], [30.2, 1103.0], [30.3, 1103.0], [30.4, 1103.0], [30.5, 1103.0], [30.6, 1103.0], [30.7, 1103.0], [30.8, 1103.0], [30.9, 1103.0], [31.0, 1103.0], [31.1, 1103.0], [31.2, 1110.0], [31.3, 1110.0], [31.4, 1110.0], [31.5, 1110.0], [31.6, 1110.0], [31.7, 1110.0], [31.8, 1110.0], [31.9, 1110.0], [32.0, 1110.0], [32.1, 1110.0], [32.2, 1110.0], [32.3, 1111.0], [32.4, 1111.0], [32.5, 1111.0], [32.6, 1111.0], [32.7, 1111.0], [32.8, 1111.0], [32.9, 1111.0], [33.0, 1111.0], [33.1, 1111.0], [33.2, 1111.0], [33.3, 1111.0], [33.4, 1113.0], [33.5, 1113.0], [33.6, 1113.0], [33.7, 1113.0], [33.8, 1113.0], [33.9, 1113.0], [34.0, 1113.0], [34.1, 1113.0], [34.2, 1113.0], [34.3, 1113.0], [34.4, 1113.0], [34.5, 1136.0], [34.6, 1136.0], [34.7, 1136.0], [34.8, 1136.0], [34.9, 1136.0], [35.0, 1136.0], [35.1, 1136.0], [35.2, 1136.0], [35.3, 1136.0], [35.4, 1136.0], [35.5, 1136.0], [35.6, 1143.0], [35.7, 1143.0], [35.8, 1143.0], [35.9, 1143.0], [36.0, 1143.0], [36.1, 1143.0], [36.2, 1143.0], [36.3, 1143.0], [36.4, 1143.0], [36.5, 1143.0], [36.6, 1143.0], [36.7, 1149.0], [36.8, 1149.0], [36.9, 1149.0], [37.0, 1149.0], [37.1, 1149.0], [37.2, 1149.0], [37.3, 1149.0], [37.4, 1149.0], [37.5, 1149.0], [37.6, 1149.0], [37.7, 1149.0], [37.8, 1155.0], [37.9, 1155.0], [38.0, 1155.0], [38.1, 1155.0], [38.2, 1155.0], [38.3, 1155.0], [38.4, 1155.0], [38.5, 1155.0], [38.6, 1155.0], [38.7, 1155.0], [38.8, 1155.0], [38.9, 1175.0], [39.0, 1175.0], [39.1, 1175.0], [39.2, 1175.0], [39.3, 1175.0], [39.4, 1175.0], [39.5, 1175.0], [39.6, 1175.0], [39.7, 1175.0], [39.8, 1175.0], [39.9, 1175.0], [40.0, 1175.0], [40.1, 1195.0], [40.2, 1195.0], [40.3, 1195.0], [40.4, 1195.0], [40.5, 1195.0], [40.6, 1195.0], [40.7, 1195.0], [40.8, 1195.0], [40.9, 1195.0], [41.0, 1195.0], [41.1, 1195.0], [41.2, 1195.0], [41.3, 1195.0], [41.4, 1195.0], [41.5, 1195.0], [41.6, 1195.0], [41.7, 1195.0], [41.8, 1195.0], [41.9, 1195.0], [42.0, 1195.0], [42.1, 1195.0], [42.2, 1195.0], [42.3, 1207.0], [42.4, 1207.0], [42.5, 1207.0], [42.6, 1207.0], [42.7, 1207.0], [42.8, 1207.0], [42.9, 1207.0], [43.0, 1207.0], [43.1, 1207.0], [43.2, 1207.0], [43.3, 1207.0], [43.4, 1217.0], [43.5, 1217.0], [43.6, 1217.0], [43.7, 1217.0], [43.8, 1217.0], [43.9, 1217.0], [44.0, 1217.0], [44.1, 1217.0], [44.2, 1217.0], [44.3, 1217.0], [44.4, 1217.0], [44.5, 1221.0], [44.6, 1221.0], [44.7, 1221.0], [44.8, 1221.0], [44.9, 1221.0], [45.0, 1221.0], [45.1, 1221.0], [45.2, 1221.0], [45.3, 1221.0], [45.4, 1221.0], [45.5, 1221.0], [45.6, 1247.0], [45.7, 1247.0], [45.8, 1247.0], [45.9, 1247.0], [46.0, 1247.0], [46.1, 1247.0], [46.2, 1247.0], [46.3, 1247.0], [46.4, 1247.0], [46.5, 1247.0], [46.6, 1247.0], [46.7, 1248.0], [46.8, 1248.0], [46.9, 1248.0], [47.0, 1248.0], [47.1, 1248.0], [47.2, 1248.0], [47.3, 1248.0], [47.4, 1248.0], [47.5, 1248.0], [47.6, 1248.0], [47.7, 1248.0], [47.8, 1259.0], [47.9, 1259.0], [48.0, 1259.0], [48.1, 1259.0], [48.2, 1259.0], [48.3, 1259.0], [48.4, 1259.0], [48.5, 1259.0], [48.6, 1259.0], [48.7, 1259.0], [48.8, 1259.0], [48.9, 1273.0], [49.0, 1273.0], [49.1, 1273.0], [49.2, 1273.0], [49.3, 1273.0], [49.4, 1273.0], [49.5, 1273.0], [49.6, 1273.0], [49.7, 1273.0], [49.8, 1273.0], [49.9, 1273.0], [50.0, 1273.0], [50.1, 1277.0], [50.2, 1277.0], [50.3, 1277.0], [50.4, 1277.0], [50.5, 1277.0], [50.6, 1277.0], [50.7, 1277.0], [50.8, 1277.0], [50.9, 1277.0], [51.0, 1277.0], [51.1, 1277.0], [51.2, 1308.0], [51.3, 1308.0], [51.4, 1308.0], [51.5, 1308.0], [51.6, 1308.0], [51.7, 1308.0], [51.8, 1308.0], [51.9, 1308.0], [52.0, 1308.0], [52.1, 1308.0], [52.2, 1308.0], [52.3, 1334.0], [52.4, 1334.0], [52.5, 1334.0], [52.6, 1334.0], [52.7, 1334.0], [52.8, 1334.0], [52.9, 1334.0], [53.0, 1334.0], [53.1, 1334.0], [53.2, 1334.0], [53.3, 1334.0], [53.4, 1361.0], [53.5, 1361.0], [53.6, 1361.0], [53.7, 1361.0], [53.8, 1361.0], [53.9, 1361.0], [54.0, 1361.0], [54.1, 1361.0], [54.2, 1361.0], [54.3, 1361.0], [54.4, 1361.0], [54.5, 1373.0], [54.6, 1373.0], [54.7, 1373.0], [54.8, 1373.0], [54.9, 1373.0], [55.0, 1373.0], [55.1, 1373.0], [55.2, 1373.0], [55.3, 1373.0], [55.4, 1373.0], [55.5, 1373.0], [55.6, 1383.0], [55.7, 1383.0], [55.8, 1383.0], [55.9, 1383.0], [56.0, 1383.0], [56.1, 1383.0], [56.2, 1383.0], [56.3, 1383.0], [56.4, 1383.0], [56.5, 1383.0], [56.6, 1383.0], [56.7, 1386.0], [56.8, 1386.0], [56.9, 1386.0], [57.0, 1386.0], [57.1, 1386.0], [57.2, 1386.0], [57.3, 1386.0], [57.4, 1386.0], [57.5, 1386.0], [57.6, 1386.0], [57.7, 1386.0], [57.8, 1389.0], [57.9, 1389.0], [58.0, 1389.0], [58.1, 1389.0], [58.2, 1389.0], [58.3, 1389.0], [58.4, 1389.0], [58.5, 1389.0], [58.6, 1389.0], [58.7, 1389.0], [58.8, 1389.0], [58.9, 1401.0], [59.0, 1401.0], [59.1, 1401.0], [59.2, 1401.0], [59.3, 1401.0], [59.4, 1401.0], [59.5, 1401.0], [59.6, 1401.0], [59.7, 1401.0], [59.8, 1401.0], [59.9, 1401.0], [60.0, 1401.0], [60.1, 1427.0], [60.2, 1427.0], [60.3, 1427.0], [60.4, 1427.0], [60.5, 1427.0], [60.6, 1427.0], [60.7, 1427.0], [60.8, 1427.0], [60.9, 1427.0], [61.0, 1427.0], [61.1, 1427.0], [61.2, 1427.0], [61.3, 1427.0], [61.4, 1427.0], [61.5, 1427.0], [61.6, 1427.0], [61.7, 1427.0], [61.8, 1427.0], [61.9, 1427.0], [62.0, 1427.0], [62.1, 1427.0], [62.2, 1427.0], [62.3, 1438.0], [62.4, 1438.0], [62.5, 1438.0], [62.6, 1438.0], [62.7, 1438.0], [62.8, 1438.0], [62.9, 1438.0], [63.0, 1438.0], [63.1, 1438.0], [63.2, 1438.0], [63.3, 1438.0], [63.4, 1517.0], [63.5, 1517.0], [63.6, 1517.0], [63.7, 1517.0], [63.8, 1517.0], [63.9, 1517.0], [64.0, 1517.0], [64.1, 1517.0], [64.2, 1517.0], [64.3, 1517.0], [64.4, 1517.0], [64.5, 1520.0], [64.6, 1520.0], [64.7, 1520.0], [64.8, 1520.0], [64.9, 1520.0], [65.0, 1520.0], [65.1, 1520.0], [65.2, 1520.0], [65.3, 1520.0], [65.4, 1520.0], [65.5, 1520.0], [65.6, 1548.0], [65.7, 1548.0], [65.8, 1548.0], [65.9, 1548.0], [66.0, 1548.0], [66.1, 1548.0], [66.2, 1548.0], [66.3, 1548.0], [66.4, 1548.0], [66.5, 1548.0], [66.6, 1548.0], [66.7, 1561.0], [66.8, 1561.0], [66.9, 1561.0], [67.0, 1561.0], [67.1, 1561.0], [67.2, 1561.0], [67.3, 1561.0], [67.4, 1561.0], [67.5, 1561.0], [67.6, 1561.0], [67.7, 1561.0], [67.8, 1655.0], [67.9, 1655.0], [68.0, 1655.0], [68.1, 1655.0], [68.2, 1655.0], [68.3, 1655.0], [68.4, 1655.0], [68.5, 1655.0], [68.6, 1655.0], [68.7, 1655.0], [68.8, 1655.0], [68.9, 1674.0], [69.0, 1674.0], [69.1, 1674.0], [69.2, 1674.0], [69.3, 1674.0], [69.4, 1674.0], [69.5, 1674.0], [69.6, 1674.0], [69.7, 1674.0], [69.8, 1674.0], [69.9, 1674.0], [70.0, 1674.0], [70.1, 1766.0], [70.2, 1766.0], [70.3, 1766.0], [70.4, 1766.0], [70.5, 1766.0], [70.6, 1766.0], [70.7, 1766.0], [70.8, 1766.0], [70.9, 1766.0], [71.0, 1766.0], [71.1, 1766.0], [71.2, 1919.0], [71.3, 1919.0], [71.4, 1919.0], [71.5, 1919.0], [71.6, 1919.0], [71.7, 1919.0], [71.8, 1919.0], [71.9, 1919.0], [72.0, 1919.0], [72.1, 1919.0], [72.2, 1919.0], [72.3, 2019.0], [72.4, 2019.0], [72.5, 2019.0], [72.6, 2019.0], [72.7, 2019.0], [72.8, 2019.0], [72.9, 2019.0], [73.0, 2019.0], [73.1, 2019.0], [73.2, 2019.0], [73.3, 2019.0], [73.4, 2027.0], [73.5, 2027.0], [73.6, 2027.0], [73.7, 2027.0], [73.8, 2027.0], [73.9, 2027.0], [74.0, 2027.0], [74.1, 2027.0], [74.2, 2027.0], [74.3, 2027.0], [74.4, 2027.0], [74.5, 2027.0], [74.6, 2027.0], [74.7, 2027.0], [74.8, 2027.0], [74.9, 2027.0], [75.0, 2027.0], [75.1, 2027.0], [75.2, 2027.0], [75.3, 2027.0], [75.4, 2027.0], [75.5, 2027.0], [75.6, 3295.0], [75.7, 3295.0], [75.8, 3295.0], [75.9, 3295.0], [76.0, 3295.0], [76.1, 3295.0], [76.2, 3295.0], [76.3, 3295.0], [76.4, 3295.0], [76.5, 3295.0], [76.6, 3295.0], [76.7, 3375.0], [76.8, 3375.0], [76.9, 3375.0], [77.0, 3375.0], [77.1, 3375.0], [77.2, 3375.0], [77.3, 3375.0], [77.4, 3375.0], [77.5, 3375.0], [77.6, 3375.0], [77.7, 3375.0], [77.8, 3375.0], [77.9, 3375.0], [78.0, 3375.0], [78.1, 3375.0], [78.2, 3375.0], [78.3, 3375.0], [78.4, 3375.0], [78.5, 3375.0], [78.6, 3375.0], [78.7, 3375.0], [78.8, 3375.0], [78.9, 3625.0], [79.0, 3625.0], [79.1, 3625.0], [79.2, 3625.0], [79.3, 3625.0], [79.4, 3625.0], [79.5, 3625.0], [79.6, 3625.0], [79.7, 3625.0], [79.8, 3625.0], [79.9, 3625.0], [80.0, 3625.0], [80.1, 3756.0], [80.2, 3756.0], [80.3, 3756.0], [80.4, 3756.0], [80.5, 3756.0], [80.6, 3756.0], [80.7, 3756.0], [80.8, 3756.0], [80.9, 3756.0], [81.0, 3756.0], [81.1, 3756.0], [81.2, 3802.0], [81.3, 3802.0], [81.4, 3802.0], [81.5, 3802.0], [81.6, 3802.0], [81.7, 3802.0], [81.8, 3802.0], [81.9, 3802.0], [82.0, 3802.0], [82.1, 3802.0], [82.2, 3802.0], [82.3, 4000.0], [82.4, 4000.0], [82.5, 4000.0], [82.6, 4000.0], [82.7, 4000.0], [82.8, 4000.0], [82.9, 4000.0], [83.0, 4000.0], [83.1, 4000.0], [83.2, 4000.0], [83.3, 4000.0], [83.4, 4182.0], [83.5, 4182.0], [83.6, 4182.0], [83.7, 4182.0], [83.8, 4182.0], [83.9, 4182.0], [84.0, 4182.0], [84.1, 4182.0], [84.2, 4182.0], [84.3, 4182.0], [84.4, 4182.0], [84.5, 4378.0], [84.6, 4378.0], [84.7, 4378.0], [84.8, 4378.0], [84.9, 4378.0], [85.0, 4378.0], [85.1, 4378.0], [85.2, 4378.0], [85.3, 4378.0], [85.4, 4378.0], [85.5, 4378.0], [85.6, 15306.0], [85.7, 15306.0], [85.8, 15306.0], [85.9, 15306.0], [86.0, 15306.0], [86.1, 15306.0], [86.2, 15306.0], [86.3, 15306.0], [86.4, 15306.0], [86.5, 15306.0], [86.6, 15306.0], [86.7, 15316.0], [86.8, 15316.0], [86.9, 15316.0], [87.0, 15316.0], [87.1, 15316.0], [87.2, 15316.0], [87.3, 15316.0], [87.4, 15316.0], [87.5, 15316.0], [87.6, 15316.0], [87.7, 15316.0], [87.8, 15317.0], [87.9, 15317.0], [88.0, 15317.0], [88.1, 15317.0], [88.2, 15317.0], [88.3, 15317.0], [88.4, 15317.0], [88.5, 15317.0], [88.6, 15317.0], [88.7, 15317.0], [88.8, 15317.0], [88.9, 15321.0], [89.0, 15321.0], [89.1, 15321.0], [89.2, 15321.0], [89.3, 15321.0], [89.4, 15321.0], [89.5, 15321.0], [89.6, 15321.0], [89.7, 15321.0], [89.8, 15321.0], [89.9, 15321.0], [90.0, 15321.0], [90.1, 15323.0], [90.2, 15323.0], [90.3, 15323.0], [90.4, 15323.0], [90.5, 15323.0], [90.6, 15323.0], [90.7, 15323.0], [90.8, 15323.0], [90.9, 15323.0], [91.0, 15323.0], [91.1, 15323.0], [91.2, 15329.0], [91.3, 15329.0], [91.4, 15329.0], [91.5, 15329.0], [91.6, 15329.0], [91.7, 15329.0], [91.8, 15329.0], [91.9, 15329.0], [92.0, 15329.0], [92.1, 15329.0], [92.2, 15329.0], [92.3, 15334.0], [92.4, 15334.0], [92.5, 15334.0], [92.6, 15334.0], [92.7, 15334.0], [92.8, 15334.0], [92.9, 15334.0], [93.0, 15334.0], [93.1, 15334.0], [93.2, 15334.0], [93.3, 15334.0], [93.4, 15348.0], [93.5, 15348.0], [93.6, 15348.0], [93.7, 15348.0], [93.8, 15348.0], [93.9, 15348.0], [94.0, 15348.0], [94.1, 15348.0], [94.2, 15348.0], [94.3, 15348.0], [94.4, 15348.0], [94.5, 15425.0], [94.6, 15425.0], [94.7, 15425.0], [94.8, 15425.0], [94.9, 15425.0], [95.0, 15425.0], [95.1, 15425.0], [95.2, 15425.0], [95.3, 15425.0], [95.4, 15425.0], [95.5, 15425.0], [95.6, 15429.0], [95.7, 15429.0], [95.8, 15429.0], [95.9, 15429.0], [96.0, 15429.0], [96.1, 15429.0], [96.2, 15429.0], [96.3, 15429.0], [96.4, 15429.0], [96.5, 15429.0], [96.6, 15429.0], [96.7, 21037.0], [96.8, 21037.0], [96.9, 21037.0], [97.0, 21037.0], [97.1, 21037.0], [97.2, 21037.0], [97.3, 21037.0], [97.4, 21037.0], [97.5, 21037.0], [97.6, 21037.0], [97.7, 21037.0], [97.8, 21051.0], [97.9, 21051.0], [98.0, 21051.0], [98.1, 21051.0], [98.2, 21051.0], [98.3, 21051.0], [98.4, 21051.0], [98.5, 21051.0], [98.6, 21051.0], [98.7, 21051.0], [98.8, 21051.0], [98.9, 21054.0], [99.0, 21054.0], [99.1, 21054.0], [99.2, 21054.0], [99.3, 21054.0], [99.4, 21054.0], [99.5, 21054.0], [99.6, 21054.0], [99.7, 21054.0], [99.8, 21054.0], [99.9, 21054.0], [100.0, 21054.0]], "isOverall": false, "label": "Create Student", "isController": false}, {"data": [[0.0, 64.0], [0.1, 64.0], [0.2, 64.0], [0.3, 64.0], [0.4, 64.0], [0.5, 64.0], [0.6, 64.0], [0.7, 64.0], [0.8, 64.0], [0.9, 64.0], [1.0, 64.0], [1.1, 64.0], [1.2, 66.0], [1.3, 66.0], [1.4, 66.0], [1.5, 66.0], [1.6, 66.0], [1.7, 66.0], [1.8, 66.0], [1.9, 66.0], [2.0, 66.0], [2.1, 66.0], [2.2, 66.0], [2.3, 67.0], [2.4, 67.0], [2.5, 67.0], [2.6, 67.0], [2.7, 67.0], [2.8, 67.0], [2.9, 67.0], [3.0, 67.0], [3.1, 67.0], [3.2, 67.0], [3.3, 67.0], [3.4, 67.0], [3.5, 67.0], [3.6, 67.0], [3.7, 67.0], [3.8, 67.0], [3.9, 67.0], [4.0, 67.0], [4.1, 67.0], [4.2, 67.0], [4.3, 67.0], [4.4, 67.0], [4.5, 68.0], [4.6, 68.0], [4.7, 68.0], [4.8, 68.0], [4.9, 68.0], [5.0, 68.0], [5.1, 68.0], [5.2, 68.0], [5.3, 68.0], [5.4, 68.0], [5.5, 68.0], [5.6, 70.0], [5.7, 70.0], [5.8, 70.0], [5.9, 70.0], [6.0, 70.0], [6.1, 70.0], [6.2, 70.0], [6.3, 70.0], [6.4, 70.0], [6.5, 70.0], [6.6, 70.0], [6.7, 71.0], [6.8, 71.0], [6.9, 71.0], [7.0, 71.0], [7.1, 71.0], [7.2, 71.0], [7.3, 71.0], [7.4, 71.0], [7.5, 71.0], [7.6, 71.0], [7.7, 71.0], [7.8, 72.0], [7.9, 72.0], [8.0, 72.0], [8.1, 72.0], [8.2, 72.0], [8.3, 72.0], [8.4, 72.0], [8.5, 72.0], [8.6, 72.0], [8.7, 72.0], [8.8, 72.0], [8.9, 72.0], [9.0, 72.0], [9.1, 72.0], [9.2, 72.0], [9.3, 72.0], [9.4, 72.0], [9.5, 72.0], [9.6, 72.0], [9.7, 72.0], [9.8, 72.0], [9.9, 72.0], [10.0, 73.0], [10.1, 73.0], [10.2, 73.0], [10.3, 73.0], [10.4, 73.0], [10.5, 73.0], [10.6, 73.0], [10.7, 73.0], [10.8, 73.0], [10.9, 73.0], [11.0, 73.0], [11.1, 73.0], [11.2, 81.0], [11.3, 81.0], [11.4, 81.0], [11.5, 81.0], [11.6, 81.0], [11.7, 81.0], [11.8, 81.0], [11.9, 81.0], [12.0, 81.0], [12.1, 81.0], [12.2, 81.0], [12.3, 81.0], [12.4, 81.0], [12.5, 81.0], [12.6, 81.0], [12.7, 81.0], [12.8, 81.0], [12.9, 81.0], [13.0, 81.0], [13.1, 81.0], [13.2, 81.0], [13.3, 81.0], [13.4, 83.0], [13.5, 83.0], [13.6, 83.0], [13.7, 83.0], [13.8, 83.0], [13.9, 83.0], [14.0, 83.0], [14.1, 83.0], [14.2, 83.0], [14.3, 83.0], [14.4, 83.0], [14.5, 84.0], [14.6, 84.0], [14.7, 84.0], [14.8, 84.0], [14.9, 84.0], [15.0, 84.0], [15.1, 84.0], [15.2, 84.0], [15.3, 84.0], [15.4, 84.0], [15.5, 84.0], [15.6, 84.0], [15.7, 84.0], [15.8, 84.0], [15.9, 84.0], [16.0, 84.0], [16.1, 84.0], [16.2, 84.0], [16.3, 84.0], [16.4, 84.0], [16.5, 84.0], [16.6, 84.0], [16.7, 91.0], [16.8, 91.0], [16.9, 91.0], [17.0, 91.0], [17.1, 91.0], [17.2, 91.0], [17.3, 91.0], [17.4, 91.0], [17.5, 91.0], [17.6, 91.0], [17.7, 91.0], [17.8, 100.0], [17.9, 100.0], [18.0, 100.0], [18.1, 100.0], [18.2, 100.0], [18.3, 100.0], [18.4, 100.0], [18.5, 100.0], [18.6, 100.0], [18.7, 100.0], [18.8, 100.0], [18.9, 106.0], [19.0, 106.0], [19.1, 106.0], [19.2, 106.0], [19.3, 106.0], [19.4, 106.0], [19.5, 106.0], [19.6, 106.0], [19.7, 106.0], [19.8, 106.0], [19.9, 106.0], [20.0, 125.0], [20.1, 125.0], [20.2, 125.0], [20.3, 125.0], [20.4, 125.0], [20.5, 125.0], [20.6, 125.0], [20.7, 125.0], [20.8, 125.0], [20.9, 125.0], [21.0, 125.0], [21.1, 125.0], [21.2, 142.0], [21.3, 142.0], [21.4, 142.0], [21.5, 142.0], [21.6, 142.0], [21.7, 142.0], [21.8, 142.0], [21.9, 142.0], [22.0, 142.0], [22.1, 142.0], [22.2, 142.0], [22.3, 147.0], [22.4, 147.0], [22.5, 147.0], [22.6, 147.0], [22.7, 147.0], [22.8, 147.0], [22.9, 147.0], [23.0, 147.0], [23.1, 147.0], [23.2, 147.0], [23.3, 147.0], [23.4, 151.0], [23.5, 151.0], [23.6, 151.0], [23.7, 151.0], [23.8, 151.0], [23.9, 151.0], [24.0, 151.0], [24.1, 151.0], [24.2, 151.0], [24.3, 151.0], [24.4, 151.0], [24.5, 151.0], [24.6, 151.0], [24.7, 151.0], [24.8, 151.0], [24.9, 151.0], [25.0, 151.0], [25.1, 151.0], [25.2, 151.0], [25.3, 151.0], [25.4, 151.0], [25.5, 151.0], [25.6, 156.0], [25.7, 156.0], [25.8, 156.0], [25.9, 156.0], [26.0, 156.0], [26.1, 156.0], [26.2, 156.0], [26.3, 156.0], [26.4, 156.0], [26.5, 156.0], [26.6, 156.0], [26.7, 159.0], [26.8, 159.0], [26.9, 159.0], [27.0, 159.0], [27.1, 159.0], [27.2, 159.0], [27.3, 159.0], [27.4, 159.0], [27.5, 159.0], [27.6, 159.0], [27.7, 159.0], [27.8, 173.0], [27.9, 173.0], [28.0, 173.0], [28.1, 173.0], [28.2, 173.0], [28.3, 173.0], [28.4, 173.0], [28.5, 173.0], [28.6, 173.0], [28.7, 173.0], [28.8, 173.0], [28.9, 180.0], [29.0, 180.0], [29.1, 180.0], [29.2, 180.0], [29.3, 180.0], [29.4, 180.0], [29.5, 180.0], [29.6, 180.0], [29.7, 180.0], [29.8, 180.0], [29.9, 180.0], [30.0, 184.0], [30.1, 184.0], [30.2, 184.0], [30.3, 184.0], [30.4, 184.0], [30.5, 184.0], [30.6, 184.0], [30.7, 184.0], [30.8, 184.0], [30.9, 184.0], [31.0, 184.0], [31.1, 184.0], [31.2, 185.0], [31.3, 185.0], [31.4, 185.0], [31.5, 185.0], [31.6, 185.0], [31.7, 185.0], [31.8, 185.0], [31.9, 185.0], [32.0, 185.0], [32.1, 185.0], [32.2, 185.0], [32.3, 186.0], [32.4, 186.0], [32.5, 186.0], [32.6, 186.0], [32.7, 186.0], [32.8, 186.0], [32.9, 186.0], [33.0, 186.0], [33.1, 186.0], [33.2, 186.0], [33.3, 186.0], [33.4, 192.0], [33.5, 192.0], [33.6, 192.0], [33.7, 192.0], [33.8, 192.0], [33.9, 192.0], [34.0, 192.0], [34.1, 192.0], [34.2, 192.0], [34.3, 192.0], [34.4, 192.0], [34.5, 203.0], [34.6, 203.0], [34.7, 203.0], [34.8, 203.0], [34.9, 203.0], [35.0, 203.0], [35.1, 203.0], [35.2, 203.0], [35.3, 203.0], [35.4, 203.0], [35.5, 203.0], [35.6, 212.0], [35.7, 212.0], [35.8, 212.0], [35.9, 212.0], [36.0, 212.0], [36.1, 212.0], [36.2, 212.0], [36.3, 212.0], [36.4, 212.0], [36.5, 212.0], [36.6, 212.0], [36.7, 212.0], [36.8, 212.0], [36.9, 212.0], [37.0, 212.0], [37.1, 212.0], [37.2, 212.0], [37.3, 212.0], [37.4, 212.0], [37.5, 212.0], [37.6, 212.0], [37.7, 212.0], [37.8, 221.0], [37.9, 221.0], [38.0, 221.0], [38.1, 221.0], [38.2, 221.0], [38.3, 221.0], [38.4, 221.0], [38.5, 221.0], [38.6, 221.0], [38.7, 221.0], [38.8, 221.0], [38.9, 221.0], [39.0, 221.0], [39.1, 221.0], [39.2, 221.0], [39.3, 221.0], [39.4, 221.0], [39.5, 221.0], [39.6, 221.0], [39.7, 221.0], [39.8, 221.0], [39.9, 221.0], [40.0, 226.0], [40.1, 226.0], [40.2, 226.0], [40.3, 226.0], [40.4, 226.0], [40.5, 226.0], [40.6, 226.0], [40.7, 226.0], [40.8, 226.0], [40.9, 226.0], [41.0, 226.0], [41.1, 226.0], [41.2, 228.0], [41.3, 228.0], [41.4, 228.0], [41.5, 228.0], [41.6, 228.0], [41.7, 228.0], [41.8, 228.0], [41.9, 228.0], [42.0, 228.0], [42.1, 228.0], [42.2, 228.0], [42.3, 234.0], [42.4, 234.0], [42.5, 234.0], [42.6, 234.0], [42.7, 234.0], [42.8, 234.0], [42.9, 234.0], [43.0, 234.0], [43.1, 234.0], [43.2, 234.0], [43.3, 234.0], [43.4, 246.0], [43.5, 246.0], [43.6, 246.0], [43.7, 246.0], [43.8, 246.0], [43.9, 246.0], [44.0, 246.0], [44.1, 246.0], [44.2, 246.0], [44.3, 246.0], [44.4, 246.0], [44.5, 248.0], [44.6, 248.0], [44.7, 248.0], [44.8, 248.0], [44.9, 248.0], [45.0, 248.0], [45.1, 248.0], [45.2, 248.0], [45.3, 248.0], [45.4, 248.0], [45.5, 248.0], [45.6, 250.0], [45.7, 250.0], [45.8, 250.0], [45.9, 250.0], [46.0, 250.0], [46.1, 250.0], [46.2, 250.0], [46.3, 250.0], [46.4, 250.0], [46.5, 250.0], [46.6, 250.0], [46.7, 251.0], [46.8, 251.0], [46.9, 251.0], [47.0, 251.0], [47.1, 251.0], [47.2, 251.0], [47.3, 251.0], [47.4, 251.0], [47.5, 251.0], [47.6, 251.0], [47.7, 251.0], [47.8, 254.0], [47.9, 254.0], [48.0, 254.0], [48.1, 254.0], [48.2, 254.0], [48.3, 254.0], [48.4, 254.0], [48.5, 254.0], [48.6, 254.0], [48.7, 254.0], [48.8, 254.0], [48.9, 257.0], [49.0, 257.0], [49.1, 257.0], [49.2, 257.0], [49.3, 257.0], [49.4, 257.0], [49.5, 257.0], [49.6, 257.0], [49.7, 257.0], [49.8, 257.0], [49.9, 257.0], [50.0, 257.0], [50.1, 258.0], [50.2, 258.0], [50.3, 258.0], [50.4, 258.0], [50.5, 258.0], [50.6, 258.0], [50.7, 258.0], [50.8, 258.0], [50.9, 258.0], [51.0, 258.0], [51.1, 258.0], [51.2, 259.0], [51.3, 259.0], [51.4, 259.0], [51.5, 259.0], [51.6, 259.0], [51.7, 259.0], [51.8, 259.0], [51.9, 259.0], [52.0, 259.0], [52.1, 259.0], [52.2, 259.0], [52.3, 260.0], [52.4, 260.0], [52.5, 260.0], [52.6, 260.0], [52.7, 260.0], [52.8, 260.0], [52.9, 260.0], [53.0, 260.0], [53.1, 260.0], [53.2, 260.0], [53.3, 260.0], [53.4, 263.0], [53.5, 263.0], [53.6, 263.0], [53.7, 263.0], [53.8, 263.0], [53.9, 263.0], [54.0, 263.0], [54.1, 263.0], [54.2, 263.0], [54.3, 263.0], [54.4, 263.0], [54.5, 263.0], [54.6, 263.0], [54.7, 263.0], [54.8, 263.0], [54.9, 263.0], [55.0, 263.0], [55.1, 263.0], [55.2, 263.0], [55.3, 263.0], [55.4, 263.0], [55.5, 263.0], [55.6, 264.0], [55.7, 264.0], [55.8, 264.0], [55.9, 264.0], [56.0, 264.0], [56.1, 264.0], [56.2, 264.0], [56.3, 264.0], [56.4, 264.0], [56.5, 264.0], [56.6, 264.0], [56.7, 268.0], [56.8, 268.0], [56.9, 268.0], [57.0, 268.0], [57.1, 268.0], [57.2, 268.0], [57.3, 268.0], [57.4, 268.0], [57.5, 268.0], [57.6, 268.0], [57.7, 268.0], [57.8, 272.0], [57.9, 272.0], [58.0, 272.0], [58.1, 272.0], [58.2, 272.0], [58.3, 272.0], [58.4, 272.0], [58.5, 272.0], [58.6, 272.0], [58.7, 272.0], [58.8, 272.0], [58.9, 279.0], [59.0, 279.0], [59.1, 279.0], [59.2, 279.0], [59.3, 279.0], [59.4, 279.0], [59.5, 279.0], [59.6, 279.0], [59.7, 279.0], [59.8, 279.0], [59.9, 279.0], [60.0, 279.0], [60.1, 281.0], [60.2, 281.0], [60.3, 281.0], [60.4, 281.0], [60.5, 281.0], [60.6, 281.0], [60.7, 281.0], [60.8, 281.0], [60.9, 281.0], [61.0, 281.0], [61.1, 281.0], [61.2, 282.0], [61.3, 282.0], [61.4, 282.0], [61.5, 282.0], [61.6, 282.0], [61.7, 282.0], [61.8, 282.0], [61.9, 282.0], [62.0, 282.0], [62.1, 282.0], [62.2, 282.0], [62.3, 283.0], [62.4, 283.0], [62.5, 283.0], [62.6, 283.0], [62.7, 283.0], [62.8, 283.0], [62.9, 283.0], [63.0, 283.0], [63.1, 283.0], [63.2, 283.0], [63.3, 283.0], [63.4, 286.0], [63.5, 286.0], [63.6, 286.0], [63.7, 286.0], [63.8, 286.0], [63.9, 286.0], [64.0, 286.0], [64.1, 286.0], [64.2, 286.0], [64.3, 286.0], [64.4, 286.0], [64.5, 290.0], [64.6, 290.0], [64.7, 290.0], [64.8, 290.0], [64.9, 290.0], [65.0, 290.0], [65.1, 290.0], [65.2, 290.0], [65.3, 290.0], [65.4, 290.0], [65.5, 290.0], [65.6, 290.0], [65.7, 290.0], [65.8, 290.0], [65.9, 290.0], [66.0, 290.0], [66.1, 290.0], [66.2, 290.0], [66.3, 290.0], [66.4, 290.0], [66.5, 290.0], [66.6, 290.0], [66.7, 291.0], [66.8, 291.0], [66.9, 291.0], [67.0, 291.0], [67.1, 291.0], [67.2, 291.0], [67.3, 291.0], [67.4, 291.0], [67.5, 291.0], [67.6, 291.0], [67.7, 291.0], [67.8, 294.0], [67.9, 294.0], [68.0, 294.0], [68.1, 294.0], [68.2, 294.0], [68.3, 294.0], [68.4, 294.0], [68.5, 294.0], [68.6, 294.0], [68.7, 294.0], [68.8, 294.0], [68.9, 296.0], [69.0, 296.0], [69.1, 296.0], [69.2, 296.0], [69.3, 296.0], [69.4, 296.0], [69.5, 296.0], [69.6, 296.0], [69.7, 296.0], [69.8, 296.0], [69.9, 296.0], [70.0, 296.0], [70.1, 297.0], [70.2, 297.0], [70.3, 297.0], [70.4, 297.0], [70.5, 297.0], [70.6, 297.0], [70.7, 297.0], [70.8, 297.0], [70.9, 297.0], [71.0, 297.0], [71.1, 297.0], [71.2, 302.0], [71.3, 302.0], [71.4, 302.0], [71.5, 302.0], [71.6, 302.0], [71.7, 302.0], [71.8, 302.0], [71.9, 302.0], [72.0, 302.0], [72.1, 302.0], [72.2, 302.0], [72.3, 305.0], [72.4, 305.0], [72.5, 305.0], [72.6, 305.0], [72.7, 305.0], [72.8, 305.0], [72.9, 305.0], [73.0, 305.0], [73.1, 305.0], [73.2, 305.0], [73.3, 305.0], [73.4, 311.0], [73.5, 311.0], [73.6, 311.0], [73.7, 311.0], [73.8, 311.0], [73.9, 311.0], [74.0, 311.0], [74.1, 311.0], [74.2, 311.0], [74.3, 311.0], [74.4, 311.0], [74.5, 316.0], [74.6, 316.0], [74.7, 316.0], [74.8, 316.0], [74.9, 316.0], [75.0, 316.0], [75.1, 316.0], [75.2, 316.0], [75.3, 316.0], [75.4, 316.0], [75.5, 316.0], [75.6, 317.0], [75.7, 317.0], [75.8, 317.0], [75.9, 317.0], [76.0, 317.0], [76.1, 317.0], [76.2, 317.0], [76.3, 317.0], [76.4, 317.0], [76.5, 317.0], [76.6, 317.0], [76.7, 319.0], [76.8, 319.0], [76.9, 319.0], [77.0, 319.0], [77.1, 319.0], [77.2, 319.0], [77.3, 319.0], [77.4, 319.0], [77.5, 319.0], [77.6, 319.0], [77.7, 319.0], [77.8, 320.0], [77.9, 320.0], [78.0, 320.0], [78.1, 320.0], [78.2, 320.0], [78.3, 320.0], [78.4, 320.0], [78.5, 320.0], [78.6, 320.0], [78.7, 320.0], [78.8, 320.0], [78.9, 323.0], [79.0, 323.0], [79.1, 323.0], [79.2, 323.0], [79.3, 323.0], [79.4, 323.0], [79.5, 323.0], [79.6, 323.0], [79.7, 323.0], [79.8, 323.0], [79.9, 323.0], [80.0, 323.0], [80.1, 324.0], [80.2, 324.0], [80.3, 324.0], [80.4, 324.0], [80.5, 324.0], [80.6, 324.0], [80.7, 324.0], [80.8, 324.0], [80.9, 324.0], [81.0, 324.0], [81.1, 324.0], [81.2, 331.0], [81.3, 331.0], [81.4, 331.0], [81.5, 331.0], [81.6, 331.0], [81.7, 331.0], [81.8, 331.0], [81.9, 331.0], [82.0, 331.0], [82.1, 331.0], [82.2, 331.0], [82.3, 332.0], [82.4, 332.0], [82.5, 332.0], [82.6, 332.0], [82.7, 332.0], [82.8, 332.0], [82.9, 332.0], [83.0, 332.0], [83.1, 332.0], [83.2, 332.0], [83.3, 332.0], [83.4, 336.0], [83.5, 336.0], [83.6, 336.0], [83.7, 336.0], [83.8, 336.0], [83.9, 336.0], [84.0, 336.0], [84.1, 336.0], [84.2, 336.0], [84.3, 336.0], [84.4, 336.0], [84.5, 339.0], [84.6, 339.0], [84.7, 339.0], [84.8, 339.0], [84.9, 339.0], [85.0, 339.0], [85.1, 339.0], [85.2, 339.0], [85.3, 339.0], [85.4, 339.0], [85.5, 339.0], [85.6, 339.0], [85.7, 339.0], [85.8, 339.0], [85.9, 339.0], [86.0, 339.0], [86.1, 339.0], [86.2, 339.0], [86.3, 339.0], [86.4, 339.0], [86.5, 339.0], [86.6, 339.0], [86.7, 340.0], [86.8, 340.0], [86.9, 340.0], [87.0, 340.0], [87.1, 340.0], [87.2, 340.0], [87.3, 340.0], [87.4, 340.0], [87.5, 340.0], [87.6, 340.0], [87.7, 340.0], [87.8, 341.0], [87.9, 341.0], [88.0, 341.0], [88.1, 341.0], [88.2, 341.0], [88.3, 341.0], [88.4, 341.0], [88.5, 341.0], [88.6, 341.0], [88.7, 341.0], [88.8, 341.0], [88.9, 346.0], [89.0, 346.0], [89.1, 346.0], [89.2, 346.0], [89.3, 346.0], [89.4, 346.0], [89.5, 346.0], [89.6, 346.0], [89.7, 346.0], [89.8, 346.0], [89.9, 346.0], [90.0, 346.0], [90.1, 346.0], [90.2, 346.0], [90.3, 346.0], [90.4, 346.0], [90.5, 346.0], [90.6, 346.0], [90.7, 346.0], [90.8, 346.0], [90.9, 346.0], [91.0, 346.0], [91.1, 346.0], [91.2, 350.0], [91.3, 350.0], [91.4, 350.0], [91.5, 350.0], [91.6, 350.0], [91.7, 350.0], [91.8, 350.0], [91.9, 350.0], [92.0, 350.0], [92.1, 350.0], [92.2, 350.0], [92.3, 367.0], [92.4, 367.0], [92.5, 367.0], [92.6, 367.0], [92.7, 367.0], [92.8, 367.0], [92.9, 367.0], [93.0, 367.0], [93.1, 367.0], [93.2, 367.0], [93.3, 367.0], [93.4, 379.0], [93.5, 379.0], [93.6, 379.0], [93.7, 379.0], [93.8, 379.0], [93.9, 379.0], [94.0, 379.0], [94.1, 379.0], [94.2, 379.0], [94.3, 379.0], [94.4, 379.0], [94.5, 382.0], [94.6, 382.0], [94.7, 382.0], [94.8, 382.0], [94.9, 382.0], [95.0, 382.0], [95.1, 382.0], [95.2, 382.0], [95.3, 382.0], [95.4, 382.0], [95.5, 382.0], [95.6, 385.0], [95.7, 385.0], [95.8, 385.0], [95.9, 385.0], [96.0, 385.0], [96.1, 385.0], [96.2, 385.0], [96.3, 385.0], [96.4, 385.0], [96.5, 385.0], [96.6, 385.0], [96.7, 403.0], [96.8, 403.0], [96.9, 403.0], [97.0, 403.0], [97.1, 403.0], [97.2, 403.0], [97.3, 403.0], [97.4, 403.0], [97.5, 403.0], [97.6, 403.0], [97.7, 403.0], [97.8, 404.0], [97.9, 404.0], [98.0, 404.0], [98.1, 404.0], [98.2, 404.0], [98.3, 404.0], [98.4, 404.0], [98.5, 404.0], [98.6, 404.0], [98.7, 404.0], [98.8, 404.0], [98.9, 509.0], [99.0, 509.0], [99.1, 509.0], [99.2, 509.0], [99.3, 509.0], [99.4, 509.0], [99.5, 509.0], [99.6, 509.0], [99.7, 509.0], [99.8, 509.0], [99.9, 509.0], [100.0, 509.0]], "isOverall": false, "label": "Update Student", "isController": false}, {"data": [[0.0, 60.0], [0.1, 60.0], [0.2, 60.0], [0.3, 60.0], [0.4, 60.0], [0.5, 60.0], [0.6, 60.0], [0.7, 60.0], [0.8, 60.0], [0.9, 60.0], [1.0, 60.0], [1.1, 60.0], [1.2, 60.0], [1.3, 60.0], [1.4, 60.0], [1.5, 60.0], [1.6, 60.0], [1.7, 60.0], [1.8, 60.0], [1.9, 60.0], [2.0, 60.0], [2.1, 60.0], [2.2, 60.0], [2.3, 60.0], [2.4, 60.0], [2.5, 60.0], [2.6, 60.0], [2.7, 60.0], [2.8, 60.0], [2.9, 60.0], [3.0, 60.0], [3.1, 60.0], [3.2, 60.0], [3.3, 60.0], [3.4, 60.0], [3.5, 60.0], [3.6, 60.0], [3.7, 60.0], [3.8, 60.0], [3.9, 60.0], [4.0, 60.0], [4.1, 60.0], [4.2, 60.0], [4.3, 60.0], [4.4, 60.0], [4.5, 62.0], [4.6, 62.0], [4.7, 62.0], [4.8, 62.0], [4.9, 62.0], [5.0, 62.0], [5.1, 62.0], [5.2, 62.0], [5.3, 62.0], [5.4, 62.0], [5.5, 62.0], [5.6, 62.0], [5.7, 62.0], [5.8, 62.0], [5.9, 62.0], [6.0, 62.0], [6.1, 62.0], [6.2, 62.0], [6.3, 62.0], [6.4, 62.0], [6.5, 62.0], [6.6, 62.0], [6.7, 64.0], [6.8, 64.0], [6.9, 64.0], [7.0, 64.0], [7.1, 64.0], [7.2, 64.0], [7.3, 64.0], [7.4, 64.0], [7.5, 64.0], [7.6, 64.0], [7.7, 64.0], [7.8, 65.0], [7.9, 65.0], [8.0, 65.0], [8.1, 65.0], [8.2, 65.0], [8.3, 65.0], [8.4, 65.0], [8.5, 65.0], [8.6, 65.0], [8.7, 65.0], [8.8, 65.0], [8.9, 65.0], [9.0, 65.0], [9.1, 65.0], [9.2, 65.0], [9.3, 65.0], [9.4, 65.0], [9.5, 65.0], [9.6, 65.0], [9.7, 65.0], [9.8, 65.0], [9.9, 65.0], [10.0, 66.0], [10.1, 66.0], [10.2, 66.0], [10.3, 66.0], [10.4, 66.0], [10.5, 66.0], [10.6, 66.0], [10.7, 66.0], [10.8, 66.0], [10.9, 66.0], [11.0, 66.0], [11.1, 66.0], [11.2, 67.0], [11.3, 67.0], [11.4, 67.0], [11.5, 67.0], [11.6, 67.0], [11.7, 67.0], [11.8, 67.0], [11.9, 67.0], [12.0, 67.0], [12.1, 67.0], [12.2, 67.0], [12.3, 67.0], [12.4, 67.0], [12.5, 67.0], [12.6, 67.0], [12.7, 67.0], [12.8, 67.0], [12.9, 67.0], [13.0, 67.0], [13.1, 67.0], [13.2, 67.0], [13.3, 67.0], [13.4, 68.0], [13.5, 68.0], [13.6, 68.0], [13.7, 68.0], [13.8, 68.0], [13.9, 68.0], [14.0, 68.0], [14.1, 68.0], [14.2, 68.0], [14.3, 68.0], [14.4, 68.0], [14.5, 69.0], [14.6, 69.0], [14.7, 69.0], [14.8, 69.0], [14.9, 69.0], [15.0, 69.0], [15.1, 69.0], [15.2, 69.0], [15.3, 69.0], [15.4, 69.0], [15.5, 69.0], [15.6, 71.0], [15.7, 71.0], [15.8, 71.0], [15.9, 71.0], [16.0, 71.0], [16.1, 71.0], [16.2, 71.0], [16.3, 71.0], [16.4, 71.0], [16.5, 71.0], [16.6, 71.0], [16.7, 86.0], [16.8, 86.0], [16.9, 86.0], [17.0, 86.0], [17.1, 86.0], [17.2, 86.0], [17.3, 86.0], [17.4, 86.0], [17.5, 86.0], [17.6, 86.0], [17.7, 86.0], [17.8, 88.0], [17.9, 88.0], [18.0, 88.0], [18.1, 88.0], [18.2, 88.0], [18.3, 88.0], [18.4, 88.0], [18.5, 88.0], [18.6, 88.0], [18.7, 88.0], [18.8, 88.0], [18.9, 95.0], [19.0, 95.0], [19.1, 95.0], [19.2, 95.0], [19.3, 95.0], [19.4, 95.0], [19.5, 95.0], [19.6, 95.0], [19.7, 95.0], [19.8, 95.0], [19.9, 95.0], [20.0, 99.0], [20.1, 99.0], [20.2, 99.0], [20.3, 99.0], [20.4, 99.0], [20.5, 99.0], [20.6, 99.0], [20.7, 99.0], [20.8, 99.0], [20.9, 99.0], [21.0, 99.0], [21.1, 99.0], [21.2, 101.0], [21.3, 101.0], [21.4, 101.0], [21.5, 101.0], [21.6, 101.0], [21.7, 101.0], [21.8, 101.0], [21.9, 101.0], [22.0, 101.0], [22.1, 101.0], [22.2, 101.0], [22.3, 108.0], [22.4, 108.0], [22.5, 108.0], [22.6, 108.0], [22.7, 108.0], [22.8, 108.0], [22.9, 108.0], [23.0, 108.0], [23.1, 108.0], [23.2, 108.0], [23.3, 108.0], [23.4, 116.0], [23.5, 116.0], [23.6, 116.0], [23.7, 116.0], [23.8, 116.0], [23.9, 116.0], [24.0, 116.0], [24.1, 116.0], [24.2, 116.0], [24.3, 116.0], [24.4, 116.0], [24.5, 119.0], [24.6, 119.0], [24.7, 119.0], [24.8, 119.0], [24.9, 119.0], [25.0, 119.0], [25.1, 119.0], [25.2, 119.0], [25.3, 119.0], [25.4, 119.0], [25.5, 119.0], [25.6, 139.0], [25.7, 139.0], [25.8, 139.0], [25.9, 139.0], [26.0, 139.0], [26.1, 139.0], [26.2, 139.0], [26.3, 139.0], [26.4, 139.0], [26.5, 139.0], [26.6, 139.0], [26.7, 151.0], [26.8, 151.0], [26.9, 151.0], [27.0, 151.0], [27.1, 151.0], [27.2, 151.0], [27.3, 151.0], [27.4, 151.0], [27.5, 151.0], [27.6, 151.0], [27.7, 151.0], [27.8, 153.0], [27.9, 153.0], [28.0, 153.0], [28.1, 153.0], [28.2, 153.0], [28.3, 153.0], [28.4, 153.0], [28.5, 153.0], [28.6, 153.0], [28.7, 153.0], [28.8, 153.0], [28.9, 155.0], [29.0, 155.0], [29.1, 155.0], [29.2, 155.0], [29.3, 155.0], [29.4, 155.0], [29.5, 155.0], [29.6, 155.0], [29.7, 155.0], [29.8, 155.0], [29.9, 155.0], [30.0, 159.0], [30.1, 159.0], [30.2, 159.0], [30.3, 159.0], [30.4, 159.0], [30.5, 159.0], [30.6, 159.0], [30.7, 159.0], [30.8, 159.0], [30.9, 159.0], [31.0, 159.0], [31.1, 159.0], [31.2, 172.0], [31.3, 172.0], [31.4, 172.0], [31.5, 172.0], [31.6, 172.0], [31.7, 172.0], [31.8, 172.0], [31.9, 172.0], [32.0, 172.0], [32.1, 172.0], [32.2, 172.0], [32.3, 173.0], [32.4, 173.0], [32.5, 173.0], [32.6, 173.0], [32.7, 173.0], [32.8, 173.0], [32.9, 173.0], [33.0, 173.0], [33.1, 173.0], [33.2, 173.0], [33.3, 173.0], [33.4, 174.0], [33.5, 174.0], [33.6, 174.0], [33.7, 174.0], [33.8, 174.0], [33.9, 174.0], [34.0, 174.0], [34.1, 174.0], [34.2, 174.0], [34.3, 174.0], [34.4, 174.0], [34.5, 177.0], [34.6, 177.0], [34.7, 177.0], [34.8, 177.0], [34.9, 177.0], [35.0, 177.0], [35.1, 177.0], [35.2, 177.0], [35.3, 177.0], [35.4, 177.0], [35.5, 177.0], [35.6, 178.0], [35.7, 178.0], [35.8, 178.0], [35.9, 178.0], [36.0, 178.0], [36.1, 178.0], [36.2, 178.0], [36.3, 178.0], [36.4, 178.0], [36.5, 178.0], [36.6, 178.0], [36.7, 186.0], [36.8, 186.0], [36.9, 186.0], [37.0, 186.0], [37.1, 186.0], [37.2, 186.0], [37.3, 186.0], [37.4, 186.0], [37.5, 186.0], [37.6, 186.0], [37.7, 186.0], [37.8, 187.0], [37.9, 187.0], [38.0, 187.0], [38.1, 187.0], [38.2, 187.0], [38.3, 187.0], [38.4, 187.0], [38.5, 187.0], [38.6, 187.0], [38.7, 187.0], [38.8, 187.0], [38.9, 190.0], [39.0, 190.0], [39.1, 190.0], [39.2, 190.0], [39.3, 190.0], [39.4, 190.0], [39.5, 190.0], [39.6, 190.0], [39.7, 190.0], [39.8, 190.0], [39.9, 190.0], [40.0, 190.0], [40.1, 190.0], [40.2, 190.0], [40.3, 190.0], [40.4, 190.0], [40.5, 190.0], [40.6, 190.0], [40.7, 190.0], [40.8, 190.0], [40.9, 190.0], [41.0, 190.0], [41.1, 190.0], [41.2, 194.0], [41.3, 194.0], [41.4, 194.0], [41.5, 194.0], [41.6, 194.0], [41.7, 194.0], [41.8, 194.0], [41.9, 194.0], [42.0, 194.0], [42.1, 194.0], [42.2, 194.0], [42.3, 202.0], [42.4, 202.0], [42.5, 202.0], [42.6, 202.0], [42.7, 202.0], [42.8, 202.0], [42.9, 202.0], [43.0, 202.0], [43.1, 202.0], [43.2, 202.0], [43.3, 202.0], [43.4, 203.0], [43.5, 203.0], [43.6, 203.0], [43.7, 203.0], [43.8, 203.0], [43.9, 203.0], [44.0, 203.0], [44.1, 203.0], [44.2, 203.0], [44.3, 203.0], [44.4, 203.0], [44.5, 210.0], [44.6, 210.0], [44.7, 210.0], [44.8, 210.0], [44.9, 210.0], [45.0, 210.0], [45.1, 210.0], [45.2, 210.0], [45.3, 210.0], [45.4, 210.0], [45.5, 210.0], [45.6, 213.0], [45.7, 213.0], [45.8, 213.0], [45.9, 213.0], [46.0, 213.0], [46.1, 213.0], [46.2, 213.0], [46.3, 213.0], [46.4, 213.0], [46.5, 213.0], [46.6, 213.0], [46.7, 216.0], [46.8, 216.0], [46.9, 216.0], [47.0, 216.0], [47.1, 216.0], [47.2, 216.0], [47.3, 216.0], [47.4, 216.0], [47.5, 216.0], [47.6, 216.0], [47.7, 216.0], [47.8, 217.0], [47.9, 217.0], [48.0, 217.0], [48.1, 217.0], [48.2, 217.0], [48.3, 217.0], [48.4, 217.0], [48.5, 217.0], [48.6, 217.0], [48.7, 217.0], [48.8, 217.0], [48.9, 217.0], [49.0, 217.0], [49.1, 217.0], [49.2, 217.0], [49.3, 217.0], [49.4, 217.0], [49.5, 217.0], [49.6, 217.0], [49.7, 217.0], [49.8, 217.0], [49.9, 217.0], [50.0, 217.0], [50.1, 231.0], [50.2, 231.0], [50.3, 231.0], [50.4, 231.0], [50.5, 231.0], [50.6, 231.0], [50.7, 231.0], [50.8, 231.0], [50.9, 231.0], [51.0, 231.0], [51.1, 231.0], [51.2, 235.0], [51.3, 235.0], [51.4, 235.0], [51.5, 235.0], [51.6, 235.0], [51.7, 235.0], [51.8, 235.0], [51.9, 235.0], [52.0, 235.0], [52.1, 235.0], [52.2, 235.0], [52.3, 238.0], [52.4, 238.0], [52.5, 238.0], [52.6, 238.0], [52.7, 238.0], [52.8, 238.0], [52.9, 238.0], [53.0, 238.0], [53.1, 238.0], [53.2, 238.0], [53.3, 238.0], [53.4, 239.0], [53.5, 239.0], [53.6, 239.0], [53.7, 239.0], [53.8, 239.0], [53.9, 239.0], [54.0, 239.0], [54.1, 239.0], [54.2, 239.0], [54.3, 239.0], [54.4, 239.0], [54.5, 247.0], [54.6, 247.0], [54.7, 247.0], [54.8, 247.0], [54.9, 247.0], [55.0, 247.0], [55.1, 247.0], [55.2, 247.0], [55.3, 247.0], [55.4, 247.0], [55.5, 247.0], [55.6, 251.0], [55.7, 251.0], [55.8, 251.0], [55.9, 251.0], [56.0, 251.0], [56.1, 251.0], [56.2, 251.0], [56.3, 251.0], [56.4, 251.0], [56.5, 251.0], [56.6, 251.0], [56.7, 252.0], [56.8, 252.0], [56.9, 252.0], [57.0, 252.0], [57.1, 252.0], [57.2, 252.0], [57.3, 252.0], [57.4, 252.0], [57.5, 252.0], [57.6, 252.0], [57.7, 252.0], [57.8, 256.0], [57.9, 256.0], [58.0, 256.0], [58.1, 256.0], [58.2, 256.0], [58.3, 256.0], [58.4, 256.0], [58.5, 256.0], [58.6, 256.0], [58.7, 256.0], [58.8, 256.0], [58.9, 257.0], [59.0, 257.0], [59.1, 257.0], [59.2, 257.0], [59.3, 257.0], [59.4, 257.0], [59.5, 257.0], [59.6, 257.0], [59.7, 257.0], [59.8, 257.0], [59.9, 257.0], [60.0, 257.0], [60.1, 259.0], [60.2, 259.0], [60.3, 259.0], [60.4, 259.0], [60.5, 259.0], [60.6, 259.0], [60.7, 259.0], [60.8, 259.0], [60.9, 259.0], [61.0, 259.0], [61.1, 259.0], [61.2, 261.0], [61.3, 261.0], [61.4, 261.0], [61.5, 261.0], [61.6, 261.0], [61.7, 261.0], [61.8, 261.0], [61.9, 261.0], [62.0, 261.0], [62.1, 261.0], [62.2, 261.0], [62.3, 262.0], [62.4, 262.0], [62.5, 262.0], [62.6, 262.0], [62.7, 262.0], [62.8, 262.0], [62.9, 262.0], [63.0, 262.0], [63.1, 262.0], [63.2, 262.0], [63.3, 262.0], [63.4, 263.0], [63.5, 263.0], [63.6, 263.0], [63.7, 263.0], [63.8, 263.0], [63.9, 263.0], [64.0, 263.0], [64.1, 263.0], [64.2, 263.0], [64.3, 263.0], [64.4, 263.0], [64.5, 276.0], [64.6, 276.0], [64.7, 276.0], [64.8, 276.0], [64.9, 276.0], [65.0, 276.0], [65.1, 276.0], [65.2, 276.0], [65.3, 276.0], [65.4, 276.0], [65.5, 276.0], [65.6, 284.0], [65.7, 284.0], [65.8, 284.0], [65.9, 284.0], [66.0, 284.0], [66.1, 284.0], [66.2, 284.0], [66.3, 284.0], [66.4, 284.0], [66.5, 284.0], [66.6, 284.0], [66.7, 287.0], [66.8, 287.0], [66.9, 287.0], [67.0, 287.0], [67.1, 287.0], [67.2, 287.0], [67.3, 287.0], [67.4, 287.0], [67.5, 287.0], [67.6, 287.0], [67.7, 287.0], [67.8, 289.0], [67.9, 289.0], [68.0, 289.0], [68.1, 289.0], [68.2, 289.0], [68.3, 289.0], [68.4, 289.0], [68.5, 289.0], [68.6, 289.0], [68.7, 289.0], [68.8, 289.0], [68.9, 289.0], [69.0, 289.0], [69.1, 289.0], [69.2, 289.0], [69.3, 289.0], [69.4, 289.0], [69.5, 289.0], [69.6, 289.0], [69.7, 289.0], [69.8, 289.0], [69.9, 289.0], [70.0, 289.0], [70.1, 299.0], [70.2, 299.0], [70.3, 299.0], [70.4, 299.0], [70.5, 299.0], [70.6, 299.0], [70.7, 299.0], [70.8, 299.0], [70.9, 299.0], [71.0, 299.0], [71.1, 299.0], [71.2, 302.0], [71.3, 302.0], [71.4, 302.0], [71.5, 302.0], [71.6, 302.0], [71.7, 302.0], [71.8, 302.0], [71.9, 302.0], [72.0, 302.0], [72.1, 302.0], [72.2, 302.0], [72.3, 304.0], [72.4, 304.0], [72.5, 304.0], [72.6, 304.0], [72.7, 304.0], [72.8, 304.0], [72.9, 304.0], [73.0, 304.0], [73.1, 304.0], [73.2, 304.0], [73.3, 304.0], [73.4, 306.0], [73.5, 306.0], [73.6, 306.0], [73.7, 306.0], [73.8, 306.0], [73.9, 306.0], [74.0, 306.0], [74.1, 306.0], [74.2, 306.0], [74.3, 306.0], [74.4, 306.0], [74.5, 307.0], [74.6, 307.0], [74.7, 307.0], [74.8, 307.0], [74.9, 307.0], [75.0, 307.0], [75.1, 307.0], [75.2, 307.0], [75.3, 307.0], [75.4, 307.0], [75.5, 307.0], [75.6, 307.0], [75.7, 307.0], [75.8, 307.0], [75.9, 307.0], [76.0, 307.0], [76.1, 307.0], [76.2, 307.0], [76.3, 307.0], [76.4, 307.0], [76.5, 307.0], [76.6, 307.0], [76.7, 310.0], [76.8, 310.0], [76.9, 310.0], [77.0, 310.0], [77.1, 310.0], [77.2, 310.0], [77.3, 310.0], [77.4, 310.0], [77.5, 310.0], [77.6, 310.0], [77.7, 310.0], [77.8, 310.0], [77.9, 310.0], [78.0, 310.0], [78.1, 310.0], [78.2, 310.0], [78.3, 310.0], [78.4, 310.0], [78.5, 310.0], [78.6, 310.0], [78.7, 310.0], [78.8, 310.0], [78.9, 311.0], [79.0, 311.0], [79.1, 311.0], [79.2, 311.0], [79.3, 311.0], [79.4, 311.0], [79.5, 311.0], [79.6, 311.0], [79.7, 311.0], [79.8, 311.0], [79.9, 311.0], [80.0, 311.0], [80.1, 311.0], [80.2, 311.0], [80.3, 311.0], [80.4, 311.0], [80.5, 311.0], [80.6, 311.0], [80.7, 311.0], [80.8, 311.0], [80.9, 311.0], [81.0, 311.0], [81.1, 311.0], [81.2, 316.0], [81.3, 316.0], [81.4, 316.0], [81.5, 316.0], [81.6, 316.0], [81.7, 316.0], [81.8, 316.0], [81.9, 316.0], [82.0, 316.0], [82.1, 316.0], [82.2, 316.0], [82.3, 319.0], [82.4, 319.0], [82.5, 319.0], [82.6, 319.0], [82.7, 319.0], [82.8, 319.0], [82.9, 319.0], [83.0, 319.0], [83.1, 319.0], [83.2, 319.0], [83.3, 319.0], [83.4, 322.0], [83.5, 322.0], [83.6, 322.0], [83.7, 322.0], [83.8, 322.0], [83.9, 322.0], [84.0, 322.0], [84.1, 322.0], [84.2, 322.0], [84.3, 322.0], [84.4, 322.0], [84.5, 325.0], [84.6, 325.0], [84.7, 325.0], [84.8, 325.0], [84.9, 325.0], [85.0, 325.0], [85.1, 325.0], [85.2, 325.0], [85.3, 325.0], [85.4, 325.0], [85.5, 325.0], [85.6, 325.0], [85.7, 325.0], [85.8, 325.0], [85.9, 325.0], [86.0, 325.0], [86.1, 325.0], [86.2, 325.0], [86.3, 325.0], [86.4, 325.0], [86.5, 325.0], [86.6, 325.0], [86.7, 331.0], [86.8, 331.0], [86.9, 331.0], [87.0, 331.0], [87.1, 331.0], [87.2, 331.0], [87.3, 331.0], [87.4, 331.0], [87.5, 331.0], [87.6, 331.0], [87.7, 331.0], [87.8, 332.0], [87.9, 332.0], [88.0, 332.0], [88.1, 332.0], [88.2, 332.0], [88.3, 332.0], [88.4, 332.0], [88.5, 332.0], [88.6, 332.0], [88.7, 332.0], [88.8, 332.0], [88.9, 339.0], [89.0, 339.0], [89.1, 339.0], [89.2, 339.0], [89.3, 339.0], [89.4, 339.0], [89.5, 339.0], [89.6, 339.0], [89.7, 339.0], [89.8, 339.0], [89.9, 339.0], [90.0, 339.0], [90.1, 342.0], [90.2, 342.0], [90.3, 342.0], [90.4, 342.0], [90.5, 342.0], [90.6, 342.0], [90.7, 342.0], [90.8, 342.0], [90.9, 342.0], [91.0, 342.0], [91.1, 342.0], [91.2, 364.0], [91.3, 364.0], [91.4, 364.0], [91.5, 364.0], [91.6, 364.0], [91.7, 364.0], [91.8, 364.0], [91.9, 364.0], [92.0, 364.0], [92.1, 364.0], [92.2, 364.0], [92.3, 364.0], [92.4, 364.0], [92.5, 364.0], [92.6, 364.0], [92.7, 364.0], [92.8, 364.0], [92.9, 364.0], [93.0, 364.0], [93.1, 364.0], [93.2, 364.0], [93.3, 364.0], [93.4, 366.0], [93.5, 366.0], [93.6, 366.0], [93.7, 366.0], [93.8, 366.0], [93.9, 366.0], [94.0, 366.0], [94.1, 366.0], [94.2, 366.0], [94.3, 366.0], [94.4, 366.0], [94.5, 371.0], [94.6, 371.0], [94.7, 371.0], [94.8, 371.0], [94.9, 371.0], [95.0, 371.0], [95.1, 371.0], [95.2, 371.0], [95.3, 371.0], [95.4, 371.0], [95.5, 371.0], [95.6, 384.0], [95.7, 384.0], [95.8, 384.0], [95.9, 384.0], [96.0, 384.0], [96.1, 384.0], [96.2, 384.0], [96.3, 384.0], [96.4, 384.0], [96.5, 384.0], [96.6, 384.0], [96.7, 386.0], [96.8, 386.0], [96.9, 386.0], [97.0, 386.0], [97.1, 386.0], [97.2, 386.0], [97.3, 386.0], [97.4, 386.0], [97.5, 386.0], [97.6, 386.0], [97.7, 386.0], [97.8, 448.0], [97.9, 448.0], [98.0, 448.0], [98.1, 448.0], [98.2, 448.0], [98.3, 448.0], [98.4, 448.0], [98.5, 448.0], [98.6, 448.0], [98.7, 448.0], [98.8, 448.0], [98.9, 457.0], [99.0, 457.0], [99.1, 457.0], [99.2, 457.0], [99.3, 457.0], [99.4, 457.0], [99.5, 457.0], [99.6, 457.0], [99.7, 457.0], [99.8, 457.0], [99.9, 457.0], [100.0, 457.0]], "isOverall": false, "label": "Get Specific Student", "isController": false}, {"data": [[0.0, 119.0], [0.1, 119.0], [0.2, 119.0], [0.3, 119.0], [0.4, 119.0], [0.5, 119.0], [0.6, 119.0], [0.7, 119.0], [0.8, 119.0], [0.9, 119.0], [1.0, 119.0], [1.1, 119.0], [1.2, 119.0], [1.3, 119.0], [1.4, 119.0], [1.5, 119.0], [1.6, 119.0], [1.7, 119.0], [1.8, 119.0], [1.9, 119.0], [2.0, 119.0], [2.1, 119.0], [2.2, 119.0], [2.3, 120.0], [2.4, 120.0], [2.5, 120.0], [2.6, 120.0], [2.7, 120.0], [2.8, 120.0], [2.9, 120.0], [3.0, 120.0], [3.1, 120.0], [3.2, 120.0], [3.3, 120.0], [3.4, 130.0], [3.5, 130.0], [3.6, 130.0], [3.7, 130.0], [3.8, 130.0], [3.9, 130.0], [4.0, 130.0], [4.1, 130.0], [4.2, 130.0], [4.3, 130.0], [4.4, 130.0], [4.5, 135.0], [4.6, 135.0], [4.7, 135.0], [4.8, 135.0], [4.9, 135.0], [5.0, 135.0], [5.1, 135.0], [5.2, 135.0], [5.3, 135.0], [5.4, 135.0], [5.5, 135.0], [5.6, 136.0], [5.7, 136.0], [5.8, 136.0], [5.9, 136.0], [6.0, 136.0], [6.1, 136.0], [6.2, 136.0], [6.3, 136.0], [6.4, 136.0], [6.5, 136.0], [6.6, 136.0], [6.7, 143.0], [6.8, 143.0], [6.9, 143.0], [7.0, 143.0], [7.1, 143.0], [7.2, 143.0], [7.3, 143.0], [7.4, 143.0], [7.5, 143.0], [7.6, 143.0], [7.7, 143.0], [7.8, 149.0], [7.9, 149.0], [8.0, 149.0], [8.1, 149.0], [8.2, 149.0], [8.3, 149.0], [8.4, 149.0], [8.5, 149.0], [8.6, 149.0], [8.7, 149.0], [8.8, 149.0], [8.9, 154.0], [9.0, 154.0], [9.1, 154.0], [9.2, 154.0], [9.3, 154.0], [9.4, 154.0], [9.5, 154.0], [9.6, 154.0], [9.7, 154.0], [9.8, 154.0], [9.9, 154.0], [10.0, 163.0], [10.1, 163.0], [10.2, 163.0], [10.3, 163.0], [10.4, 163.0], [10.5, 163.0], [10.6, 163.0], [10.7, 163.0], [10.8, 163.0], [10.9, 163.0], [11.0, 163.0], [11.1, 163.0], [11.2, 167.0], [11.3, 167.0], [11.4, 167.0], [11.5, 167.0], [11.6, 167.0], [11.7, 167.0], [11.8, 167.0], [11.9, 167.0], [12.0, 167.0], [12.1, 167.0], [12.2, 167.0], [12.3, 184.0], [12.4, 184.0], [12.5, 184.0], [12.6, 184.0], [12.7, 184.0], [12.8, 184.0], [12.9, 184.0], [13.0, 184.0], [13.1, 184.0], [13.2, 184.0], [13.3, 184.0], [13.4, 192.0], [13.5, 192.0], [13.6, 192.0], [13.7, 192.0], [13.8, 192.0], [13.9, 192.0], [14.0, 192.0], [14.1, 192.0], [14.2, 192.0], [14.3, 192.0], [14.4, 192.0], [14.5, 204.0], [14.6, 204.0], [14.7, 204.0], [14.8, 204.0], [14.9, 204.0], [15.0, 204.0], [15.1, 204.0], [15.2, 204.0], [15.3, 204.0], [15.4, 204.0], [15.5, 204.0], [15.6, 223.0], [15.7, 223.0], [15.8, 223.0], [15.9, 223.0], [16.0, 223.0], [16.1, 223.0], [16.2, 223.0], [16.3, 223.0], [16.4, 223.0], [16.5, 223.0], [16.6, 223.0], [16.7, 284.0], [16.8, 284.0], [16.9, 284.0], [17.0, 284.0], [17.1, 284.0], [17.2, 284.0], [17.3, 284.0], [17.4, 284.0], [17.5, 284.0], [17.6, 284.0], [17.7, 284.0], [17.8, 299.0], [17.9, 299.0], [18.0, 299.0], [18.1, 299.0], [18.2, 299.0], [18.3, 299.0], [18.4, 299.0], [18.5, 299.0], [18.6, 299.0], [18.7, 299.0], [18.8, 299.0], [18.9, 331.0], [19.0, 331.0], [19.1, 331.0], [19.2, 331.0], [19.3, 331.0], [19.4, 331.0], [19.5, 331.0], [19.6, 331.0], [19.7, 331.0], [19.8, 331.0], [19.9, 331.0], [20.0, 337.0], [20.1, 337.0], [20.2, 337.0], [20.3, 337.0], [20.4, 337.0], [20.5, 337.0], [20.6, 337.0], [20.7, 337.0], [20.8, 337.0], [20.9, 337.0], [21.0, 337.0], [21.1, 337.0], [21.2, 342.0], [21.3, 342.0], [21.4, 342.0], [21.5, 342.0], [21.6, 342.0], [21.7, 342.0], [21.8, 342.0], [21.9, 342.0], [22.0, 342.0], [22.1, 342.0], [22.2, 342.0], [22.3, 357.0], [22.4, 357.0], [22.5, 357.0], [22.6, 357.0], [22.7, 357.0], [22.8, 357.0], [22.9, 357.0], [23.0, 357.0], [23.1, 357.0], [23.2, 357.0], [23.3, 357.0], [23.4, 368.0], [23.5, 368.0], [23.6, 368.0], [23.7, 368.0], [23.8, 368.0], [23.9, 368.0], [24.0, 368.0], [24.1, 368.0], [24.2, 368.0], [24.3, 368.0], [24.4, 368.0], [24.5, 371.0], [24.6, 371.0], [24.7, 371.0], [24.8, 371.0], [24.9, 371.0], [25.0, 371.0], [25.1, 371.0], [25.2, 371.0], [25.3, 371.0], [25.4, 371.0], [25.5, 371.0], [25.6, 394.0], [25.7, 394.0], [25.8, 394.0], [25.9, 394.0], [26.0, 394.0], [26.1, 394.0], [26.2, 394.0], [26.3, 394.0], [26.4, 394.0], [26.5, 394.0], [26.6, 394.0], [26.7, 401.0], [26.8, 401.0], [26.9, 401.0], [27.0, 401.0], [27.1, 401.0], [27.2, 401.0], [27.3, 401.0], [27.4, 401.0], [27.5, 401.0], [27.6, 401.0], [27.7, 401.0], [27.8, 425.0], [27.9, 425.0], [28.0, 425.0], [28.1, 425.0], [28.2, 425.0], [28.3, 425.0], [28.4, 425.0], [28.5, 425.0], [28.6, 425.0], [28.7, 425.0], [28.8, 425.0], [28.9, 431.0], [29.0, 431.0], [29.1, 431.0], [29.2, 431.0], [29.3, 431.0], [29.4, 431.0], [29.5, 431.0], [29.6, 431.0], [29.7, 431.0], [29.8, 431.0], [29.9, 431.0], [30.0, 433.0], [30.1, 433.0], [30.2, 433.0], [30.3, 433.0], [30.4, 433.0], [30.5, 433.0], [30.6, 433.0], [30.7, 433.0], [30.8, 433.0], [30.9, 433.0], [31.0, 433.0], [31.1, 433.0], [31.2, 433.0], [31.3, 433.0], [31.4, 433.0], [31.5, 433.0], [31.6, 433.0], [31.7, 433.0], [31.8, 433.0], [31.9, 433.0], [32.0, 433.0], [32.1, 433.0], [32.2, 433.0], [32.3, 437.0], [32.4, 437.0], [32.5, 437.0], [32.6, 437.0], [32.7, 437.0], [32.8, 437.0], [32.9, 437.0], [33.0, 437.0], [33.1, 437.0], [33.2, 437.0], [33.3, 437.0], [33.4, 440.0], [33.5, 440.0], [33.6, 440.0], [33.7, 440.0], [33.8, 440.0], [33.9, 440.0], [34.0, 440.0], [34.1, 440.0], [34.2, 440.0], [34.3, 440.0], [34.4, 440.0], [34.5, 490.0], [34.6, 490.0], [34.7, 490.0], [34.8, 490.0], [34.9, 490.0], [35.0, 490.0], [35.1, 490.0], [35.2, 490.0], [35.3, 490.0], [35.4, 490.0], [35.5, 490.0], [35.6, 492.0], [35.7, 492.0], [35.8, 492.0], [35.9, 492.0], [36.0, 492.0], [36.1, 492.0], [36.2, 492.0], [36.3, 492.0], [36.4, 492.0], [36.5, 492.0], [36.6, 492.0], [36.7, 492.0], [36.8, 492.0], [36.9, 492.0], [37.0, 492.0], [37.1, 492.0], [37.2, 492.0], [37.3, 492.0], [37.4, 492.0], [37.5, 492.0], [37.6, 492.0], [37.7, 492.0], [37.8, 502.0], [37.9, 502.0], [38.0, 502.0], [38.1, 502.0], [38.2, 502.0], [38.3, 502.0], [38.4, 502.0], [38.5, 502.0], [38.6, 502.0], [38.7, 502.0], [38.8, 502.0], [38.9, 509.0], [39.0, 509.0], [39.1, 509.0], [39.2, 509.0], [39.3, 509.0], [39.4, 509.0], [39.5, 509.0], [39.6, 509.0], [39.7, 509.0], [39.8, 509.0], [39.9, 509.0], [40.0, 509.0], [40.1, 511.0], [40.2, 511.0], [40.3, 511.0], [40.4, 511.0], [40.5, 511.0], [40.6, 511.0], [40.7, 511.0], [40.8, 511.0], [40.9, 511.0], [41.0, 511.0], [41.1, 511.0], [41.2, 527.0], [41.3, 527.0], [41.4, 527.0], [41.5, 527.0], [41.6, 527.0], [41.7, 527.0], [41.8, 527.0], [41.9, 527.0], [42.0, 527.0], [42.1, 527.0], [42.2, 527.0], [42.3, 530.0], [42.4, 530.0], [42.5, 530.0], [42.6, 530.0], [42.7, 530.0], [42.8, 530.0], [42.9, 530.0], [43.0, 530.0], [43.1, 530.0], [43.2, 530.0], [43.3, 530.0], [43.4, 536.0], [43.5, 536.0], [43.6, 536.0], [43.7, 536.0], [43.8, 536.0], [43.9, 536.0], [44.0, 536.0], [44.1, 536.0], [44.2, 536.0], [44.3, 536.0], [44.4, 536.0], [44.5, 537.0], [44.6, 537.0], [44.7, 537.0], [44.8, 537.0], [44.9, 537.0], [45.0, 537.0], [45.1, 537.0], [45.2, 537.0], [45.3, 537.0], [45.4, 537.0], [45.5, 537.0], [45.6, 541.0], [45.7, 541.0], [45.8, 541.0], [45.9, 541.0], [46.0, 541.0], [46.1, 541.0], [46.2, 541.0], [46.3, 541.0], [46.4, 541.0], [46.5, 541.0], [46.6, 541.0], [46.7, 543.0], [46.8, 543.0], [46.9, 543.0], [47.0, 543.0], [47.1, 543.0], [47.2, 543.0], [47.3, 543.0], [47.4, 543.0], [47.5, 543.0], [47.6, 543.0], [47.7, 543.0], [47.8, 567.0], [47.9, 567.0], [48.0, 567.0], [48.1, 567.0], [48.2, 567.0], [48.3, 567.0], [48.4, 567.0], [48.5, 567.0], [48.6, 567.0], [48.7, 567.0], [48.8, 567.0], [48.9, 567.0], [49.0, 567.0], [49.1, 567.0], [49.2, 567.0], [49.3, 567.0], [49.4, 567.0], [49.5, 567.0], [49.6, 567.0], [49.7, 567.0], [49.8, 567.0], [49.9, 567.0], [50.0, 567.0], [50.1, 570.0], [50.2, 570.0], [50.3, 570.0], [50.4, 570.0], [50.5, 570.0], [50.6, 570.0], [50.7, 570.0], [50.8, 570.0], [50.9, 570.0], [51.0, 570.0], [51.1, 570.0], [51.2, 579.0], [51.3, 579.0], [51.4, 579.0], [51.5, 579.0], [51.6, 579.0], [51.7, 579.0], [51.8, 579.0], [51.9, 579.0], [52.0, 579.0], [52.1, 579.0], [52.2, 579.0], [52.3, 582.0], [52.4, 582.0], [52.5, 582.0], [52.6, 582.0], [52.7, 582.0], [52.8, 582.0], [52.9, 582.0], [53.0, 582.0], [53.1, 582.0], [53.2, 582.0], [53.3, 582.0], [53.4, 589.0], [53.5, 589.0], [53.6, 589.0], [53.7, 589.0], [53.8, 589.0], [53.9, 589.0], [54.0, 589.0], [54.1, 589.0], [54.2, 589.0], [54.3, 589.0], [54.4, 589.0], [54.5, 597.0], [54.6, 597.0], [54.7, 597.0], [54.8, 597.0], [54.9, 597.0], [55.0, 597.0], [55.1, 597.0], [55.2, 597.0], [55.3, 597.0], [55.4, 597.0], [55.5, 597.0], [55.6, 606.0], [55.7, 606.0], [55.8, 606.0], [55.9, 606.0], [56.0, 606.0], [56.1, 606.0], [56.2, 606.0], [56.3, 606.0], [56.4, 606.0], [56.5, 606.0], [56.6, 606.0], [56.7, 621.0], [56.8, 621.0], [56.9, 621.0], [57.0, 621.0], [57.1, 621.0], [57.2, 621.0], [57.3, 621.0], [57.4, 621.0], [57.5, 621.0], [57.6, 621.0], [57.7, 621.0], [57.8, 628.0], [57.9, 628.0], [58.0, 628.0], [58.1, 628.0], [58.2, 628.0], [58.3, 628.0], [58.4, 628.0], [58.5, 628.0], [58.6, 628.0], [58.7, 628.0], [58.8, 628.0], [58.9, 639.0], [59.0, 639.0], [59.1, 639.0], [59.2, 639.0], [59.3, 639.0], [59.4, 639.0], [59.5, 639.0], [59.6, 639.0], [59.7, 639.0], [59.8, 639.0], [59.9, 639.0], [60.0, 639.0], [60.1, 640.0], [60.2, 640.0], [60.3, 640.0], [60.4, 640.0], [60.5, 640.0], [60.6, 640.0], [60.7, 640.0], [60.8, 640.0], [60.9, 640.0], [61.0, 640.0], [61.1, 640.0], [61.2, 642.0], [61.3, 642.0], [61.4, 642.0], [61.5, 642.0], [61.6, 642.0], [61.7, 642.0], [61.8, 642.0], [61.9, 642.0], [62.0, 642.0], [62.1, 642.0], [62.2, 642.0], [62.3, 646.0], [62.4, 646.0], [62.5, 646.0], [62.6, 646.0], [62.7, 646.0], [62.8, 646.0], [62.9, 646.0], [63.0, 646.0], [63.1, 646.0], [63.2, 646.0], [63.3, 646.0], [63.4, 648.0], [63.5, 648.0], [63.6, 648.0], [63.7, 648.0], [63.8, 648.0], [63.9, 648.0], [64.0, 648.0], [64.1, 648.0], [64.2, 648.0], [64.3, 648.0], [64.4, 648.0], [64.5, 650.0], [64.6, 650.0], [64.7, 650.0], [64.8, 650.0], [64.9, 650.0], [65.0, 650.0], [65.1, 650.0], [65.2, 650.0], [65.3, 650.0], [65.4, 650.0], [65.5, 650.0], [65.6, 651.0], [65.7, 651.0], [65.8, 651.0], [65.9, 651.0], [66.0, 651.0], [66.1, 651.0], [66.2, 651.0], [66.3, 651.0], [66.4, 651.0], [66.5, 651.0], [66.6, 651.0], [66.7, 670.0], [66.8, 670.0], [66.9, 670.0], [67.0, 670.0], [67.1, 670.0], [67.2, 670.0], [67.3, 670.0], [67.4, 670.0], [67.5, 670.0], [67.6, 670.0], [67.7, 670.0], [67.8, 682.0], [67.9, 682.0], [68.0, 682.0], [68.1, 682.0], [68.2, 682.0], [68.3, 682.0], [68.4, 682.0], [68.5, 682.0], [68.6, 682.0], [68.7, 682.0], [68.8, 682.0], [68.9, 682.0], [69.0, 682.0], [69.1, 682.0], [69.2, 682.0], [69.3, 682.0], [69.4, 682.0], [69.5, 682.0], [69.6, 682.0], [69.7, 682.0], [69.8, 682.0], [69.9, 682.0], [70.0, 682.0], [70.1, 695.0], [70.2, 695.0], [70.3, 695.0], [70.4, 695.0], [70.5, 695.0], [70.6, 695.0], [70.7, 695.0], [70.8, 695.0], [70.9, 695.0], [71.0, 695.0], [71.1, 695.0], [71.2, 722.0], [71.3, 722.0], [71.4, 722.0], [71.5, 722.0], [71.6, 722.0], [71.7, 722.0], [71.8, 722.0], [71.9, 722.0], [72.0, 722.0], [72.1, 722.0], [72.2, 722.0], [72.3, 724.0], [72.4, 724.0], [72.5, 724.0], [72.6, 724.0], [72.7, 724.0], [72.8, 724.0], [72.9, 724.0], [73.0, 724.0], [73.1, 724.0], [73.2, 724.0], [73.3, 724.0], [73.4, 728.0], [73.5, 728.0], [73.6, 728.0], [73.7, 728.0], [73.8, 728.0], [73.9, 728.0], [74.0, 728.0], [74.1, 728.0], [74.2, 728.0], [74.3, 728.0], [74.4, 728.0], [74.5, 728.0], [74.6, 728.0], [74.7, 728.0], [74.8, 728.0], [74.9, 728.0], [75.0, 728.0], [75.1, 728.0], [75.2, 728.0], [75.3, 728.0], [75.4, 728.0], [75.5, 728.0], [75.6, 756.0], [75.7, 756.0], [75.8, 756.0], [75.9, 756.0], [76.0, 756.0], [76.1, 756.0], [76.2, 756.0], [76.3, 756.0], [76.4, 756.0], [76.5, 756.0], [76.6, 756.0], [76.7, 788.0], [76.8, 788.0], [76.9, 788.0], [77.0, 788.0], [77.1, 788.0], [77.2, 788.0], [77.3, 788.0], [77.4, 788.0], [77.5, 788.0], [77.6, 788.0], [77.7, 788.0], [77.8, 846.0], [77.9, 846.0], [78.0, 846.0], [78.1, 846.0], [78.2, 846.0], [78.3, 846.0], [78.4, 846.0], [78.5, 846.0], [78.6, 846.0], [78.7, 846.0], [78.8, 846.0], [78.9, 898.0], [79.0, 898.0], [79.1, 898.0], [79.2, 898.0], [79.3, 898.0], [79.4, 898.0], [79.5, 898.0], [79.6, 898.0], [79.7, 898.0], [79.8, 898.0], [79.9, 898.0], [80.0, 898.0], [80.1, 1064.0], [80.2, 1064.0], [80.3, 1064.0], [80.4, 1064.0], [80.5, 1064.0], [80.6, 1064.0], [80.7, 1064.0], [80.8, 1064.0], [80.9, 1064.0], [81.0, 1064.0], [81.1, 1064.0], [81.2, 1227.0], [81.3, 1227.0], [81.4, 1227.0], [81.5, 1227.0], [81.6, 1227.0], [81.7, 1227.0], [81.8, 1227.0], [81.9, 1227.0], [82.0, 1227.0], [82.1, 1227.0], [82.2, 1227.0], [82.3, 1305.0], [82.4, 1305.0], [82.5, 1305.0], [82.6, 1305.0], [82.7, 1305.0], [82.8, 1305.0], [82.9, 1305.0], [83.0, 1305.0], [83.1, 1305.0], [83.2, 1305.0], [83.3, 1305.0], [83.4, 1310.0], [83.5, 1310.0], [83.6, 1310.0], [83.7, 1310.0], [83.8, 1310.0], [83.9, 1310.0], [84.0, 1310.0], [84.1, 1310.0], [84.2, 1310.0], [84.3, 1310.0], [84.4, 1310.0], [84.5, 1371.0], [84.6, 1371.0], [84.7, 1371.0], [84.8, 1371.0], [84.9, 1371.0], [85.0, 1371.0], [85.1, 1371.0], [85.2, 1371.0], [85.3, 1371.0], [85.4, 1371.0], [85.5, 1371.0], [85.6, 1385.0], [85.7, 1385.0], [85.8, 1385.0], [85.9, 1385.0], [86.0, 1385.0], [86.1, 1385.0], [86.2, 1385.0], [86.3, 1385.0], [86.4, 1385.0], [86.5, 1385.0], [86.6, 1385.0], [86.7, 1393.0], [86.8, 1393.0], [86.9, 1393.0], [87.0, 1393.0], [87.1, 1393.0], [87.2, 1393.0], [87.3, 1393.0], [87.4, 1393.0], [87.5, 1393.0], [87.6, 1393.0], [87.7, 1393.0], [87.8, 1447.0], [87.9, 1447.0], [88.0, 1447.0], [88.1, 1447.0], [88.2, 1447.0], [88.3, 1447.0], [88.4, 1447.0], [88.5, 1447.0], [88.6, 1447.0], [88.7, 1447.0], [88.8, 1447.0], [88.9, 1468.0], [89.0, 1468.0], [89.1, 1468.0], [89.2, 1468.0], [89.3, 1468.0], [89.4, 1468.0], [89.5, 1468.0], [89.6, 1468.0], [89.7, 1468.0], [89.8, 1468.0], [89.9, 1468.0], [90.0, 1468.0], [90.1, 1835.0], [90.2, 1835.0], [90.3, 1835.0], [90.4, 1835.0], [90.5, 1835.0], [90.6, 1835.0], [90.7, 1835.0], [90.8, 1835.0], [90.9, 1835.0], [91.0, 1835.0], [91.1, 1835.0], [91.2, 2046.0], [91.3, 2046.0], [91.4, 2046.0], [91.5, 2046.0], [91.6, 2046.0], [91.7, 2046.0], [91.8, 2046.0], [91.9, 2046.0], [92.0, 2046.0], [92.1, 2046.0], [92.2, 2046.0], [92.3, 2136.0], [92.4, 2136.0], [92.5, 2136.0], [92.6, 2136.0], [92.7, 2136.0], [92.8, 2136.0], [92.9, 2136.0], [93.0, 2136.0], [93.1, 2136.0], [93.2, 2136.0], [93.3, 2136.0], [93.4, 2153.0], [93.5, 2153.0], [93.6, 2153.0], [93.7, 2153.0], [93.8, 2153.0], [93.9, 2153.0], [94.0, 2153.0], [94.1, 2153.0], [94.2, 2153.0], [94.3, 2153.0], [94.4, 2153.0], [94.5, 2363.0], [94.6, 2363.0], [94.7, 2363.0], [94.8, 2363.0], [94.9, 2363.0], [95.0, 2363.0], [95.1, 2363.0], [95.2, 2363.0], [95.3, 2363.0], [95.4, 2363.0], [95.5, 2363.0], [95.6, 2578.0], [95.7, 2578.0], [95.8, 2578.0], [95.9, 2578.0], [96.0, 2578.0], [96.1, 2578.0], [96.2, 2578.0], [96.3, 2578.0], [96.4, 2578.0], [96.5, 2578.0], [96.6, 2578.0], [96.7, 2603.0], [96.8, 2603.0], [96.9, 2603.0], [97.0, 2603.0], [97.1, 2603.0], [97.2, 2603.0], [97.3, 2603.0], [97.4, 2603.0], [97.5, 2603.0], [97.6, 2603.0], [97.7, 2603.0], [97.8, 2645.0], [97.9, 2645.0], [98.0, 2645.0], [98.1, 2645.0], [98.2, 2645.0], [98.3, 2645.0], [98.4, 2645.0], [98.5, 2645.0], [98.6, 2645.0], [98.7, 2645.0], [98.8, 2645.0], [98.9, 3428.0], [99.0, 3428.0], [99.1, 3428.0], [99.2, 3428.0], [99.3, 3428.0], [99.4, 3428.0], [99.5, 3428.0], [99.6, 3428.0], [99.7, 3428.0], [99.8, 3428.0], [99.9, 3428.0], [100.0, 3428.0]], "isOverall": false, "label": "Get Student", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 33.0, "series": [{"data": [[600.0, 1.0], [700.0, 3.0], [800.0, 5.0], [900.0, 9.0], [15300.0, 8.0], [15400.0, 2.0], [1000.0, 5.0], [1100.0, 11.0], [1200.0, 8.0], [1300.0, 7.0], [21000.0, 3.0], [1400.0, 4.0], [1500.0, 4.0], [1600.0, 2.0], [1700.0, 1.0], [1900.0, 1.0], [2000.0, 3.0], [200.0, 1.0], [3300.0, 2.0], [3200.0, 1.0], [3700.0, 1.0], [3600.0, 1.0], [3800.0, 1.0], [4000.0, 1.0], [4100.0, 1.0], [4300.0, 1.0], [300.0, 3.0]], "isOverall": false, "label": "Create Student", "isController": false}, {"data": [[0.0, 16.0], [300.0, 23.0], [400.0, 2.0], [200.0, 33.0], [100.0, 15.0], [500.0, 1.0]], "isOverall": false, "label": "Update Student", "isController": false}, {"data": [[0.0, 19.0], [300.0, 24.0], [200.0, 26.0], [400.0, 2.0], [100.0, 19.0]], "isOverall": false, "label": "Get Specific Student", "isController": false}, {"data": [[2100.0, 2.0], [2300.0, 1.0], [600.0, 14.0], [2500.0, 1.0], [2600.0, 2.0], [700.0, 6.0], [800.0, 2.0], [200.0, 4.0], [3400.0, 1.0], [1000.0, 1.0], [1200.0, 1.0], [300.0, 7.0], [1300.0, 5.0], [1400.0, 2.0], [400.0, 10.0], [100.0, 13.0], [1800.0, 1.0], [2000.0, 1.0], [500.0, 16.0]], "isOverall": false, "label": "Get Student", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 214.0, "series": [{"data": [[0.0, 214.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 101.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 39.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 6.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.1538461538461537, "minX": 1.63894308E12, "maxY": 27.345821325648423, "series": [{"data": [[1.63894314E12, 2.1538461538461537], [1.63894308E12, 27.345821325648423]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63894314E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 60.0, "minX": 1.0, "maxY": 21054.0, "series": [{"data": [[33.0, 1497.2222222222222], [32.0, 1631.3], [8.0, 15335.5], [2.0, 21051.0], [34.0, 1461.4], [35.0, 1387.0], [11.0, 15314.666666666666], [3.0, 21037.0], [13.0, 15427.0], [14.0, 3375.0], [1.0, 21054.0], [17.0, 3431.6666666666665], [5.0, 15331.5], [21.0, 1275.1764705882351], [22.0, 298.0], [6.0, 15316.0], [25.0, 968.0], [26.0, 1277.0], [27.0, 969.0], [29.0, 1175.3333333333335], [30.0, 1184.4], [31.0, 1484.6923076923076]], "isOverall": false, "label": "Create Student", "isController": false}, {"data": [[25.144444444444442, 3666.0999999999995]], "isOverall": false, "label": "Create Student-Aggregated", "isController": false}, {"data": [[32.0, 254.13333333333335], [33.0, 305.2857142857143], [2.0, 67.0], [34.0, 323.80000000000007], [3.0, 81.0], [4.0, 73.0], [5.0, 71.0], [6.0, 70.0], [8.0, 69.5], [9.0, 72.0], [10.0, 64.0], [11.0, 66.0], [12.0, 221.0], [13.0, 83.0], [14.0, 91.0], [15.0, 84.0], [1.0, 84.0], [17.0, 303.0], [20.0, 81.0], [21.0, 105.0], [23.0, 150.5], [26.0, 125.0], [27.0, 156.0], [28.0, 203.0], [29.0, 257.0], [30.0, 254.5], [31.0, 275.8333333333333]], "isOverall": false, "label": "Update Student", "isController": false}, {"data": [[26.777777777777782, 234.84444444444458]], "isOverall": false, "label": "Update Student-Aggregated", "isController": false}, {"data": [[33.0, 286.35294117647067], [32.0, 249.62500000000003], [2.0, 66.0], [34.0, 321.77777777777777], [35.0, 283.0], [3.0, 304.0], [4.0, 67.0], [5.0, 65.0], [6.0, 69.0], [7.0, 60.0], [8.0, 71.0], [9.0, 62.0], [10.0, 64.0], [11.0, 60.0], [12.0, 62.0], [13.0, 217.0], [14.0, 86.0], [15.0, 68.0], [16.0, 101.0], [1.0, 88.0], [17.0, 99.0], [18.0, 65.0], [19.0, 67.0], [20.0, 60.0], [21.0, 60.0], [22.0, 187.0], [23.0, 217.0], [25.0, 202.5], [26.0, 119.0], [27.0, 153.0], [28.0, 177.0], [29.0, 187.5], [30.0, 245.66666666666666], [31.0, 237.60000000000005]], "isOverall": false, "label": "Get Specific Student", "isController": false}, {"data": [[26.711111111111105, 218.5333333333333]], "isOverall": false, "label": "Get Specific Student-Aggregated", "isController": false}, {"data": [[33.0, 1217.9166666666667], [32.0, 620.0], [2.0, 3428.0], [34.0, 1229.7142857142856], [35.0, 1972.0], [3.0, 437.0], [5.0, 132.5], [6.0, 192.0], [8.0, 128.0], [10.0, 131.0], [11.0, 119.0], [13.0, 194.0], [14.0, 163.0], [15.0, 167.0], [1.0, 394.0], [17.0, 151.5], [21.0, 349.5], [22.0, 371.0], [23.0, 357.0], [25.0, 223.0], [26.0, 337.0], [27.0, 670.0], [29.0, 681.25], [30.0, 547.1666666666667], [31.0, 600.5833333333334]], "isOverall": false, "label": "Get Student", "isController": false}, {"data": [[27.111111111111107, 752.5444444444445]], "isOverall": false, "label": "Get Student-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 35.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 33.85, "minX": 1.63894308E12, "maxY": 18435.1, "series": [{"data": [[1.63894314E12, 1289.7333333333333], [1.63894308E12, 18435.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63894314E12, 33.85], [1.63894308E12, 1443.1]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63894314E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 77.33333333333333, "minX": 1.63894308E12, "maxY": 21047.333333333332, "series": [{"data": [[1.63894314E12, 21047.333333333332], [1.63894308E12, 3066.7471264367814]], "isOverall": false, "label": "Create Student", "isController": false}, {"data": [[1.63894314E12, 77.33333333333333], [1.63894308E12, 240.27586206896567]], "isOverall": false, "label": "Update Student", "isController": false}, {"data": [[1.63894314E12, 131.25], [1.63894308E12, 222.59302325581393]], "isOverall": false, "label": "Get Specific Student", "isController": false}, {"data": [[1.63894314E12, 1419.6666666666665], [1.63894308E12, 729.5402298850576]], "isOverall": false, "label": "Get Student", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63894314E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.63894308E12, "maxY": 3064.1264367816093, "series": [{"data": [[1.63894314E12, 0.0], [1.63894308E12, 3064.1264367816093]], "isOverall": false, "label": "Create Student", "isController": false}, {"data": [[1.63894314E12, 77.33333333333333], [1.63894308E12, 240.17241379310332]], "isOverall": false, "label": "Update Student", "isController": false}, {"data": [[1.63894314E12, 131.25], [1.63894308E12, 222.5232558139534]], "isOverall": false, "label": "Get Specific Student", "isController": false}, {"data": [[1.63894314E12, 1419.6666666666665], [1.63894308E12, 729.4252873563216]], "isOverall": false, "label": "Get Student", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63894314E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.63894308E12, "maxY": 21047.333333333332, "series": [{"data": [[1.63894314E12, 21047.333333333332], [1.63894308E12, 2870.379310344827]], "isOverall": false, "label": "Create Student", "isController": false}, {"data": [[1.63894314E12, 0.0], [1.63894308E12, 0.0]], "isOverall": false, "label": "Update Student", "isController": false}, {"data": [[1.63894314E12, 0.0], [1.63894308E12, 0.0]], "isOverall": false, "label": "Get Specific Student", "isController": false}, {"data": [[1.63894314E12, 1268.6666666666667], [1.63894308E12, 0.0]], "isOverall": false, "label": "Get Student", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63894314E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 60.0, "minX": 1.63894308E12, "maxY": 15429.0, "series": [{"data": [[1.63894314E12, 3428.0], [1.63894308E12, 15429.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63894314E12, 3428.0], [1.63894308E12, 1579.7999999999988]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63894314E12, 3428.0], [1.63894308E12, 15341.279999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63894314E12, 3428.0], [1.63894308E12, 3375.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63894314E12, 66.0], [1.63894308E12, 60.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63894314E12, 304.0], [1.63894308E12, 340.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63894314E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 77.5, "minX": 1.0, "maxY": 10566.0, "series": [{"data": [[32.0, 284.0], [8.0, 96.0], [2.0, 77.5], [34.0, 432.0], [9.0, 167.0], [38.0, 298.5], [10.0, 101.5], [44.0, 356.5], [3.0, 183.5], [13.0, 1029.0], [14.0, 131.0], [4.0, 187.5], [1.0, 3428.0], [18.0, 1240.0], [26.0, 173.0], [28.0, 366.5], [29.0, 386.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 10560.5], [4.0, 10566.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 44.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 33.5, "minX": 1.0, "maxY": 3428.0, "series": [{"data": [[32.0, 284.0], [8.0, 95.5], [2.0, 77.5], [34.0, 432.0], [9.0, 167.0], [38.0, 298.5], [10.0, 101.5], [44.0, 356.5], [3.0, 183.5], [13.0, 1028.0], [14.0, 131.0], [4.0, 187.0], [1.0, 3428.0], [18.0, 1225.5], [26.0, 173.0], [28.0, 366.5], [29.0, 386.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 42.0], [4.0, 33.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 44.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.63894308E12, "maxY": 5.85, "series": [{"data": [[1.63894314E12, 0.15], [1.63894308E12, 5.85]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63894314E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.63894308E12, "maxY": 4.333333333333333, "series": [{"data": [[1.63894314E12, 0.11666666666666667], [1.63894308E12, 4.333333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.63894308E12, 1.45]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.63894314E12, 0.05]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.63894314E12, 0.05]], "isOverall": false, "label": "405", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63894314E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.63894308E12, "maxY": 1.45, "series": [{"data": [[1.63894308E12, 1.45]], "isOverall": false, "label": "Create Student-success", "isController": false}, {"data": [[1.63894314E12, 0.05]], "isOverall": false, "label": "Create Student-failure", "isController": false}, {"data": [[1.63894314E12, 0.05], [1.63894308E12, 1.45]], "isOverall": false, "label": "Get Student-success", "isController": false}, {"data": [[1.63894314E12, 0.06666666666666667], [1.63894308E12, 1.4333333333333333]], "isOverall": false, "label": "Get Specific Student-success", "isController": false}, {"data": [[1.63894308E12, 1.45]], "isOverall": false, "label": "Update Student-success", "isController": false}, {"data": [[1.63894314E12, 0.05]], "isOverall": false, "label": "Update Student-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63894314E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.63894308E12, "maxY": 5.783333333333333, "series": [{"data": [[1.63894314E12, 0.11666666666666667], [1.63894308E12, 5.783333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.63894314E12, 0.1]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63894314E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

