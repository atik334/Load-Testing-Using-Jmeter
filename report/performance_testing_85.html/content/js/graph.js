/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 62.0, "minX": 0.0, "maxY": 21054.0, "series": [{"data": [[0.0, 510.0], [0.1, 510.0], [0.2, 510.0], [0.3, 510.0], [0.4, 510.0], [0.5, 510.0], [0.6, 510.0], [0.7, 510.0], [0.8, 510.0], [0.9, 510.0], [1.0, 510.0], [1.1, 510.0], [1.2, 614.0], [1.3, 614.0], [1.4, 614.0], [1.5, 614.0], [1.6, 614.0], [1.7, 614.0], [1.8, 614.0], [1.9, 614.0], [2.0, 614.0], [2.1, 614.0], [2.2, 614.0], [2.3, 614.0], [2.4, 615.0], [2.5, 615.0], [2.6, 615.0], [2.7, 615.0], [2.8, 615.0], [2.9, 615.0], [3.0, 615.0], [3.1, 615.0], [3.2, 615.0], [3.3, 615.0], [3.4, 615.0], [3.5, 615.0], [3.6, 625.0], [3.7, 625.0], [3.8, 625.0], [3.9, 625.0], [4.0, 625.0], [4.1, 625.0], [4.2, 625.0], [4.3, 625.0], [4.4, 625.0], [4.5, 625.0], [4.6, 625.0], [4.7, 625.0], [4.8, 684.0], [4.9, 684.0], [5.0, 684.0], [5.1, 684.0], [5.2, 684.0], [5.3, 684.0], [5.4, 684.0], [5.5, 684.0], [5.6, 684.0], [5.7, 684.0], [5.8, 684.0], [5.9, 684.0], [6.0, 684.0], [6.1, 684.0], [6.2, 684.0], [6.3, 684.0], [6.4, 684.0], [6.5, 684.0], [6.6, 684.0], [6.7, 684.0], [6.8, 684.0], [6.9, 684.0], [7.0, 684.0], [7.1, 693.0], [7.2, 693.0], [7.3, 693.0], [7.4, 693.0], [7.5, 693.0], [7.6, 693.0], [7.7, 693.0], [7.8, 693.0], [7.9, 693.0], [8.0, 693.0], [8.1, 693.0], [8.2, 693.0], [8.3, 699.0], [8.4, 699.0], [8.5, 699.0], [8.6, 699.0], [8.7, 699.0], [8.8, 699.0], [8.9, 699.0], [9.0, 699.0], [9.1, 699.0], [9.2, 699.0], [9.3, 699.0], [9.4, 699.0], [9.5, 715.0], [9.6, 715.0], [9.7, 715.0], [9.8, 715.0], [9.9, 715.0], [10.0, 715.0], [10.1, 715.0], [10.2, 715.0], [10.3, 715.0], [10.4, 715.0], [10.5, 715.0], [10.6, 724.0], [10.7, 724.0], [10.8, 724.0], [10.9, 724.0], [11.0, 724.0], [11.1, 724.0], [11.2, 724.0], [11.3, 724.0], [11.4, 724.0], [11.5, 724.0], [11.6, 724.0], [11.7, 724.0], [11.8, 729.0], [11.9, 729.0], [12.0, 729.0], [12.1, 729.0], [12.2, 729.0], [12.3, 729.0], [12.4, 729.0], [12.5, 729.0], [12.6, 729.0], [12.7, 729.0], [12.8, 729.0], [12.9, 729.0], [13.0, 730.0], [13.1, 730.0], [13.2, 730.0], [13.3, 730.0], [13.4, 730.0], [13.5, 730.0], [13.6, 730.0], [13.7, 730.0], [13.8, 730.0], [13.9, 730.0], [14.0, 730.0], [14.1, 730.0], [14.2, 736.0], [14.3, 736.0], [14.4, 736.0], [14.5, 736.0], [14.6, 736.0], [14.7, 736.0], [14.8, 736.0], [14.9, 736.0], [15.0, 736.0], [15.1, 736.0], [15.2, 736.0], [15.3, 740.0], [15.4, 740.0], [15.5, 740.0], [15.6, 740.0], [15.7, 740.0], [15.8, 740.0], [15.9, 740.0], [16.0, 740.0], [16.1, 740.0], [16.2, 740.0], [16.3, 740.0], [16.4, 740.0], [16.5, 742.0], [16.6, 742.0], [16.7, 742.0], [16.8, 742.0], [16.9, 742.0], [17.0, 742.0], [17.1, 742.0], [17.2, 742.0], [17.3, 742.0], [17.4, 742.0], [17.5, 742.0], [17.6, 742.0], [17.7, 748.0], [17.8, 748.0], [17.9, 748.0], [18.0, 748.0], [18.1, 748.0], [18.2, 748.0], [18.3, 748.0], [18.4, 748.0], [18.5, 748.0], [18.6, 748.0], [18.7, 748.0], [18.8, 748.0], [18.9, 763.0], [19.0, 763.0], [19.1, 763.0], [19.2, 763.0], [19.3, 763.0], [19.4, 763.0], [19.5, 763.0], [19.6, 763.0], [19.7, 763.0], [19.8, 763.0], [19.9, 763.0], [20.0, 768.0], [20.1, 768.0], [20.2, 768.0], [20.3, 768.0], [20.4, 768.0], [20.5, 768.0], [20.6, 768.0], [20.7, 768.0], [20.8, 768.0], [20.9, 768.0], [21.0, 768.0], [21.1, 768.0], [21.2, 783.0], [21.3, 783.0], [21.4, 783.0], [21.5, 783.0], [21.6, 783.0], [21.7, 783.0], [21.8, 783.0], [21.9, 783.0], [22.0, 783.0], [22.1, 783.0], [22.2, 783.0], [22.3, 783.0], [22.4, 786.0], [22.5, 786.0], [22.6, 786.0], [22.7, 786.0], [22.8, 786.0], [22.9, 786.0], [23.0, 786.0], [23.1, 786.0], [23.2, 786.0], [23.3, 786.0], [23.4, 786.0], [23.5, 786.0], [23.6, 797.0], [23.7, 797.0], [23.8, 797.0], [23.9, 797.0], [24.0, 797.0], [24.1, 797.0], [24.2, 797.0], [24.3, 797.0], [24.4, 797.0], [24.5, 797.0], [24.6, 797.0], [24.7, 797.0], [24.8, 802.0], [24.9, 802.0], [25.0, 802.0], [25.1, 802.0], [25.2, 802.0], [25.3, 802.0], [25.4, 802.0], [25.5, 802.0], [25.6, 802.0], [25.7, 802.0], [25.8, 802.0], [25.9, 815.0], [26.0, 815.0], [26.1, 815.0], [26.2, 815.0], [26.3, 815.0], [26.4, 815.0], [26.5, 815.0], [26.6, 815.0], [26.7, 815.0], [26.8, 815.0], [26.9, 815.0], [27.0, 815.0], [27.1, 816.0], [27.2, 816.0], [27.3, 816.0], [27.4, 816.0], [27.5, 816.0], [27.6, 816.0], [27.7, 816.0], [27.8, 816.0], [27.9, 816.0], [28.0, 816.0], [28.1, 816.0], [28.2, 816.0], [28.3, 825.0], [28.4, 825.0], [28.5, 825.0], [28.6, 825.0], [28.7, 825.0], [28.8, 825.0], [28.9, 825.0], [29.0, 825.0], [29.1, 825.0], [29.2, 825.0], [29.3, 825.0], [29.4, 825.0], [29.5, 831.0], [29.6, 831.0], [29.7, 831.0], [29.8, 831.0], [29.9, 831.0], [30.0, 831.0], [30.1, 831.0], [30.2, 831.0], [30.3, 831.0], [30.4, 831.0], [30.5, 831.0], [30.6, 848.0], [30.7, 848.0], [30.8, 848.0], [30.9, 848.0], [31.0, 848.0], [31.1, 848.0], [31.2, 848.0], [31.3, 848.0], [31.4, 848.0], [31.5, 848.0], [31.6, 848.0], [31.7, 848.0], [31.8, 855.0], [31.9, 855.0], [32.0, 855.0], [32.1, 855.0], [32.2, 855.0], [32.3, 855.0], [32.4, 855.0], [32.5, 855.0], [32.6, 855.0], [32.7, 855.0], [32.8, 855.0], [32.9, 855.0], [33.0, 863.0], [33.1, 863.0], [33.2, 863.0], [33.3, 863.0], [33.4, 863.0], [33.5, 863.0], [33.6, 863.0], [33.7, 863.0], [33.8, 863.0], [33.9, 863.0], [34.0, 863.0], [34.1, 863.0], [34.2, 888.0], [34.3, 888.0], [34.4, 888.0], [34.5, 888.0], [34.6, 888.0], [34.7, 888.0], [34.8, 888.0], [34.9, 888.0], [35.0, 888.0], [35.1, 888.0], [35.2, 888.0], [35.3, 892.0], [35.4, 892.0], [35.5, 892.0], [35.6, 892.0], [35.7, 892.0], [35.8, 892.0], [35.9, 892.0], [36.0, 892.0], [36.1, 892.0], [36.2, 892.0], [36.3, 892.0], [36.4, 892.0], [36.5, 897.0], [36.6, 897.0], [36.7, 897.0], [36.8, 897.0], [36.9, 897.0], [37.0, 897.0], [37.1, 897.0], [37.2, 897.0], [37.3, 897.0], [37.4, 897.0], [37.5, 897.0], [37.6, 897.0], [37.7, 904.0], [37.8, 904.0], [37.9, 904.0], [38.0, 904.0], [38.1, 904.0], [38.2, 904.0], [38.3, 904.0], [38.4, 904.0], [38.5, 904.0], [38.6, 904.0], [38.7, 904.0], [38.8, 904.0], [38.9, 913.0], [39.0, 913.0], [39.1, 913.0], [39.2, 913.0], [39.3, 913.0], [39.4, 913.0], [39.5, 913.0], [39.6, 913.0], [39.7, 913.0], [39.8, 913.0], [39.9, 913.0], [40.0, 913.0], [40.1, 917.0], [40.2, 917.0], [40.3, 917.0], [40.4, 917.0], [40.5, 917.0], [40.6, 917.0], [40.7, 917.0], [40.8, 917.0], [40.9, 917.0], [41.0, 917.0], [41.1, 917.0], [41.2, 919.0], [41.3, 919.0], [41.4, 919.0], [41.5, 919.0], [41.6, 919.0], [41.7, 919.0], [41.8, 919.0], [41.9, 919.0], [42.0, 919.0], [42.1, 919.0], [42.2, 919.0], [42.3, 919.0], [42.4, 929.0], [42.5, 929.0], [42.6, 929.0], [42.7, 929.0], [42.8, 929.0], [42.9, 929.0], [43.0, 929.0], [43.1, 929.0], [43.2, 929.0], [43.3, 929.0], [43.4, 929.0], [43.5, 929.0], [43.6, 929.0], [43.7, 929.0], [43.8, 929.0], [43.9, 929.0], [44.0, 929.0], [44.1, 929.0], [44.2, 929.0], [44.3, 929.0], [44.4, 929.0], [44.5, 929.0], [44.6, 929.0], [44.7, 929.0], [44.8, 935.0], [44.9, 935.0], [45.0, 935.0], [45.1, 935.0], [45.2, 935.0], [45.3, 935.0], [45.4, 935.0], [45.5, 935.0], [45.6, 935.0], [45.7, 935.0], [45.8, 935.0], [45.9, 948.0], [46.0, 948.0], [46.1, 948.0], [46.2, 948.0], [46.3, 948.0], [46.4, 948.0], [46.5, 948.0], [46.6, 948.0], [46.7, 948.0], [46.8, 948.0], [46.9, 948.0], [47.0, 948.0], [47.1, 975.0], [47.2, 975.0], [47.3, 975.0], [47.4, 975.0], [47.5, 975.0], [47.6, 975.0], [47.7, 975.0], [47.8, 975.0], [47.9, 975.0], [48.0, 975.0], [48.1, 975.0], [48.2, 975.0], [48.3, 1008.0], [48.4, 1008.0], [48.5, 1008.0], [48.6, 1008.0], [48.7, 1008.0], [48.8, 1008.0], [48.9, 1008.0], [49.0, 1008.0], [49.1, 1008.0], [49.2, 1008.0], [49.3, 1008.0], [49.4, 1008.0], [49.5, 1018.0], [49.6, 1018.0], [49.7, 1018.0], [49.8, 1018.0], [49.9, 1018.0], [50.0, 1018.0], [50.1, 1018.0], [50.2, 1018.0], [50.3, 1018.0], [50.4, 1018.0], [50.5, 1018.0], [50.6, 1031.0], [50.7, 1031.0], [50.8, 1031.0], [50.9, 1031.0], [51.0, 1031.0], [51.1, 1031.0], [51.2, 1031.0], [51.3, 1031.0], [51.4, 1031.0], [51.5, 1031.0], [51.6, 1031.0], [51.7, 1031.0], [51.8, 1031.0], [51.9, 1031.0], [52.0, 1031.0], [52.1, 1031.0], [52.2, 1031.0], [52.3, 1031.0], [52.4, 1031.0], [52.5, 1031.0], [52.6, 1031.0], [52.7, 1031.0], [52.8, 1031.0], [52.9, 1031.0], [53.0, 1037.0], [53.1, 1037.0], [53.2, 1037.0], [53.3, 1037.0], [53.4, 1037.0], [53.5, 1037.0], [53.6, 1037.0], [53.7, 1037.0], [53.8, 1037.0], [53.9, 1037.0], [54.0, 1037.0], [54.1, 1037.0], [54.2, 1048.0], [54.3, 1048.0], [54.4, 1048.0], [54.5, 1048.0], [54.6, 1048.0], [54.7, 1048.0], [54.8, 1048.0], [54.9, 1048.0], [55.0, 1048.0], [55.1, 1048.0], [55.2, 1048.0], [55.3, 1083.0], [55.4, 1083.0], [55.5, 1083.0], [55.6, 1083.0], [55.7, 1083.0], [55.8, 1083.0], [55.9, 1083.0], [56.0, 1083.0], [56.1, 1083.0], [56.2, 1083.0], [56.3, 1083.0], [56.4, 1083.0], [56.5, 1087.0], [56.6, 1087.0], [56.7, 1087.0], [56.8, 1087.0], [56.9, 1087.0], [57.0, 1087.0], [57.1, 1087.0], [57.2, 1087.0], [57.3, 1087.0], [57.4, 1087.0], [57.5, 1087.0], [57.6, 1087.0], [57.7, 1104.0], [57.8, 1104.0], [57.9, 1104.0], [58.0, 1104.0], [58.1, 1104.0], [58.2, 1104.0], [58.3, 1104.0], [58.4, 1104.0], [58.5, 1104.0], [58.6, 1104.0], [58.7, 1104.0], [58.8, 1104.0], [58.9, 1105.0], [59.0, 1105.0], [59.1, 1105.0], [59.2, 1105.0], [59.3, 1105.0], [59.4, 1105.0], [59.5, 1105.0], [59.6, 1105.0], [59.7, 1105.0], [59.8, 1105.0], [59.9, 1105.0], [60.0, 1105.0], [60.1, 1121.0], [60.2, 1121.0], [60.3, 1121.0], [60.4, 1121.0], [60.5, 1121.0], [60.6, 1121.0], [60.7, 1121.0], [60.8, 1121.0], [60.9, 1121.0], [61.0, 1121.0], [61.1, 1121.0], [61.2, 1138.0], [61.3, 1138.0], [61.4, 1138.0], [61.5, 1138.0], [61.6, 1138.0], [61.7, 1138.0], [61.8, 1138.0], [61.9, 1138.0], [62.0, 1138.0], [62.1, 1138.0], [62.2, 1138.0], [62.3, 1138.0], [62.4, 1146.0], [62.5, 1146.0], [62.6, 1146.0], [62.7, 1146.0], [62.8, 1146.0], [62.9, 1146.0], [63.0, 1146.0], [63.1, 1146.0], [63.2, 1146.0], [63.3, 1146.0], [63.4, 1146.0], [63.5, 1146.0], [63.6, 1147.0], [63.7, 1147.0], [63.8, 1147.0], [63.9, 1147.0], [64.0, 1147.0], [64.1, 1147.0], [64.2, 1147.0], [64.3, 1147.0], [64.4, 1147.0], [64.5, 1147.0], [64.6, 1147.0], [64.7, 1147.0], [64.8, 1148.0], [64.9, 1148.0], [65.0, 1148.0], [65.1, 1148.0], [65.2, 1148.0], [65.3, 1148.0], [65.4, 1148.0], [65.5, 1148.0], [65.6, 1148.0], [65.7, 1148.0], [65.8, 1148.0], [65.9, 1168.0], [66.0, 1168.0], [66.1, 1168.0], [66.2, 1168.0], [66.3, 1168.0], [66.4, 1168.0], [66.5, 1168.0], [66.6, 1168.0], [66.7, 1168.0], [66.8, 1168.0], [66.9, 1168.0], [67.0, 1168.0], [67.1, 1186.0], [67.2, 1186.0], [67.3, 1186.0], [67.4, 1186.0], [67.5, 1186.0], [67.6, 1186.0], [67.7, 1186.0], [67.8, 1186.0], [67.9, 1186.0], [68.0, 1186.0], [68.1, 1186.0], [68.2, 1186.0], [68.3, 1224.0], [68.4, 1224.0], [68.5, 1224.0], [68.6, 1224.0], [68.7, 1224.0], [68.8, 1224.0], [68.9, 1224.0], [69.0, 1224.0], [69.1, 1224.0], [69.2, 1224.0], [69.3, 1224.0], [69.4, 1224.0], [69.5, 1224.0], [69.6, 1224.0], [69.7, 1224.0], [69.8, 1224.0], [69.9, 1224.0], [70.0, 1224.0], [70.1, 1224.0], [70.2, 1224.0], [70.3, 1224.0], [70.4, 1224.0], [70.5, 1224.0], [70.6, 1224.0], [70.7, 1224.0], [70.8, 1224.0], [70.9, 1224.0], [71.0, 1224.0], [71.1, 1224.0], [71.2, 1224.0], [71.3, 1224.0], [71.4, 1224.0], [71.5, 1224.0], [71.6, 1224.0], [71.7, 1224.0], [71.8, 1235.0], [71.9, 1235.0], [72.0, 1235.0], [72.1, 1235.0], [72.2, 1235.0], [72.3, 1235.0], [72.4, 1235.0], [72.5, 1235.0], [72.6, 1235.0], [72.7, 1235.0], [72.8, 1235.0], [72.9, 1235.0], [73.0, 1314.0], [73.1, 1314.0], [73.2, 1314.0], [73.3, 1314.0], [73.4, 1314.0], [73.5, 1314.0], [73.6, 1314.0], [73.7, 1314.0], [73.8, 1314.0], [73.9, 1314.0], [74.0, 1314.0], [74.1, 1314.0], [74.2, 1334.0], [74.3, 1334.0], [74.4, 1334.0], [74.5, 1334.0], [74.6, 1334.0], [74.7, 1334.0], [74.8, 1334.0], [74.9, 1334.0], [75.0, 1334.0], [75.1, 1334.0], [75.2, 1334.0], [75.3, 1465.0], [75.4, 1465.0], [75.5, 1465.0], [75.6, 1465.0], [75.7, 1465.0], [75.8, 1465.0], [75.9, 1465.0], [76.0, 1465.0], [76.1, 1465.0], [76.2, 1465.0], [76.3, 1465.0], [76.4, 1465.0], [76.5, 1583.0], [76.6, 1583.0], [76.7, 1583.0], [76.8, 1583.0], [76.9, 1583.0], [77.0, 1583.0], [77.1, 1583.0], [77.2, 1583.0], [77.3, 1583.0], [77.4, 1583.0], [77.5, 1583.0], [77.6, 1583.0], [77.7, 1653.0], [77.8, 1653.0], [77.9, 1653.0], [78.0, 1653.0], [78.1, 1653.0], [78.2, 1653.0], [78.3, 1653.0], [78.4, 1653.0], [78.5, 1653.0], [78.6, 1653.0], [78.7, 1653.0], [78.8, 1653.0], [78.9, 1694.0], [79.0, 1694.0], [79.1, 1694.0], [79.2, 1694.0], [79.3, 1694.0], [79.4, 1694.0], [79.5, 1694.0], [79.6, 1694.0], [79.7, 1694.0], [79.8, 1694.0], [79.9, 1694.0], [80.0, 1694.0], [80.1, 3301.0], [80.2, 3301.0], [80.3, 3301.0], [80.4, 3301.0], [80.5, 3301.0], [80.6, 3301.0], [80.7, 3301.0], [80.8, 3301.0], [80.9, 3301.0], [81.0, 3301.0], [81.1, 3301.0], [81.2, 3422.0], [81.3, 3422.0], [81.4, 3422.0], [81.5, 3422.0], [81.6, 3422.0], [81.7, 3422.0], [81.8, 3422.0], [81.9, 3422.0], [82.0, 3422.0], [82.1, 3422.0], [82.2, 3422.0], [82.3, 3422.0], [82.4, 3524.0], [82.5, 3524.0], [82.6, 3524.0], [82.7, 3524.0], [82.8, 3524.0], [82.9, 3524.0], [83.0, 3524.0], [83.1, 3524.0], [83.2, 3524.0], [83.3, 3524.0], [83.4, 3524.0], [83.5, 3524.0], [83.6, 3564.0], [83.7, 3564.0], [83.8, 3564.0], [83.9, 3564.0], [84.0, 3564.0], [84.1, 3564.0], [84.2, 3564.0], [84.3, 3564.0], [84.4, 3564.0], [84.5, 3564.0], [84.6, 3564.0], [84.7, 3564.0], [84.8, 3650.0], [84.9, 3650.0], [85.0, 3650.0], [85.1, 3650.0], [85.2, 3650.0], [85.3, 3650.0], [85.4, 3650.0], [85.5, 3650.0], [85.6, 3650.0], [85.7, 3650.0], [85.8, 3650.0], [85.9, 3734.0], [86.0, 3734.0], [86.1, 3734.0], [86.2, 3734.0], [86.3, 3734.0], [86.4, 3734.0], [86.5, 3734.0], [86.6, 3734.0], [86.7, 3734.0], [86.8, 3734.0], [86.9, 3734.0], [87.0, 3734.0], [87.1, 3828.0], [87.2, 3828.0], [87.3, 3828.0], [87.4, 3828.0], [87.5, 3828.0], [87.6, 3828.0], [87.7, 3828.0], [87.8, 3828.0], [87.9, 3828.0], [88.0, 3828.0], [88.1, 3828.0], [88.2, 3828.0], [88.3, 3854.0], [88.4, 3854.0], [88.5, 3854.0], [88.6, 3854.0], [88.7, 3854.0], [88.8, 3854.0], [88.9, 3854.0], [89.0, 3854.0], [89.1, 3854.0], [89.2, 3854.0], [89.3, 3854.0], [89.4, 3854.0], [89.5, 15393.0], [89.6, 15393.0], [89.7, 15393.0], [89.8, 15393.0], [89.9, 15393.0], [90.0, 15393.0], [90.1, 15393.0], [90.2, 15393.0], [90.3, 15393.0], [90.4, 15393.0], [90.5, 15393.0], [90.6, 15498.0], [90.7, 15498.0], [90.8, 15498.0], [90.9, 15498.0], [91.0, 15498.0], [91.1, 15498.0], [91.2, 15498.0], [91.3, 15498.0], [91.4, 15498.0], [91.5, 15498.0], [91.6, 15498.0], [91.7, 15498.0], [91.8, 15652.0], [91.9, 15652.0], [92.0, 15652.0], [92.1, 15652.0], [92.2, 15652.0], [92.3, 15652.0], [92.4, 15652.0], [92.5, 15652.0], [92.6, 15652.0], [92.7, 15652.0], [92.8, 15652.0], [92.9, 15652.0], [93.0, 15672.0], [93.1, 15672.0], [93.2, 15672.0], [93.3, 15672.0], [93.4, 15672.0], [93.5, 15672.0], [93.6, 15672.0], [93.7, 15672.0], [93.8, 15672.0], [93.9, 15672.0], [94.0, 15672.0], [94.1, 15672.0], [94.2, 15896.0], [94.3, 15896.0], [94.4, 15896.0], [94.5, 15896.0], [94.6, 15896.0], [94.7, 15896.0], [94.8, 15896.0], [94.9, 15896.0], [95.0, 15896.0], [95.1, 15896.0], [95.2, 15896.0], [95.3, 15948.0], [95.4, 15948.0], [95.5, 15948.0], [95.6, 15948.0], [95.7, 15948.0], [95.8, 15948.0], [95.9, 15948.0], [96.0, 15948.0], [96.1, 15948.0], [96.2, 15948.0], [96.3, 15948.0], [96.4, 15948.0], [96.5, 18433.0], [96.6, 18433.0], [96.7, 18433.0], [96.8, 18433.0], [96.9, 18433.0], [97.0, 18433.0], [97.1, 18433.0], [97.2, 18433.0], [97.3, 18433.0], [97.4, 18433.0], [97.5, 18433.0], [97.6, 18433.0], [97.7, 18683.0], [97.8, 18683.0], [97.9, 18683.0], [98.0, 18683.0], [98.1, 18683.0], [98.2, 18683.0], [98.3, 18683.0], [98.4, 18683.0], [98.5, 18683.0], [98.6, 18683.0], [98.7, 18683.0], [98.8, 18683.0], [98.9, 21054.0], [99.0, 21054.0], [99.1, 21054.0], [99.2, 21054.0], [99.3, 21054.0], [99.4, 21054.0], [99.5, 21054.0], [99.6, 21054.0], [99.7, 21054.0], [99.8, 21054.0], [99.9, 21054.0]], "isOverall": false, "label": "Create Student", "isController": false}, {"data": [[0.0, 77.0], [0.1, 77.0], [0.2, 77.0], [0.3, 77.0], [0.4, 77.0], [0.5, 77.0], [0.6, 77.0], [0.7, 77.0], [0.8, 77.0], [0.9, 77.0], [1.0, 77.0], [1.1, 77.0], [1.2, 82.0], [1.3, 82.0], [1.4, 82.0], [1.5, 82.0], [1.6, 82.0], [1.7, 82.0], [1.8, 82.0], [1.9, 82.0], [2.0, 82.0], [2.1, 82.0], [2.2, 82.0], [2.3, 82.0], [2.4, 83.0], [2.5, 83.0], [2.6, 83.0], [2.7, 83.0], [2.8, 83.0], [2.9, 83.0], [3.0, 83.0], [3.1, 83.0], [3.2, 83.0], [3.3, 83.0], [3.4, 83.0], [3.5, 83.0], [3.6, 83.0], [3.7, 83.0], [3.8, 83.0], [3.9, 83.0], [4.0, 83.0], [4.1, 83.0], [4.2, 83.0], [4.3, 83.0], [4.4, 83.0], [4.5, 83.0], [4.6, 83.0], [4.7, 83.0], [4.8, 83.0], [4.9, 83.0], [5.0, 83.0], [5.1, 83.0], [5.2, 83.0], [5.3, 83.0], [5.4, 83.0], [5.5, 83.0], [5.6, 83.0], [5.7, 83.0], [5.8, 83.0], [5.9, 89.0], [6.0, 89.0], [6.1, 89.0], [6.2, 89.0], [6.3, 89.0], [6.4, 89.0], [6.5, 89.0], [6.6, 89.0], [6.7, 89.0], [6.8, 89.0], [6.9, 89.0], [7.0, 89.0], [7.1, 92.0], [7.2, 92.0], [7.3, 92.0], [7.4, 92.0], [7.5, 92.0], [7.6, 92.0], [7.7, 92.0], [7.8, 92.0], [7.9, 92.0], [8.0, 92.0], [8.1, 92.0], [8.2, 92.0], [8.3, 92.0], [8.4, 92.0], [8.5, 92.0], [8.6, 92.0], [8.7, 92.0], [8.8, 92.0], [8.9, 92.0], [9.0, 92.0], [9.1, 92.0], [9.2, 92.0], [9.3, 92.0], [9.4, 92.0], [9.5, 93.0], [9.6, 93.0], [9.7, 93.0], [9.8, 93.0], [9.9, 93.0], [10.0, 93.0], [10.1, 93.0], [10.2, 93.0], [10.3, 93.0], [10.4, 93.0], [10.5, 93.0], [10.6, 95.0], [10.7, 95.0], [10.8, 95.0], [10.9, 95.0], [11.0, 95.0], [11.1, 95.0], [11.2, 95.0], [11.3, 95.0], [11.4, 95.0], [11.5, 95.0], [11.6, 95.0], [11.7, 95.0], [11.8, 99.0], [11.9, 99.0], [12.0, 99.0], [12.1, 99.0], [12.2, 99.0], [12.3, 99.0], [12.4, 99.0], [12.5, 99.0], [12.6, 99.0], [12.7, 99.0], [12.8, 99.0], [12.9, 99.0], [13.0, 101.0], [13.1, 101.0], [13.2, 101.0], [13.3, 101.0], [13.4, 101.0], [13.5, 101.0], [13.6, 101.0], [13.7, 101.0], [13.8, 101.0], [13.9, 101.0], [14.0, 101.0], [14.1, 101.0], [14.2, 104.0], [14.3, 104.0], [14.4, 104.0], [14.5, 104.0], [14.6, 104.0], [14.7, 104.0], [14.8, 104.0], [14.9, 104.0], [15.0, 104.0], [15.1, 104.0], [15.2, 104.0], [15.3, 105.0], [15.4, 105.0], [15.5, 105.0], [15.6, 105.0], [15.7, 105.0], [15.8, 105.0], [15.9, 105.0], [16.0, 105.0], [16.1, 105.0], [16.2, 105.0], [16.3, 105.0], [16.4, 105.0], [16.5, 106.0], [16.6, 106.0], [16.7, 106.0], [16.8, 106.0], [16.9, 106.0], [17.0, 106.0], [17.1, 106.0], [17.2, 106.0], [17.3, 106.0], [17.4, 106.0], [17.5, 106.0], [17.6, 106.0], [17.7, 107.0], [17.8, 107.0], [17.9, 107.0], [18.0, 107.0], [18.1, 107.0], [18.2, 107.0], [18.3, 107.0], [18.4, 107.0], [18.5, 107.0], [18.6, 107.0], [18.7, 107.0], [18.8, 107.0], [18.9, 107.0], [19.0, 107.0], [19.1, 107.0], [19.2, 107.0], [19.3, 107.0], [19.4, 107.0], [19.5, 107.0], [19.6, 107.0], [19.7, 107.0], [19.8, 107.0], [19.9, 107.0], [20.0, 113.0], [20.1, 113.0], [20.2, 113.0], [20.3, 113.0], [20.4, 113.0], [20.5, 113.0], [20.6, 113.0], [20.7, 113.0], [20.8, 113.0], [20.9, 113.0], [21.0, 113.0], [21.1, 113.0], [21.2, 123.0], [21.3, 123.0], [21.4, 123.0], [21.5, 123.0], [21.6, 123.0], [21.7, 123.0], [21.8, 123.0], [21.9, 123.0], [22.0, 123.0], [22.1, 123.0], [22.2, 123.0], [22.3, 123.0], [22.4, 136.0], [22.5, 136.0], [22.6, 136.0], [22.7, 136.0], [22.8, 136.0], [22.9, 136.0], [23.0, 136.0], [23.1, 136.0], [23.2, 136.0], [23.3, 136.0], [23.4, 136.0], [23.5, 136.0], [23.6, 144.0], [23.7, 144.0], [23.8, 144.0], [23.9, 144.0], [24.0, 144.0], [24.1, 144.0], [24.2, 144.0], [24.3, 144.0], [24.4, 144.0], [24.5, 144.0], [24.6, 144.0], [24.7, 144.0], [24.8, 149.0], [24.9, 149.0], [25.0, 149.0], [25.1, 149.0], [25.2, 149.0], [25.3, 149.0], [25.4, 149.0], [25.5, 149.0], [25.6, 149.0], [25.7, 149.0], [25.8, 149.0], [25.9, 151.0], [26.0, 151.0], [26.1, 151.0], [26.2, 151.0], [26.3, 151.0], [26.4, 151.0], [26.5, 151.0], [26.6, 151.0], [26.7, 151.0], [26.8, 151.0], [26.9, 151.0], [27.0, 151.0], [27.1, 152.0], [27.2, 152.0], [27.3, 152.0], [27.4, 152.0], [27.5, 152.0], [27.6, 152.0], [27.7, 152.0], [27.8, 152.0], [27.9, 152.0], [28.0, 152.0], [28.1, 152.0], [28.2, 152.0], [28.3, 154.0], [28.4, 154.0], [28.5, 154.0], [28.6, 154.0], [28.7, 154.0], [28.8, 154.0], [28.9, 154.0], [29.0, 154.0], [29.1, 154.0], [29.2, 154.0], [29.3, 154.0], [29.4, 154.0], [29.5, 155.0], [29.6, 155.0], [29.7, 155.0], [29.8, 155.0], [29.9, 155.0], [30.0, 155.0], [30.1, 155.0], [30.2, 155.0], [30.3, 155.0], [30.4, 155.0], [30.5, 155.0], [30.6, 156.0], [30.7, 156.0], [30.8, 156.0], [30.9, 156.0], [31.0, 156.0], [31.1, 156.0], [31.2, 156.0], [31.3, 156.0], [31.4, 156.0], [31.5, 156.0], [31.6, 156.0], [31.7, 156.0], [31.8, 163.0], [31.9, 163.0], [32.0, 163.0], [32.1, 163.0], [32.2, 163.0], [32.3, 163.0], [32.4, 163.0], [32.5, 163.0], [32.6, 163.0], [32.7, 163.0], [32.8, 163.0], [32.9, 163.0], [33.0, 164.0], [33.1, 164.0], [33.2, 164.0], [33.3, 164.0], [33.4, 164.0], [33.5, 164.0], [33.6, 164.0], [33.7, 164.0], [33.8, 164.0], [33.9, 164.0], [34.0, 164.0], [34.1, 164.0], [34.2, 167.0], [34.3, 167.0], [34.4, 167.0], [34.5, 167.0], [34.6, 167.0], [34.7, 167.0], [34.8, 167.0], [34.9, 167.0], [35.0, 167.0], [35.1, 167.0], [35.2, 167.0], [35.3, 177.0], [35.4, 177.0], [35.5, 177.0], [35.6, 177.0], [35.7, 177.0], [35.8, 177.0], [35.9, 177.0], [36.0, 177.0], [36.1, 177.0], [36.2, 177.0], [36.3, 177.0], [36.4, 177.0], [36.5, 177.0], [36.6, 177.0], [36.7, 177.0], [36.8, 177.0], [36.9, 177.0], [37.0, 177.0], [37.1, 177.0], [37.2, 177.0], [37.3, 177.0], [37.4, 177.0], [37.5, 177.0], [37.6, 177.0], [37.7, 178.0], [37.8, 178.0], [37.9, 178.0], [38.0, 178.0], [38.1, 178.0], [38.2, 178.0], [38.3, 178.0], [38.4, 178.0], [38.5, 178.0], [38.6, 178.0], [38.7, 178.0], [38.8, 178.0], [38.9, 185.0], [39.0, 185.0], [39.1, 185.0], [39.2, 185.0], [39.3, 185.0], [39.4, 185.0], [39.5, 185.0], [39.6, 185.0], [39.7, 185.0], [39.8, 185.0], [39.9, 185.0], [40.0, 188.0], [40.1, 188.0], [40.2, 188.0], [40.3, 188.0], [40.4, 188.0], [40.5, 188.0], [40.6, 188.0], [40.7, 188.0], [40.8, 188.0], [40.9, 188.0], [41.0, 188.0], [41.1, 188.0], [41.2, 189.0], [41.3, 189.0], [41.4, 189.0], [41.5, 189.0], [41.6, 189.0], [41.7, 189.0], [41.8, 189.0], [41.9, 189.0], [42.0, 189.0], [42.1, 189.0], [42.2, 189.0], [42.3, 189.0], [42.4, 200.0], [42.5, 200.0], [42.6, 200.0], [42.7, 200.0], [42.8, 200.0], [42.9, 200.0], [43.0, 200.0], [43.1, 200.0], [43.2, 200.0], [43.3, 200.0], [43.4, 200.0], [43.5, 200.0], [43.6, 206.0], [43.7, 206.0], [43.8, 206.0], [43.9, 206.0], [44.0, 206.0], [44.1, 206.0], [44.2, 206.0], [44.3, 206.0], [44.4, 206.0], [44.5, 206.0], [44.6, 206.0], [44.7, 206.0], [44.8, 206.0], [44.9, 206.0], [45.0, 206.0], [45.1, 206.0], [45.2, 206.0], [45.3, 206.0], [45.4, 206.0], [45.5, 206.0], [45.6, 206.0], [45.7, 206.0], [45.8, 206.0], [45.9, 213.0], [46.0, 213.0], [46.1, 213.0], [46.2, 213.0], [46.3, 213.0], [46.4, 213.0], [46.5, 213.0], [46.6, 213.0], [46.7, 213.0], [46.8, 213.0], [46.9, 213.0], [47.0, 213.0], [47.1, 213.0], [47.2, 213.0], [47.3, 213.0], [47.4, 213.0], [47.5, 213.0], [47.6, 213.0], [47.7, 213.0], [47.8, 213.0], [47.9, 213.0], [48.0, 213.0], [48.1, 213.0], [48.2, 213.0], [48.3, 217.0], [48.4, 217.0], [48.5, 217.0], [48.6, 217.0], [48.7, 217.0], [48.8, 217.0], [48.9, 217.0], [49.0, 217.0], [49.1, 217.0], [49.2, 217.0], [49.3, 217.0], [49.4, 217.0], [49.5, 224.0], [49.6, 224.0], [49.7, 224.0], [49.8, 224.0], [49.9, 224.0], [50.0, 224.0], [50.1, 224.0], [50.2, 224.0], [50.3, 224.0], [50.4, 224.0], [50.5, 224.0], [50.6, 226.0], [50.7, 226.0], [50.8, 226.0], [50.9, 226.0], [51.0, 226.0], [51.1, 226.0], [51.2, 226.0], [51.3, 226.0], [51.4, 226.0], [51.5, 226.0], [51.6, 226.0], [51.7, 226.0], [51.8, 233.0], [51.9, 233.0], [52.0, 233.0], [52.1, 233.0], [52.2, 233.0], [52.3, 233.0], [52.4, 233.0], [52.5, 233.0], [52.6, 233.0], [52.7, 233.0], [52.8, 233.0], [52.9, 233.0], [53.0, 236.0], [53.1, 236.0], [53.2, 236.0], [53.3, 236.0], [53.4, 236.0], [53.5, 236.0], [53.6, 236.0], [53.7, 236.0], [53.8, 236.0], [53.9, 236.0], [54.0, 236.0], [54.1, 236.0], [54.2, 237.0], [54.3, 237.0], [54.4, 237.0], [54.5, 237.0], [54.6, 237.0], [54.7, 237.0], [54.8, 237.0], [54.9, 237.0], [55.0, 237.0], [55.1, 237.0], [55.2, 237.0], [55.3, 237.0], [55.4, 237.0], [55.5, 237.0], [55.6, 237.0], [55.7, 237.0], [55.8, 237.0], [55.9, 237.0], [56.0, 237.0], [56.1, 237.0], [56.2, 237.0], [56.3, 237.0], [56.4, 237.0], [56.5, 237.0], [56.6, 237.0], [56.7, 237.0], [56.8, 237.0], [56.9, 237.0], [57.0, 237.0], [57.1, 237.0], [57.2, 237.0], [57.3, 237.0], [57.4, 237.0], [57.5, 237.0], [57.6, 237.0], [57.7, 240.0], [57.8, 240.0], [57.9, 240.0], [58.0, 240.0], [58.1, 240.0], [58.2, 240.0], [58.3, 240.0], [58.4, 240.0], [58.5, 240.0], [58.6, 240.0], [58.7, 240.0], [58.8, 240.0], [58.9, 241.0], [59.0, 241.0], [59.1, 241.0], [59.2, 241.0], [59.3, 241.0], [59.4, 241.0], [59.5, 241.0], [59.6, 241.0], [59.7, 241.0], [59.8, 241.0], [59.9, 241.0], [60.0, 241.0], [60.1, 242.0], [60.2, 242.0], [60.3, 242.0], [60.4, 242.0], [60.5, 242.0], [60.6, 242.0], [60.7, 242.0], [60.8, 242.0], [60.9, 242.0], [61.0, 242.0], [61.1, 242.0], [61.2, 244.0], [61.3, 244.0], [61.4, 244.0], [61.5, 244.0], [61.6, 244.0], [61.7, 244.0], [61.8, 244.0], [61.9, 244.0], [62.0, 244.0], [62.1, 244.0], [62.2, 244.0], [62.3, 244.0], [62.4, 245.0], [62.5, 245.0], [62.6, 245.0], [62.7, 245.0], [62.8, 245.0], [62.9, 245.0], [63.0, 245.0], [63.1, 245.0], [63.2, 245.0], [63.3, 245.0], [63.4, 245.0], [63.5, 245.0], [63.6, 249.0], [63.7, 249.0], [63.8, 249.0], [63.9, 249.0], [64.0, 249.0], [64.1, 249.0], [64.2, 249.0], [64.3, 249.0], [64.4, 249.0], [64.5, 249.0], [64.6, 249.0], [64.7, 249.0], [64.8, 250.0], [64.9, 250.0], [65.0, 250.0], [65.1, 250.0], [65.2, 250.0], [65.3, 250.0], [65.4, 250.0], [65.5, 250.0], [65.6, 250.0], [65.7, 250.0], [65.8, 250.0], [65.9, 251.0], [66.0, 251.0], [66.1, 251.0], [66.2, 251.0], [66.3, 251.0], [66.4, 251.0], [66.5, 251.0], [66.6, 251.0], [66.7, 251.0], [66.8, 251.0], [66.9, 251.0], [67.0, 251.0], [67.1, 257.0], [67.2, 257.0], [67.3, 257.0], [67.4, 257.0], [67.5, 257.0], [67.6, 257.0], [67.7, 257.0], [67.8, 257.0], [67.9, 257.0], [68.0, 257.0], [68.1, 257.0], [68.2, 257.0], [68.3, 267.0], [68.4, 267.0], [68.5, 267.0], [68.6, 267.0], [68.7, 267.0], [68.8, 267.0], [68.9, 267.0], [69.0, 267.0], [69.1, 267.0], [69.2, 267.0], [69.3, 267.0], [69.4, 267.0], [69.5, 271.0], [69.6, 271.0], [69.7, 271.0], [69.8, 271.0], [69.9, 271.0], [70.0, 271.0], [70.1, 271.0], [70.2, 271.0], [70.3, 271.0], [70.4, 271.0], [70.5, 271.0], [70.6, 273.0], [70.7, 273.0], [70.8, 273.0], [70.9, 273.0], [71.0, 273.0], [71.1, 273.0], [71.2, 273.0], [71.3, 273.0], [71.4, 273.0], [71.5, 273.0], [71.6, 273.0], [71.7, 273.0], [71.8, 278.0], [71.9, 278.0], [72.0, 278.0], [72.1, 278.0], [72.2, 278.0], [72.3, 278.0], [72.4, 278.0], [72.5, 278.0], [72.6, 278.0], [72.7, 278.0], [72.8, 278.0], [72.9, 278.0], [73.0, 281.0], [73.1, 281.0], [73.2, 281.0], [73.3, 281.0], [73.4, 281.0], [73.5, 281.0], [73.6, 281.0], [73.7, 281.0], [73.8, 281.0], [73.9, 281.0], [74.0, 281.0], [74.1, 281.0], [74.2, 284.0], [74.3, 284.0], [74.4, 284.0], [74.5, 284.0], [74.6, 284.0], [74.7, 284.0], [74.8, 284.0], [74.9, 284.0], [75.0, 284.0], [75.1, 284.0], [75.2, 284.0], [75.3, 290.0], [75.4, 290.0], [75.5, 290.0], [75.6, 290.0], [75.7, 290.0], [75.8, 290.0], [75.9, 290.0], [76.0, 290.0], [76.1, 290.0], [76.2, 290.0], [76.3, 290.0], [76.4, 290.0], [76.5, 291.0], [76.6, 291.0], [76.7, 291.0], [76.8, 291.0], [76.9, 291.0], [77.0, 291.0], [77.1, 291.0], [77.2, 291.0], [77.3, 291.0], [77.4, 291.0], [77.5, 291.0], [77.6, 291.0], [77.7, 293.0], [77.8, 293.0], [77.9, 293.0], [78.0, 293.0], [78.1, 293.0], [78.2, 293.0], [78.3, 293.0], [78.4, 293.0], [78.5, 293.0], [78.6, 293.0], [78.7, 293.0], [78.8, 293.0], [78.9, 304.0], [79.0, 304.0], [79.1, 304.0], [79.2, 304.0], [79.3, 304.0], [79.4, 304.0], [79.5, 304.0], [79.6, 304.0], [79.7, 304.0], [79.8, 304.0], [79.9, 304.0], [80.0, 309.0], [80.1, 309.0], [80.2, 309.0], [80.3, 309.0], [80.4, 309.0], [80.5, 309.0], [80.6, 309.0], [80.7, 309.0], [80.8, 309.0], [80.9, 309.0], [81.0, 309.0], [81.1, 309.0], [81.2, 312.0], [81.3, 312.0], [81.4, 312.0], [81.5, 312.0], [81.6, 312.0], [81.7, 312.0], [81.8, 312.0], [81.9, 312.0], [82.0, 312.0], [82.1, 312.0], [82.2, 312.0], [82.3, 312.0], [82.4, 315.0], [82.5, 315.0], [82.6, 315.0], [82.7, 315.0], [82.8, 315.0], [82.9, 315.0], [83.0, 315.0], [83.1, 315.0], [83.2, 315.0], [83.3, 315.0], [83.4, 315.0], [83.5, 315.0], [83.6, 316.0], [83.7, 316.0], [83.8, 316.0], [83.9, 316.0], [84.0, 316.0], [84.1, 316.0], [84.2, 316.0], [84.3, 316.0], [84.4, 316.0], [84.5, 316.0], [84.6, 316.0], [84.7, 316.0], [84.8, 332.0], [84.9, 332.0], [85.0, 332.0], [85.1, 332.0], [85.2, 332.0], [85.3, 332.0], [85.4, 332.0], [85.5, 332.0], [85.6, 332.0], [85.7, 332.0], [85.8, 332.0], [85.9, 335.0], [86.0, 335.0], [86.1, 335.0], [86.2, 335.0], [86.3, 335.0], [86.4, 335.0], [86.5, 335.0], [86.6, 335.0], [86.7, 335.0], [86.8, 335.0], [86.9, 335.0], [87.0, 335.0], [87.1, 353.0], [87.2, 353.0], [87.3, 353.0], [87.4, 353.0], [87.5, 353.0], [87.6, 353.0], [87.7, 353.0], [87.8, 353.0], [87.9, 353.0], [88.0, 353.0], [88.1, 353.0], [88.2, 353.0], [88.3, 356.0], [88.4, 356.0], [88.5, 356.0], [88.6, 356.0], [88.7, 356.0], [88.8, 356.0], [88.9, 356.0], [89.0, 356.0], [89.1, 356.0], [89.2, 356.0], [89.3, 356.0], [89.4, 356.0], [89.5, 358.0], [89.6, 358.0], [89.7, 358.0], [89.8, 358.0], [89.9, 358.0], [90.0, 358.0], [90.1, 358.0], [90.2, 358.0], [90.3, 358.0], [90.4, 358.0], [90.5, 358.0], [90.6, 392.0], [90.7, 392.0], [90.8, 392.0], [90.9, 392.0], [91.0, 392.0], [91.1, 392.0], [91.2, 392.0], [91.3, 392.0], [91.4, 392.0], [91.5, 392.0], [91.6, 392.0], [91.7, 392.0], [91.8, 401.0], [91.9, 401.0], [92.0, 401.0], [92.1, 401.0], [92.2, 401.0], [92.3, 401.0], [92.4, 401.0], [92.5, 401.0], [92.6, 401.0], [92.7, 401.0], [92.8, 401.0], [92.9, 401.0], [93.0, 418.0], [93.1, 418.0], [93.2, 418.0], [93.3, 418.0], [93.4, 418.0], [93.5, 418.0], [93.6, 418.0], [93.7, 418.0], [93.8, 418.0], [93.9, 418.0], [94.0, 418.0], [94.1, 418.0], [94.2, 426.0], [94.3, 426.0], [94.4, 426.0], [94.5, 426.0], [94.6, 426.0], [94.7, 426.0], [94.8, 426.0], [94.9, 426.0], [95.0, 426.0], [95.1, 426.0], [95.2, 426.0], [95.3, 426.0], [95.4, 426.0], [95.5, 426.0], [95.6, 426.0], [95.7, 426.0], [95.8, 426.0], [95.9, 426.0], [96.0, 426.0], [96.1, 426.0], [96.2, 426.0], [96.3, 426.0], [96.4, 426.0], [96.5, 441.0], [96.6, 441.0], [96.7, 441.0], [96.8, 441.0], [96.9, 441.0], [97.0, 441.0], [97.1, 441.0], [97.2, 441.0], [97.3, 441.0], [97.4, 441.0], [97.5, 441.0], [97.6, 441.0], [97.7, 474.0], [97.8, 474.0], [97.9, 474.0], [98.0, 474.0], [98.1, 474.0], [98.2, 474.0], [98.3, 474.0], [98.4, 474.0], [98.5, 474.0], [98.6, 474.0], [98.7, 474.0], [98.8, 474.0], [98.9, 506.0], [99.0, 506.0], [99.1, 506.0], [99.2, 506.0], [99.3, 506.0], [99.4, 506.0], [99.5, 506.0], [99.6, 506.0], [99.7, 506.0], [99.8, 506.0], [99.9, 506.0]], "isOverall": false, "label": "Update Student", "isController": false}, {"data": [[0.0, 62.0], [0.1, 62.0], [0.2, 62.0], [0.3, 62.0], [0.4, 62.0], [0.5, 62.0], [0.6, 62.0], [0.7, 62.0], [0.8, 62.0], [0.9, 62.0], [1.0, 62.0], [1.1, 62.0], [1.2, 68.0], [1.3, 68.0], [1.4, 68.0], [1.5, 68.0], [1.6, 68.0], [1.7, 68.0], [1.8, 68.0], [1.9, 68.0], [2.0, 68.0], [2.1, 68.0], [2.2, 68.0], [2.3, 68.0], [2.4, 71.0], [2.5, 71.0], [2.6, 71.0], [2.7, 71.0], [2.8, 71.0], [2.9, 71.0], [3.0, 71.0], [3.1, 71.0], [3.2, 71.0], [3.3, 71.0], [3.4, 71.0], [3.5, 71.0], [3.6, 74.0], [3.7, 74.0], [3.8, 74.0], [3.9, 74.0], [4.0, 74.0], [4.1, 74.0], [4.2, 74.0], [4.3, 74.0], [4.4, 74.0], [4.5, 74.0], [4.6, 74.0], [4.7, 74.0], [4.8, 76.0], [4.9, 76.0], [5.0, 76.0], [5.1, 76.0], [5.2, 76.0], [5.3, 76.0], [5.4, 76.0], [5.5, 76.0], [5.6, 76.0], [5.7, 76.0], [5.8, 76.0], [5.9, 76.0], [6.0, 76.0], [6.1, 76.0], [6.2, 76.0], [6.3, 76.0], [6.4, 76.0], [6.5, 76.0], [6.6, 76.0], [6.7, 76.0], [6.8, 76.0], [6.9, 76.0], [7.0, 76.0], [7.1, 77.0], [7.2, 77.0], [7.3, 77.0], [7.4, 77.0], [7.5, 77.0], [7.6, 77.0], [7.7, 77.0], [7.8, 77.0], [7.9, 77.0], [8.0, 77.0], [8.1, 77.0], [8.2, 77.0], [8.3, 77.0], [8.4, 77.0], [8.5, 77.0], [8.6, 77.0], [8.7, 77.0], [8.8, 77.0], [8.9, 77.0], [9.0, 77.0], [9.1, 77.0], [9.2, 77.0], [9.3, 77.0], [9.4, 77.0], [9.5, 80.0], [9.6, 80.0], [9.7, 80.0], [9.8, 80.0], [9.9, 80.0], [10.0, 80.0], [10.1, 80.0], [10.2, 80.0], [10.3, 80.0], [10.4, 80.0], [10.5, 80.0], [10.6, 89.0], [10.7, 89.0], [10.8, 89.0], [10.9, 89.0], [11.0, 89.0], [11.1, 89.0], [11.2, 89.0], [11.3, 89.0], [11.4, 89.0], [11.5, 89.0], [11.6, 89.0], [11.7, 89.0], [11.8, 95.0], [11.9, 95.0], [12.0, 95.0], [12.1, 95.0], [12.2, 95.0], [12.3, 95.0], [12.4, 95.0], [12.5, 95.0], [12.6, 95.0], [12.7, 95.0], [12.8, 95.0], [12.9, 95.0], [13.0, 102.0], [13.1, 102.0], [13.2, 102.0], [13.3, 102.0], [13.4, 102.0], [13.5, 102.0], [13.6, 102.0], [13.7, 102.0], [13.8, 102.0], [13.9, 102.0], [14.0, 102.0], [14.1, 102.0], [14.2, 109.0], [14.3, 109.0], [14.4, 109.0], [14.5, 109.0], [14.6, 109.0], [14.7, 109.0], [14.8, 109.0], [14.9, 109.0], [15.0, 109.0], [15.1, 109.0], [15.2, 109.0], [15.3, 110.0], [15.4, 110.0], [15.5, 110.0], [15.6, 110.0], [15.7, 110.0], [15.8, 110.0], [15.9, 110.0], [16.0, 110.0], [16.1, 110.0], [16.2, 110.0], [16.3, 110.0], [16.4, 110.0], [16.5, 114.0], [16.6, 114.0], [16.7, 114.0], [16.8, 114.0], [16.9, 114.0], [17.0, 114.0], [17.1, 114.0], [17.2, 114.0], [17.3, 114.0], [17.4, 114.0], [17.5, 114.0], [17.6, 114.0], [17.7, 115.0], [17.8, 115.0], [17.9, 115.0], [18.0, 115.0], [18.1, 115.0], [18.2, 115.0], [18.3, 115.0], [18.4, 115.0], [18.5, 115.0], [18.6, 115.0], [18.7, 115.0], [18.8, 115.0], [18.9, 116.0], [19.0, 116.0], [19.1, 116.0], [19.2, 116.0], [19.3, 116.0], [19.4, 116.0], [19.5, 116.0], [19.6, 116.0], [19.7, 116.0], [19.8, 116.0], [19.9, 116.0], [20.0, 118.0], [20.1, 118.0], [20.2, 118.0], [20.3, 118.0], [20.4, 118.0], [20.5, 118.0], [20.6, 118.0], [20.7, 118.0], [20.8, 118.0], [20.9, 118.0], [21.0, 118.0], [21.1, 118.0], [21.2, 119.0], [21.3, 119.0], [21.4, 119.0], [21.5, 119.0], [21.6, 119.0], [21.7, 119.0], [21.8, 119.0], [21.9, 119.0], [22.0, 119.0], [22.1, 119.0], [22.2, 119.0], [22.3, 119.0], [22.4, 123.0], [22.5, 123.0], [22.6, 123.0], [22.7, 123.0], [22.8, 123.0], [22.9, 123.0], [23.0, 123.0], [23.1, 123.0], [23.2, 123.0], [23.3, 123.0], [23.4, 123.0], [23.5, 123.0], [23.6, 124.0], [23.7, 124.0], [23.8, 124.0], [23.9, 124.0], [24.0, 124.0], [24.1, 124.0], [24.2, 124.0], [24.3, 124.0], [24.4, 124.0], [24.5, 124.0], [24.6, 124.0], [24.7, 124.0], [24.8, 130.0], [24.9, 130.0], [25.0, 130.0], [25.1, 130.0], [25.2, 130.0], [25.3, 130.0], [25.4, 130.0], [25.5, 130.0], [25.6, 130.0], [25.7, 130.0], [25.8, 130.0], [25.9, 132.0], [26.0, 132.0], [26.1, 132.0], [26.2, 132.0], [26.3, 132.0], [26.4, 132.0], [26.5, 132.0], [26.6, 132.0], [26.7, 132.0], [26.8, 132.0], [26.9, 132.0], [27.0, 132.0], [27.1, 134.0], [27.2, 134.0], [27.3, 134.0], [27.4, 134.0], [27.5, 134.0], [27.6, 134.0], [27.7, 134.0], [27.8, 134.0], [27.9, 134.0], [28.0, 134.0], [28.1, 134.0], [28.2, 134.0], [28.3, 134.0], [28.4, 134.0], [28.5, 134.0], [28.6, 134.0], [28.7, 134.0], [28.8, 134.0], [28.9, 134.0], [29.0, 134.0], [29.1, 134.0], [29.2, 134.0], [29.3, 134.0], [29.4, 134.0], [29.5, 135.0], [29.6, 135.0], [29.7, 135.0], [29.8, 135.0], [29.9, 135.0], [30.0, 135.0], [30.1, 135.0], [30.2, 135.0], [30.3, 135.0], [30.4, 135.0], [30.5, 135.0], [30.6, 135.0], [30.7, 135.0], [30.8, 135.0], [30.9, 135.0], [31.0, 135.0], [31.1, 135.0], [31.2, 135.0], [31.3, 135.0], [31.4, 135.0], [31.5, 135.0], [31.6, 135.0], [31.7, 135.0], [31.8, 136.0], [31.9, 136.0], [32.0, 136.0], [32.1, 136.0], [32.2, 136.0], [32.3, 136.0], [32.4, 136.0], [32.5, 136.0], [32.6, 136.0], [32.7, 136.0], [32.8, 136.0], [32.9, 136.0], [33.0, 138.0], [33.1, 138.0], [33.2, 138.0], [33.3, 138.0], [33.4, 138.0], [33.5, 138.0], [33.6, 138.0], [33.7, 138.0], [33.8, 138.0], [33.9, 138.0], [34.0, 138.0], [34.1, 138.0], [34.2, 144.0], [34.3, 144.0], [34.4, 144.0], [34.5, 144.0], [34.6, 144.0], [34.7, 144.0], [34.8, 144.0], [34.9, 144.0], [35.0, 144.0], [35.1, 144.0], [35.2, 144.0], [35.3, 153.0], [35.4, 153.0], [35.5, 153.0], [35.6, 153.0], [35.7, 153.0], [35.8, 153.0], [35.9, 153.0], [36.0, 153.0], [36.1, 153.0], [36.2, 153.0], [36.3, 153.0], [36.4, 153.0], [36.5, 154.0], [36.6, 154.0], [36.7, 154.0], [36.8, 154.0], [36.9, 154.0], [37.0, 154.0], [37.1, 154.0], [37.2, 154.0], [37.3, 154.0], [37.4, 154.0], [37.5, 154.0], [37.6, 154.0], [37.7, 157.0], [37.8, 157.0], [37.9, 157.0], [38.0, 157.0], [38.1, 157.0], [38.2, 157.0], [38.3, 157.0], [38.4, 157.0], [38.5, 157.0], [38.6, 157.0], [38.7, 157.0], [38.8, 157.0], [38.9, 160.0], [39.0, 160.0], [39.1, 160.0], [39.2, 160.0], [39.3, 160.0], [39.4, 160.0], [39.5, 160.0], [39.6, 160.0], [39.7, 160.0], [39.8, 160.0], [39.9, 160.0], [40.0, 160.0], [40.1, 167.0], [40.2, 167.0], [40.3, 167.0], [40.4, 167.0], [40.5, 167.0], [40.6, 167.0], [40.7, 167.0], [40.8, 167.0], [40.9, 167.0], [41.0, 167.0], [41.1, 167.0], [41.2, 169.0], [41.3, 169.0], [41.4, 169.0], [41.5, 169.0], [41.6, 169.0], [41.7, 169.0], [41.8, 169.0], [41.9, 169.0], [42.0, 169.0], [42.1, 169.0], [42.2, 169.0], [42.3, 169.0], [42.4, 174.0], [42.5, 174.0], [42.6, 174.0], [42.7, 174.0], [42.8, 174.0], [42.9, 174.0], [43.0, 174.0], [43.1, 174.0], [43.2, 174.0], [43.3, 174.0], [43.4, 174.0], [43.5, 174.0], [43.6, 176.0], [43.7, 176.0], [43.8, 176.0], [43.9, 176.0], [44.0, 176.0], [44.1, 176.0], [44.2, 176.0], [44.3, 176.0], [44.4, 176.0], [44.5, 176.0], [44.6, 176.0], [44.7, 176.0], [44.8, 185.0], [44.9, 185.0], [45.0, 185.0], [45.1, 185.0], [45.2, 185.0], [45.3, 185.0], [45.4, 185.0], [45.5, 185.0], [45.6, 185.0], [45.7, 185.0], [45.8, 185.0], [45.9, 188.0], [46.0, 188.0], [46.1, 188.0], [46.2, 188.0], [46.3, 188.0], [46.4, 188.0], [46.5, 188.0], [46.6, 188.0], [46.7, 188.0], [46.8, 188.0], [46.9, 188.0], [47.0, 188.0], [47.1, 188.0], [47.2, 188.0], [47.3, 188.0], [47.4, 188.0], [47.5, 188.0], [47.6, 188.0], [47.7, 188.0], [47.8, 188.0], [47.9, 188.0], [48.0, 188.0], [48.1, 188.0], [48.2, 188.0], [48.3, 190.0], [48.4, 190.0], [48.5, 190.0], [48.6, 190.0], [48.7, 190.0], [48.8, 190.0], [48.9, 190.0], [49.0, 190.0], [49.1, 190.0], [49.2, 190.0], [49.3, 190.0], [49.4, 190.0], [49.5, 191.0], [49.6, 191.0], [49.7, 191.0], [49.8, 191.0], [49.9, 191.0], [50.0, 191.0], [50.1, 191.0], [50.2, 191.0], [50.3, 191.0], [50.4, 191.0], [50.5, 191.0], [50.6, 194.0], [50.7, 194.0], [50.8, 194.0], [50.9, 194.0], [51.0, 194.0], [51.1, 194.0], [51.2, 194.0], [51.3, 194.0], [51.4, 194.0], [51.5, 194.0], [51.6, 194.0], [51.7, 194.0], [51.8, 196.0], [51.9, 196.0], [52.0, 196.0], [52.1, 196.0], [52.2, 196.0], [52.3, 196.0], [52.4, 196.0], [52.5, 196.0], [52.6, 196.0], [52.7, 196.0], [52.8, 196.0], [52.9, 196.0], [53.0, 196.0], [53.1, 196.0], [53.2, 196.0], [53.3, 196.0], [53.4, 196.0], [53.5, 196.0], [53.6, 196.0], [53.7, 196.0], [53.8, 196.0], [53.9, 196.0], [54.0, 196.0], [54.1, 196.0], [54.2, 205.0], [54.3, 205.0], [54.4, 205.0], [54.5, 205.0], [54.6, 205.0], [54.7, 205.0], [54.8, 205.0], [54.9, 205.0], [55.0, 205.0], [55.1, 205.0], [55.2, 205.0], [55.3, 205.0], [55.4, 205.0], [55.5, 205.0], [55.6, 205.0], [55.7, 205.0], [55.8, 205.0], [55.9, 205.0], [56.0, 205.0], [56.1, 205.0], [56.2, 205.0], [56.3, 205.0], [56.4, 205.0], [56.5, 205.0], [56.6, 205.0], [56.7, 205.0], [56.8, 205.0], [56.9, 205.0], [57.0, 205.0], [57.1, 205.0], [57.2, 205.0], [57.3, 205.0], [57.4, 205.0], [57.5, 205.0], [57.6, 205.0], [57.7, 208.0], [57.8, 208.0], [57.9, 208.0], [58.0, 208.0], [58.1, 208.0], [58.2, 208.0], [58.3, 208.0], [58.4, 208.0], [58.5, 208.0], [58.6, 208.0], [58.7, 208.0], [58.8, 208.0], [58.9, 209.0], [59.0, 209.0], [59.1, 209.0], [59.2, 209.0], [59.3, 209.0], [59.4, 209.0], [59.5, 209.0], [59.6, 209.0], [59.7, 209.0], [59.8, 209.0], [59.9, 209.0], [60.0, 209.0], [60.1, 211.0], [60.2, 211.0], [60.3, 211.0], [60.4, 211.0], [60.5, 211.0], [60.6, 211.0], [60.7, 211.0], [60.8, 211.0], [60.9, 211.0], [61.0, 211.0], [61.1, 211.0], [61.2, 213.0], [61.3, 213.0], [61.4, 213.0], [61.5, 213.0], [61.6, 213.0], [61.7, 213.0], [61.8, 213.0], [61.9, 213.0], [62.0, 213.0], [62.1, 213.0], [62.2, 213.0], [62.3, 213.0], [62.4, 215.0], [62.5, 215.0], [62.6, 215.0], [62.7, 215.0], [62.8, 215.0], [62.9, 215.0], [63.0, 215.0], [63.1, 215.0], [63.2, 215.0], [63.3, 215.0], [63.4, 215.0], [63.5, 215.0], [63.6, 215.0], [63.7, 215.0], [63.8, 215.0], [63.9, 215.0], [64.0, 215.0], [64.1, 215.0], [64.2, 215.0], [64.3, 215.0], [64.4, 215.0], [64.5, 215.0], [64.6, 215.0], [64.7, 215.0], [64.8, 218.0], [64.9, 218.0], [65.0, 218.0], [65.1, 218.0], [65.2, 218.0], [65.3, 218.0], [65.4, 218.0], [65.5, 218.0], [65.6, 218.0], [65.7, 218.0], [65.8, 218.0], [65.9, 220.0], [66.0, 220.0], [66.1, 220.0], [66.2, 220.0], [66.3, 220.0], [66.4, 220.0], [66.5, 220.0], [66.6, 220.0], [66.7, 220.0], [66.8, 220.0], [66.9, 220.0], [67.0, 220.0], [67.1, 221.0], [67.2, 221.0], [67.3, 221.0], [67.4, 221.0], [67.5, 221.0], [67.6, 221.0], [67.7, 221.0], [67.8, 221.0], [67.9, 221.0], [68.0, 221.0], [68.1, 221.0], [68.2, 221.0], [68.3, 228.0], [68.4, 228.0], [68.5, 228.0], [68.6, 228.0], [68.7, 228.0], [68.8, 228.0], [68.9, 228.0], [69.0, 228.0], [69.1, 228.0], [69.2, 228.0], [69.3, 228.0], [69.4, 228.0], [69.5, 228.0], [69.6, 228.0], [69.7, 228.0], [69.8, 228.0], [69.9, 228.0], [70.0, 228.0], [70.1, 228.0], [70.2, 228.0], [70.3, 228.0], [70.4, 228.0], [70.5, 228.0], [70.6, 231.0], [70.7, 231.0], [70.8, 231.0], [70.9, 231.0], [71.0, 231.0], [71.1, 231.0], [71.2, 231.0], [71.3, 231.0], [71.4, 231.0], [71.5, 231.0], [71.6, 231.0], [71.7, 231.0], [71.8, 232.0], [71.9, 232.0], [72.0, 232.0], [72.1, 232.0], [72.2, 232.0], [72.3, 232.0], [72.4, 232.0], [72.5, 232.0], [72.6, 232.0], [72.7, 232.0], [72.8, 232.0], [72.9, 232.0], [73.0, 244.0], [73.1, 244.0], [73.2, 244.0], [73.3, 244.0], [73.4, 244.0], [73.5, 244.0], [73.6, 244.0], [73.7, 244.0], [73.8, 244.0], [73.9, 244.0], [74.0, 244.0], [74.1, 244.0], [74.2, 245.0], [74.3, 245.0], [74.4, 245.0], [74.5, 245.0], [74.6, 245.0], [74.7, 245.0], [74.8, 245.0], [74.9, 245.0], [75.0, 245.0], [75.1, 245.0], [75.2, 245.0], [75.3, 246.0], [75.4, 246.0], [75.5, 246.0], [75.6, 246.0], [75.7, 246.0], [75.8, 246.0], [75.9, 246.0], [76.0, 246.0], [76.1, 246.0], [76.2, 246.0], [76.3, 246.0], [76.4, 246.0], [76.5, 247.0], [76.6, 247.0], [76.7, 247.0], [76.8, 247.0], [76.9, 247.0], [77.0, 247.0], [77.1, 247.0], [77.2, 247.0], [77.3, 247.0], [77.4, 247.0], [77.5, 247.0], [77.6, 247.0], [77.7, 250.0], [77.8, 250.0], [77.9, 250.0], [78.0, 250.0], [78.1, 250.0], [78.2, 250.0], [78.3, 250.0], [78.4, 250.0], [78.5, 250.0], [78.6, 250.0], [78.7, 250.0], [78.8, 250.0], [78.9, 254.0], [79.0, 254.0], [79.1, 254.0], [79.2, 254.0], [79.3, 254.0], [79.4, 254.0], [79.5, 254.0], [79.6, 254.0], [79.7, 254.0], [79.8, 254.0], [79.9, 254.0], [80.0, 258.0], [80.1, 258.0], [80.2, 258.0], [80.3, 258.0], [80.4, 258.0], [80.5, 258.0], [80.6, 258.0], [80.7, 258.0], [80.8, 258.0], [80.9, 258.0], [81.0, 258.0], [81.1, 258.0], [81.2, 258.0], [81.3, 258.0], [81.4, 258.0], [81.5, 258.0], [81.6, 258.0], [81.7, 258.0], [81.8, 258.0], [81.9, 258.0], [82.0, 258.0], [82.1, 258.0], [82.2, 258.0], [82.3, 258.0], [82.4, 260.0], [82.5, 260.0], [82.6, 260.0], [82.7, 260.0], [82.8, 260.0], [82.9, 260.0], [83.0, 260.0], [83.1, 260.0], [83.2, 260.0], [83.3, 260.0], [83.4, 260.0], [83.5, 260.0], [83.6, 265.0], [83.7, 265.0], [83.8, 265.0], [83.9, 265.0], [84.0, 265.0], [84.1, 265.0], [84.2, 265.0], [84.3, 265.0], [84.4, 265.0], [84.5, 265.0], [84.6, 265.0], [84.7, 265.0], [84.8, 274.0], [84.9, 274.0], [85.0, 274.0], [85.1, 274.0], [85.2, 274.0], [85.3, 274.0], [85.4, 274.0], [85.5, 274.0], [85.6, 274.0], [85.7, 274.0], [85.8, 274.0], [85.9, 278.0], [86.0, 278.0], [86.1, 278.0], [86.2, 278.0], [86.3, 278.0], [86.4, 278.0], [86.5, 278.0], [86.6, 278.0], [86.7, 278.0], [86.8, 278.0], [86.9, 278.0], [87.0, 278.0], [87.1, 295.0], [87.2, 295.0], [87.3, 295.0], [87.4, 295.0], [87.5, 295.0], [87.6, 295.0], [87.7, 295.0], [87.8, 295.0], [87.9, 295.0], [88.0, 295.0], [88.1, 295.0], [88.2, 295.0], [88.3, 314.0], [88.4, 314.0], [88.5, 314.0], [88.6, 314.0], [88.7, 314.0], [88.8, 314.0], [88.9, 314.0], [89.0, 314.0], [89.1, 314.0], [89.2, 314.0], [89.3, 314.0], [89.4, 314.0], [89.5, 317.0], [89.6, 317.0], [89.7, 317.0], [89.8, 317.0], [89.9, 317.0], [90.0, 317.0], [90.1, 317.0], [90.2, 317.0], [90.3, 317.0], [90.4, 317.0], [90.5, 317.0], [90.6, 318.0], [90.7, 318.0], [90.8, 318.0], [90.9, 318.0], [91.0, 318.0], [91.1, 318.0], [91.2, 318.0], [91.3, 318.0], [91.4, 318.0], [91.5, 318.0], [91.6, 318.0], [91.7, 318.0], [91.8, 322.0], [91.9, 322.0], [92.0, 322.0], [92.1, 322.0], [92.2, 322.0], [92.3, 322.0], [92.4, 322.0], [92.5, 322.0], [92.6, 322.0], [92.7, 322.0], [92.8, 322.0], [92.9, 322.0], [93.0, 329.0], [93.1, 329.0], [93.2, 329.0], [93.3, 329.0], [93.4, 329.0], [93.5, 329.0], [93.6, 329.0], [93.7, 329.0], [93.8, 329.0], [93.9, 329.0], [94.0, 329.0], [94.1, 329.0], [94.2, 342.0], [94.3, 342.0], [94.4, 342.0], [94.5, 342.0], [94.6, 342.0], [94.7, 342.0], [94.8, 342.0], [94.9, 342.0], [95.0, 342.0], [95.1, 342.0], [95.2, 342.0], [95.3, 349.0], [95.4, 349.0], [95.5, 349.0], [95.6, 349.0], [95.7, 349.0], [95.8, 349.0], [95.9, 349.0], [96.0, 349.0], [96.1, 349.0], [96.2, 349.0], [96.3, 349.0], [96.4, 349.0], [96.5, 406.0], [96.6, 406.0], [96.7, 406.0], [96.8, 406.0], [96.9, 406.0], [97.0, 406.0], [97.1, 406.0], [97.2, 406.0], [97.3, 406.0], [97.4, 406.0], [97.5, 406.0], [97.6, 406.0], [97.7, 425.0], [97.8, 425.0], [97.9, 425.0], [98.0, 425.0], [98.1, 425.0], [98.2, 425.0], [98.3, 425.0], [98.4, 425.0], [98.5, 425.0], [98.6, 425.0], [98.7, 425.0], [98.8, 425.0], [98.9, 846.0], [99.0, 846.0], [99.1, 846.0], [99.2, 846.0], [99.3, 846.0], [99.4, 846.0], [99.5, 846.0], [99.6, 846.0], [99.7, 846.0], [99.8, 846.0], [99.9, 846.0]], "isOverall": false, "label": "Get Specific Student", "isController": false}, {"data": [[0.0, 124.0], [0.1, 124.0], [0.2, 124.0], [0.3, 124.0], [0.4, 124.0], [0.5, 124.0], [0.6, 124.0], [0.7, 124.0], [0.8, 124.0], [0.9, 124.0], [1.0, 124.0], [1.1, 124.0], [1.2, 139.0], [1.3, 139.0], [1.4, 139.0], [1.5, 139.0], [1.6, 139.0], [1.7, 139.0], [1.8, 139.0], [1.9, 139.0], [2.0, 139.0], [2.1, 139.0], [2.2, 139.0], [2.3, 139.0], [2.4, 143.0], [2.5, 143.0], [2.6, 143.0], [2.7, 143.0], [2.8, 143.0], [2.9, 143.0], [3.0, 143.0], [3.1, 143.0], [3.2, 143.0], [3.3, 143.0], [3.4, 143.0], [3.5, 143.0], [3.6, 145.0], [3.7, 145.0], [3.8, 145.0], [3.9, 145.0], [4.0, 145.0], [4.1, 145.0], [4.2, 145.0], [4.3, 145.0], [4.4, 145.0], [4.5, 145.0], [4.6, 145.0], [4.7, 145.0], [4.8, 153.0], [4.9, 153.0], [5.0, 153.0], [5.1, 153.0], [5.2, 153.0], [5.3, 153.0], [5.4, 153.0], [5.5, 153.0], [5.6, 153.0], [5.7, 153.0], [5.8, 153.0], [5.9, 164.0], [6.0, 164.0], [6.1, 164.0], [6.2, 164.0], [6.3, 164.0], [6.4, 164.0], [6.5, 164.0], [6.6, 164.0], [6.7, 164.0], [6.8, 164.0], [6.9, 164.0], [7.0, 164.0], [7.1, 181.0], [7.2, 181.0], [7.3, 181.0], [7.4, 181.0], [7.5, 181.0], [7.6, 181.0], [7.7, 181.0], [7.8, 181.0], [7.9, 181.0], [8.0, 181.0], [8.1, 181.0], [8.2, 181.0], [8.3, 249.0], [8.4, 249.0], [8.5, 249.0], [8.6, 249.0], [8.7, 249.0], [8.8, 249.0], [8.9, 249.0], [9.0, 249.0], [9.1, 249.0], [9.2, 249.0], [9.3, 249.0], [9.4, 249.0], [9.5, 257.0], [9.6, 257.0], [9.7, 257.0], [9.8, 257.0], [9.9, 257.0], [10.0, 257.0], [10.1, 257.0], [10.2, 257.0], [10.3, 257.0], [10.4, 257.0], [10.5, 257.0], [10.6, 275.0], [10.7, 275.0], [10.8, 275.0], [10.9, 275.0], [11.0, 275.0], [11.1, 275.0], [11.2, 275.0], [11.3, 275.0], [11.4, 275.0], [11.5, 275.0], [11.6, 275.0], [11.7, 275.0], [11.8, 293.0], [11.9, 293.0], [12.0, 293.0], [12.1, 293.0], [12.2, 293.0], [12.3, 293.0], [12.4, 293.0], [12.5, 293.0], [12.6, 293.0], [12.7, 293.0], [12.8, 293.0], [12.9, 293.0], [13.0, 309.0], [13.1, 309.0], [13.2, 309.0], [13.3, 309.0], [13.4, 309.0], [13.5, 309.0], [13.6, 309.0], [13.7, 309.0], [13.8, 309.0], [13.9, 309.0], [14.0, 309.0], [14.1, 309.0], [14.2, 313.0], [14.3, 313.0], [14.4, 313.0], [14.5, 313.0], [14.6, 313.0], [14.7, 313.0], [14.8, 313.0], [14.9, 313.0], [15.0, 313.0], [15.1, 313.0], [15.2, 313.0], [15.3, 319.0], [15.4, 319.0], [15.5, 319.0], [15.6, 319.0], [15.7, 319.0], [15.8, 319.0], [15.9, 319.0], [16.0, 319.0], [16.1, 319.0], [16.2, 319.0], [16.3, 319.0], [16.4, 319.0], [16.5, 321.0], [16.6, 321.0], [16.7, 321.0], [16.8, 321.0], [16.9, 321.0], [17.0, 321.0], [17.1, 321.0], [17.2, 321.0], [17.3, 321.0], [17.4, 321.0], [17.5, 321.0], [17.6, 321.0], [17.7, 325.0], [17.8, 325.0], [17.9, 325.0], [18.0, 325.0], [18.1, 325.0], [18.2, 325.0], [18.3, 325.0], [18.4, 325.0], [18.5, 325.0], [18.6, 325.0], [18.7, 325.0], [18.8, 325.0], [18.9, 330.0], [19.0, 330.0], [19.1, 330.0], [19.2, 330.0], [19.3, 330.0], [19.4, 330.0], [19.5, 330.0], [19.6, 330.0], [19.7, 330.0], [19.8, 330.0], [19.9, 330.0], [20.0, 341.0], [20.1, 341.0], [20.2, 341.0], [20.3, 341.0], [20.4, 341.0], [20.5, 341.0], [20.6, 341.0], [20.7, 341.0], [20.8, 341.0], [20.9, 341.0], [21.0, 341.0], [21.1, 341.0], [21.2, 351.0], [21.3, 351.0], [21.4, 351.0], [21.5, 351.0], [21.6, 351.0], [21.7, 351.0], [21.8, 351.0], [21.9, 351.0], [22.0, 351.0], [22.1, 351.0], [22.2, 351.0], [22.3, 351.0], [22.4, 359.0], [22.5, 359.0], [22.6, 359.0], [22.7, 359.0], [22.8, 359.0], [22.9, 359.0], [23.0, 359.0], [23.1, 359.0], [23.2, 359.0], [23.3, 359.0], [23.4, 359.0], [23.5, 359.0], [23.6, 359.0], [23.7, 359.0], [23.8, 359.0], [23.9, 359.0], [24.0, 359.0], [24.1, 359.0], [24.2, 359.0], [24.3, 359.0], [24.4, 359.0], [24.5, 359.0], [24.6, 359.0], [24.7, 359.0], [24.8, 362.0], [24.9, 362.0], [25.0, 362.0], [25.1, 362.0], [25.2, 362.0], [25.3, 362.0], [25.4, 362.0], [25.5, 362.0], [25.6, 362.0], [25.7, 362.0], [25.8, 362.0], [25.9, 369.0], [26.0, 369.0], [26.1, 369.0], [26.2, 369.0], [26.3, 369.0], [26.4, 369.0], [26.5, 369.0], [26.6, 369.0], [26.7, 369.0], [26.8, 369.0], [26.9, 369.0], [27.0, 369.0], [27.1, 373.0], [27.2, 373.0], [27.3, 373.0], [27.4, 373.0], [27.5, 373.0], [27.6, 373.0], [27.7, 373.0], [27.8, 373.0], [27.9, 373.0], [28.0, 373.0], [28.1, 373.0], [28.2, 373.0], [28.3, 374.0], [28.4, 374.0], [28.5, 374.0], [28.6, 374.0], [28.7, 374.0], [28.8, 374.0], [28.9, 374.0], [29.0, 374.0], [29.1, 374.0], [29.2, 374.0], [29.3, 374.0], [29.4, 374.0], [29.5, 383.0], [29.6, 383.0], [29.7, 383.0], [29.8, 383.0], [29.9, 383.0], [30.0, 383.0], [30.1, 383.0], [30.2, 383.0], [30.3, 383.0], [30.4, 383.0], [30.5, 383.0], [30.6, 388.0], [30.7, 388.0], [30.8, 388.0], [30.9, 388.0], [31.0, 388.0], [31.1, 388.0], [31.2, 388.0], [31.3, 388.0], [31.4, 388.0], [31.5, 388.0], [31.6, 388.0], [31.7, 388.0], [31.8, 390.0], [31.9, 390.0], [32.0, 390.0], [32.1, 390.0], [32.2, 390.0], [32.3, 390.0], [32.4, 390.0], [32.5, 390.0], [32.6, 390.0], [32.7, 390.0], [32.8, 390.0], [32.9, 390.0], [33.0, 394.0], [33.1, 394.0], [33.2, 394.0], [33.3, 394.0], [33.4, 394.0], [33.5, 394.0], [33.6, 394.0], [33.7, 394.0], [33.8, 394.0], [33.9, 394.0], [34.0, 394.0], [34.1, 394.0], [34.2, 395.0], [34.3, 395.0], [34.4, 395.0], [34.5, 395.0], [34.6, 395.0], [34.7, 395.0], [34.8, 395.0], [34.9, 395.0], [35.0, 395.0], [35.1, 395.0], [35.2, 395.0], [35.3, 397.0], [35.4, 397.0], [35.5, 397.0], [35.6, 397.0], [35.7, 397.0], [35.8, 397.0], [35.9, 397.0], [36.0, 397.0], [36.1, 397.0], [36.2, 397.0], [36.3, 397.0], [36.4, 397.0], [36.5, 400.0], [36.6, 400.0], [36.7, 400.0], [36.8, 400.0], [36.9, 400.0], [37.0, 400.0], [37.1, 400.0], [37.2, 400.0], [37.3, 400.0], [37.4, 400.0], [37.5, 400.0], [37.6, 400.0], [37.7, 410.0], [37.8, 410.0], [37.9, 410.0], [38.0, 410.0], [38.1, 410.0], [38.2, 410.0], [38.3, 410.0], [38.4, 410.0], [38.5, 410.0], [38.6, 410.0], [38.7, 410.0], [38.8, 410.0], [38.9, 411.0], [39.0, 411.0], [39.1, 411.0], [39.2, 411.0], [39.3, 411.0], [39.4, 411.0], [39.5, 411.0], [39.6, 411.0], [39.7, 411.0], [39.8, 411.0], [39.9, 411.0], [40.0, 411.0], [40.1, 411.0], [40.2, 411.0], [40.3, 411.0], [40.4, 411.0], [40.5, 411.0], [40.6, 411.0], [40.7, 411.0], [40.8, 411.0], [40.9, 411.0], [41.0, 411.0], [41.1, 411.0], [41.2, 415.0], [41.3, 415.0], [41.4, 415.0], [41.5, 415.0], [41.6, 415.0], [41.7, 415.0], [41.8, 415.0], [41.9, 415.0], [42.0, 415.0], [42.1, 415.0], [42.2, 415.0], [42.3, 415.0], [42.4, 430.0], [42.5, 430.0], [42.6, 430.0], [42.7, 430.0], [42.8, 430.0], [42.9, 430.0], [43.0, 430.0], [43.1, 430.0], [43.2, 430.0], [43.3, 430.0], [43.4, 430.0], [43.5, 430.0], [43.6, 435.0], [43.7, 435.0], [43.8, 435.0], [43.9, 435.0], [44.0, 435.0], [44.1, 435.0], [44.2, 435.0], [44.3, 435.0], [44.4, 435.0], [44.5, 435.0], [44.6, 435.0], [44.7, 435.0], [44.8, 436.0], [44.9, 436.0], [45.0, 436.0], [45.1, 436.0], [45.2, 436.0], [45.3, 436.0], [45.4, 436.0], [45.5, 436.0], [45.6, 436.0], [45.7, 436.0], [45.8, 436.0], [45.9, 438.0], [46.0, 438.0], [46.1, 438.0], [46.2, 438.0], [46.3, 438.0], [46.4, 438.0], [46.5, 438.0], [46.6, 438.0], [46.7, 438.0], [46.8, 438.0], [46.9, 438.0], [47.0, 438.0], [47.1, 444.0], [47.2, 444.0], [47.3, 444.0], [47.4, 444.0], [47.5, 444.0], [47.6, 444.0], [47.7, 444.0], [47.8, 444.0], [47.9, 444.0], [48.0, 444.0], [48.1, 444.0], [48.2, 444.0], [48.3, 447.0], [48.4, 447.0], [48.5, 447.0], [48.6, 447.0], [48.7, 447.0], [48.8, 447.0], [48.9, 447.0], [49.0, 447.0], [49.1, 447.0], [49.2, 447.0], [49.3, 447.0], [49.4, 447.0], [49.5, 448.0], [49.6, 448.0], [49.7, 448.0], [49.8, 448.0], [49.9, 448.0], [50.0, 448.0], [50.1, 448.0], [50.2, 448.0], [50.3, 448.0], [50.4, 448.0], [50.5, 448.0], [50.6, 450.0], [50.7, 450.0], [50.8, 450.0], [50.9, 450.0], [51.0, 450.0], [51.1, 450.0], [51.2, 450.0], [51.3, 450.0], [51.4, 450.0], [51.5, 450.0], [51.6, 450.0], [51.7, 450.0], [51.8, 452.0], [51.9, 452.0], [52.0, 452.0], [52.1, 452.0], [52.2, 452.0], [52.3, 452.0], [52.4, 452.0], [52.5, 452.0], [52.6, 452.0], [52.7, 452.0], [52.8, 452.0], [52.9, 452.0], [53.0, 454.0], [53.1, 454.0], [53.2, 454.0], [53.3, 454.0], [53.4, 454.0], [53.5, 454.0], [53.6, 454.0], [53.7, 454.0], [53.8, 454.0], [53.9, 454.0], [54.0, 454.0], [54.1, 454.0], [54.2, 457.0], [54.3, 457.0], [54.4, 457.0], [54.5, 457.0], [54.6, 457.0], [54.7, 457.0], [54.8, 457.0], [54.9, 457.0], [55.0, 457.0], [55.1, 457.0], [55.2, 457.0], [55.3, 470.0], [55.4, 470.0], [55.5, 470.0], [55.6, 470.0], [55.7, 470.0], [55.8, 470.0], [55.9, 470.0], [56.0, 470.0], [56.1, 470.0], [56.2, 470.0], [56.3, 470.0], [56.4, 470.0], [56.5, 476.0], [56.6, 476.0], [56.7, 476.0], [56.8, 476.0], [56.9, 476.0], [57.0, 476.0], [57.1, 476.0], [57.2, 476.0], [57.3, 476.0], [57.4, 476.0], [57.5, 476.0], [57.6, 476.0], [57.7, 498.0], [57.8, 498.0], [57.9, 498.0], [58.0, 498.0], [58.1, 498.0], [58.2, 498.0], [58.3, 498.0], [58.4, 498.0], [58.5, 498.0], [58.6, 498.0], [58.7, 498.0], [58.8, 498.0], [58.9, 503.0], [59.0, 503.0], [59.1, 503.0], [59.2, 503.0], [59.3, 503.0], [59.4, 503.0], [59.5, 503.0], [59.6, 503.0], [59.7, 503.0], [59.8, 503.0], [59.9, 503.0], [60.0, 503.0], [60.1, 505.0], [60.2, 505.0], [60.3, 505.0], [60.4, 505.0], [60.5, 505.0], [60.6, 505.0], [60.7, 505.0], [60.8, 505.0], [60.9, 505.0], [61.0, 505.0], [61.1, 505.0], [61.2, 507.0], [61.3, 507.0], [61.4, 507.0], [61.5, 507.0], [61.6, 507.0], [61.7, 507.0], [61.8, 507.0], [61.9, 507.0], [62.0, 507.0], [62.1, 507.0], [62.2, 507.0], [62.3, 507.0], [62.4, 533.0], [62.5, 533.0], [62.6, 533.0], [62.7, 533.0], [62.8, 533.0], [62.9, 533.0], [63.0, 533.0], [63.1, 533.0], [63.2, 533.0], [63.3, 533.0], [63.4, 533.0], [63.5, 533.0], [63.6, 537.0], [63.7, 537.0], [63.8, 537.0], [63.9, 537.0], [64.0, 537.0], [64.1, 537.0], [64.2, 537.0], [64.3, 537.0], [64.4, 537.0], [64.5, 537.0], [64.6, 537.0], [64.7, 537.0], [64.8, 549.0], [64.9, 549.0], [65.0, 549.0], [65.1, 549.0], [65.2, 549.0], [65.3, 549.0], [65.4, 549.0], [65.5, 549.0], [65.6, 549.0], [65.7, 549.0], [65.8, 549.0], [65.9, 553.0], [66.0, 553.0], [66.1, 553.0], [66.2, 553.0], [66.3, 553.0], [66.4, 553.0], [66.5, 553.0], [66.6, 553.0], [66.7, 553.0], [66.8, 553.0], [66.9, 553.0], [67.0, 553.0], [67.1, 562.0], [67.2, 562.0], [67.3, 562.0], [67.4, 562.0], [67.5, 562.0], [67.6, 562.0], [67.7, 562.0], [67.8, 562.0], [67.9, 562.0], [68.0, 562.0], [68.1, 562.0], [68.2, 562.0], [68.3, 565.0], [68.4, 565.0], [68.5, 565.0], [68.6, 565.0], [68.7, 565.0], [68.8, 565.0], [68.9, 565.0], [69.0, 565.0], [69.1, 565.0], [69.2, 565.0], [69.3, 565.0], [69.4, 565.0], [69.5, 567.0], [69.6, 567.0], [69.7, 567.0], [69.8, 567.0], [69.9, 567.0], [70.0, 567.0], [70.1, 567.0], [70.2, 567.0], [70.3, 567.0], [70.4, 567.0], [70.5, 567.0], [70.6, 617.0], [70.7, 617.0], [70.8, 617.0], [70.9, 617.0], [71.0, 617.0], [71.1, 617.0], [71.2, 617.0], [71.3, 617.0], [71.4, 617.0], [71.5, 617.0], [71.6, 617.0], [71.7, 617.0], [71.8, 621.0], [71.9, 621.0], [72.0, 621.0], [72.1, 621.0], [72.2, 621.0], [72.3, 621.0], [72.4, 621.0], [72.5, 621.0], [72.6, 621.0], [72.7, 621.0], [72.8, 621.0], [72.9, 621.0], [73.0, 643.0], [73.1, 643.0], [73.2, 643.0], [73.3, 643.0], [73.4, 643.0], [73.5, 643.0], [73.6, 643.0], [73.7, 643.0], [73.8, 643.0], [73.9, 643.0], [74.0, 643.0], [74.1, 643.0], [74.2, 645.0], [74.3, 645.0], [74.4, 645.0], [74.5, 645.0], [74.6, 645.0], [74.7, 645.0], [74.8, 645.0], [74.9, 645.0], [75.0, 645.0], [75.1, 645.0], [75.2, 645.0], [75.3, 676.0], [75.4, 676.0], [75.5, 676.0], [75.6, 676.0], [75.7, 676.0], [75.8, 676.0], [75.9, 676.0], [76.0, 676.0], [76.1, 676.0], [76.2, 676.0], [76.3, 676.0], [76.4, 676.0], [76.5, 714.0], [76.6, 714.0], [76.7, 714.0], [76.8, 714.0], [76.9, 714.0], [77.0, 714.0], [77.1, 714.0], [77.2, 714.0], [77.3, 714.0], [77.4, 714.0], [77.5, 714.0], [77.6, 714.0], [77.7, 732.0], [77.8, 732.0], [77.9, 732.0], [78.0, 732.0], [78.1, 732.0], [78.2, 732.0], [78.3, 732.0], [78.4, 732.0], [78.5, 732.0], [78.6, 732.0], [78.7, 732.0], [78.8, 732.0], [78.9, 826.0], [79.0, 826.0], [79.1, 826.0], [79.2, 826.0], [79.3, 826.0], [79.4, 826.0], [79.5, 826.0], [79.6, 826.0], [79.7, 826.0], [79.8, 826.0], [79.9, 826.0], [80.0, 872.0], [80.1, 872.0], [80.2, 872.0], [80.3, 872.0], [80.4, 872.0], [80.5, 872.0], [80.6, 872.0], [80.7, 872.0], [80.8, 872.0], [80.9, 872.0], [81.0, 872.0], [81.1, 872.0], [81.2, 888.0], [81.3, 888.0], [81.4, 888.0], [81.5, 888.0], [81.6, 888.0], [81.7, 888.0], [81.8, 888.0], [81.9, 888.0], [82.0, 888.0], [82.1, 888.0], [82.2, 888.0], [82.3, 888.0], [82.4, 1008.0], [82.5, 1008.0], [82.6, 1008.0], [82.7, 1008.0], [82.8, 1008.0], [82.9, 1008.0], [83.0, 1008.0], [83.1, 1008.0], [83.2, 1008.0], [83.3, 1008.0], [83.4, 1008.0], [83.5, 1008.0], [83.6, 1044.0], [83.7, 1044.0], [83.8, 1044.0], [83.9, 1044.0], [84.0, 1044.0], [84.1, 1044.0], [84.2, 1044.0], [84.3, 1044.0], [84.4, 1044.0], [84.5, 1044.0], [84.6, 1044.0], [84.7, 1044.0], [84.8, 1049.0], [84.9, 1049.0], [85.0, 1049.0], [85.1, 1049.0], [85.2, 1049.0], [85.3, 1049.0], [85.4, 1049.0], [85.5, 1049.0], [85.6, 1049.0], [85.7, 1049.0], [85.8, 1049.0], [85.9, 1117.0], [86.0, 1117.0], [86.1, 1117.0], [86.2, 1117.0], [86.3, 1117.0], [86.4, 1117.0], [86.5, 1117.0], [86.6, 1117.0], [86.7, 1117.0], [86.8, 1117.0], [86.9, 1117.0], [87.0, 1117.0], [87.1, 1160.0], [87.2, 1160.0], [87.3, 1160.0], [87.4, 1160.0], [87.5, 1160.0], [87.6, 1160.0], [87.7, 1160.0], [87.8, 1160.0], [87.9, 1160.0], [88.0, 1160.0], [88.1, 1160.0], [88.2, 1160.0], [88.3, 1182.0], [88.4, 1182.0], [88.5, 1182.0], [88.6, 1182.0], [88.7, 1182.0], [88.8, 1182.0], [88.9, 1182.0], [89.0, 1182.0], [89.1, 1182.0], [89.2, 1182.0], [89.3, 1182.0], [89.4, 1182.0], [89.5, 1225.0], [89.6, 1225.0], [89.7, 1225.0], [89.8, 1225.0], [89.9, 1225.0], [90.0, 1225.0], [90.1, 1225.0], [90.2, 1225.0], [90.3, 1225.0], [90.4, 1225.0], [90.5, 1225.0], [90.6, 1232.0], [90.7, 1232.0], [90.8, 1232.0], [90.9, 1232.0], [91.0, 1232.0], [91.1, 1232.0], [91.2, 1232.0], [91.3, 1232.0], [91.4, 1232.0], [91.5, 1232.0], [91.6, 1232.0], [91.7, 1232.0], [91.8, 1279.0], [91.9, 1279.0], [92.0, 1279.0], [92.1, 1279.0], [92.2, 1279.0], [92.3, 1279.0], [92.4, 1279.0], [92.5, 1279.0], [92.6, 1279.0], [92.7, 1279.0], [92.8, 1279.0], [92.9, 1279.0], [93.0, 1316.0], [93.1, 1316.0], [93.2, 1316.0], [93.3, 1316.0], [93.4, 1316.0], [93.5, 1316.0], [93.6, 1316.0], [93.7, 1316.0], [93.8, 1316.0], [93.9, 1316.0], [94.0, 1316.0], [94.1, 1316.0], [94.2, 1318.0], [94.3, 1318.0], [94.4, 1318.0], [94.5, 1318.0], [94.6, 1318.0], [94.7, 1318.0], [94.8, 1318.0], [94.9, 1318.0], [95.0, 1318.0], [95.1, 1318.0], [95.2, 1318.0], [95.3, 1432.0], [95.4, 1432.0], [95.5, 1432.0], [95.6, 1432.0], [95.7, 1432.0], [95.8, 1432.0], [95.9, 1432.0], [96.0, 1432.0], [96.1, 1432.0], [96.2, 1432.0], [96.3, 1432.0], [96.4, 1432.0], [96.5, 1489.0], [96.6, 1489.0], [96.7, 1489.0], [96.8, 1489.0], [96.9, 1489.0], [97.0, 1489.0], [97.1, 1489.0], [97.2, 1489.0], [97.3, 1489.0], [97.4, 1489.0], [97.5, 1489.0], [97.6, 1489.0], [97.7, 1501.0], [97.8, 1501.0], [97.9, 1501.0], [98.0, 1501.0], [98.1, 1501.0], [98.2, 1501.0], [98.3, 1501.0], [98.4, 1501.0], [98.5, 1501.0], [98.6, 1501.0], [98.7, 1501.0], [98.8, 1501.0], [98.9, 1838.0], [99.0, 1838.0], [99.1, 1838.0], [99.2, 1838.0], [99.3, 1838.0], [99.4, 1838.0], [99.5, 1838.0], [99.6, 1838.0], [99.7, 1838.0], [99.8, 1838.0], [99.9, 1838.0]], "isOverall": false, "label": "Get Student", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 35.0, "series": [{"data": [[600.0, 7.0], [700.0, 13.0], [800.0, 11.0], [900.0, 9.0], [15300.0, 1.0], [15400.0, 1.0], [15600.0, 2.0], [15800.0, 1.0], [1000.0, 8.0], [15900.0, 1.0], [1100.0, 9.0], [18400.0, 1.0], [1200.0, 4.0], [18600.0, 1.0], [1300.0, 2.0], [21000.0, 1.0], [1400.0, 1.0], [1500.0, 1.0], [1600.0, 2.0], [3300.0, 1.0], [3400.0, 1.0], [3500.0, 2.0], [3700.0, 1.0], [3600.0, 1.0], [3800.0, 2.0], [500.0, 1.0]], "isOverall": false, "label": "Create Student", "isController": false}, {"data": [[0.0, 11.0], [300.0, 11.0], [400.0, 6.0], [200.0, 31.0], [100.0, 25.0], [500.0, 1.0]], "isOverall": false, "label": "Update Student", "isController": false}, {"data": [[0.0, 11.0], [300.0, 7.0], [200.0, 29.0], [100.0, 35.0], [400.0, 2.0], [800.0, 1.0]], "isOverall": false, "label": "Get Specific Student", "isController": false}, {"data": [[600.0, 5.0], [700.0, 2.0], [800.0, 3.0], [200.0, 4.0], [1000.0, 3.0], [1100.0, 3.0], [1200.0, 3.0], [300.0, 20.0], [1300.0, 2.0], [1400.0, 2.0], [1500.0, 1.0], [400.0, 19.0], [100.0, 7.0], [1800.0, 1.0], [500.0, 10.0]], "isOverall": false, "label": "Get Student", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 217.0, "series": [{"data": [[0.0, 217.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 100.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 21.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 2.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.071428571428574, "minX": 1.6389432E12, "maxY": 22.18791946308725, "series": [{"data": [[1.63894326E12, 6.071428571428574], [1.6389432E12, 22.18791946308725]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63894326E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 62.0, "minX": 1.0, "maxY": 19743.5, "series": [{"data": [[9.0, 15607.333333333334], [10.0, 3422.0], [11.0, 3301.0], [3.0, 19743.5], [15.0, 3524.0], [16.0, 1133.076923076923], [1.0, 18683.0], [20.0, 868.375], [5.0, 15922.0], [21.0, 1448.388888888889], [22.0, 805.5], [23.0, 1167.25], [24.0, 1073.5], [6.0, 15393.0], [25.0, 978.2], [26.0, 1104.6666666666667], [27.0, 1269.0]], "isOverall": false, "label": "Create Student", "isController": false}, {"data": [[19.30588235294118, 2897.0352941176475]], "isOverall": false, "label": "Create Student-Aggregated", "isController": false}, {"data": [[8.0, 426.0], [2.0, 83.0], [9.0, 229.0], [10.0, 113.0], [11.0, 418.0], [12.0, 83.0], [3.0, 77.0], [13.0, 89.0], [15.0, 88.0], [1.0, 82.0], [17.0, 107.0], [20.0, 182.2857142857143], [5.0, 92.0], [21.0, 177.4375], [22.0, 201.66666666666669], [23.0, 252.85714285714283], [24.0, 239.5], [6.0, 101.0], [25.0, 318.6363636363636], [26.0, 309.2], [27.0, 270.5]], "isOverall": false, "label": "Update Student", "isController": false}, {"data": [[20.45882352941176, 223.8235294117647]], "isOverall": false, "label": "Update Student-Aggregated", "isController": false}, {"data": [[2.0, 76.0], [3.0, 76.0], [4.0, 80.0], [5.0, 71.0], [6.0, 123.0], [7.0, 132.0], [8.0, 425.0], [9.0, 213.0], [10.0, 89.0], [11.0, 74.0], [12.0, 68.0], [13.0, 77.0], [14.0, 62.0], [15.0, 77.0], [16.0, 116.0], [1.0, 342.0], [17.0, 169.0], [20.0, 141.66666666666666], [21.0, 171.5625], [22.0, 171.71428571428572], [23.0, 230.85714285714286], [24.0, 228.83333333333331], [25.0, 239.58333333333331], [26.0, 287.55555555555554], [27.0, 195.0]], "isOverall": false, "label": "Get Specific Student", "isController": false}, {"data": [[20.47058823529411, 198.31764705882355]], "isOverall": false, "label": "Get Specific Student-Aggregated", "isController": false}, {"data": [[9.0, 385.3333333333333], [10.0, 153.0], [11.0, 143.0], [3.0, 287.5], [13.0, 145.0], [15.0, 198.0], [16.0, 249.0], [1.0, 181.0], [19.0, 415.0], [20.0, 366.83333333333337], [5.0, 1149.5], [21.0, 408.3636363636364], [22.0, 486.46153846153845], [23.0, 409.1666666666667], [24.0, 755.0833333333334], [6.0, 124.0], [25.0, 922.8461538461538], [26.0, 810.5], [27.0, 1116.5]], "isOverall": false, "label": "Get Student", "isController": false}, {"data": [[20.55294117647059, 581.9058823529411]], "isOverall": false, "label": "Get Student-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 27.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 168.26666666666668, "minX": 1.6389432E12, "maxY": 15832.683333333332, "series": [{"data": [[1.63894326E12, 2316.983333333333], [1.6389432E12, 15832.683333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63894326E12, 168.26666666666668], [1.6389432E12, 1237.9666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63894326E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 154.63636363636363, "minX": 1.6389432E12, "maxY": 15565.099999999999, "series": [{"data": [[1.63894326E12, 15565.099999999999], [1.6389432E12, 1207.96]], "isOverall": false, "label": "Create Student", "isController": false}, {"data": [[1.63894326E12, 176.54545454545453], [1.6389432E12, 230.85135135135138]], "isOverall": false, "label": "Update Student", "isController": false}, {"data": [[1.63894326E12, 154.63636363636363], [1.6389432E12, 204.81081081081084]], "isOverall": false, "label": "Get Specific Student", "isController": false}, {"data": [[1.63894326E12, 448.80000000000007], [1.6389432E12, 599.6533333333335]], "isOverall": false, "label": "Get Student", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63894326E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 154.54545454545456, "minX": 1.6389432E12, "maxY": 13459.7, "series": [{"data": [[1.63894326E12, 13459.7], [1.6389432E12, 1207.2933333333335]], "isOverall": false, "label": "Create Student", "isController": false}, {"data": [[1.63894326E12, 176.36363636363637], [1.6389432E12, 230.5945945945947]], "isOverall": false, "label": "Update Student", "isController": false}, {"data": [[1.63894326E12, 154.54545454545456], [1.6389432E12, 204.52702702702703]], "isOverall": false, "label": "Get Specific Student", "isController": false}, {"data": [[1.63894326E12, 448.7], [1.6389432E12, 599.5200000000001]], "isOverall": false, "label": "Get Student", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63894326E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6389432E12, "maxY": 15428.1, "series": [{"data": [[1.63894326E12, 15428.1], [1.6389432E12, 1001.6800000000002]], "isOverall": false, "label": "Create Student", "isController": false}, {"data": [[1.63894326E12, 0.0], [1.6389432E12, 0.0]], "isOverall": false, "label": "Update Student", "isController": false}, {"data": [[1.63894326E12, 0.0], [1.6389432E12, 0.0]], "isOverall": false, "label": "Get Specific Student", "isController": false}, {"data": [[1.63894326E12, 25.700000000000003], [1.6389432E12, 0.0]], "isOverall": false, "label": "Get Student", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63894326E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 62.0, "minX": 1.6389432E12, "maxY": 18683.0, "series": [{"data": [[1.63894326E12, 18683.0], [1.6389432E12, 3854.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63894326E12, 15873.6], [1.6389432E12, 1149.2000000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63894326E12, 18683.0], [1.6389432E12, 3734.939999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63894326E12, 18308.74999999999], [1.6389432E12, 1433.6500000000003]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63894326E12, 71.0], [1.6389432E12, 62.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63894326E12, 229.0], [1.6389432E12, 345.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63894326E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 77.0, "minX": 1.0, "maxY": 21054.0, "series": [{"data": [[32.0, 315.0], [2.0, 8004.5], [8.0, 352.0], [35.0, 325.0], [34.0, 374.0], [9.0, 768.0], [36.0, 269.0], [44.0, 316.0], [12.0, 686.5], [3.0, 124.0], [4.0, 380.0], [1.0, 15498.0], [5.0, 79.5], [23.0, 643.0], [6.0, 92.0], [29.0, 278.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[5.0, 77.0], [3.0, 21054.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 44.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 15498.0, "series": [{"data": [[32.0, 315.0], [2.0, 8004.5], [8.0, 352.0], [35.0, 325.0], [34.0, 373.0], [9.0, 768.0], [36.0, 269.0], [44.0, 314.5], [12.0, 684.5], [3.0, 124.0], [4.0, 380.0], [1.0, 15498.0], [5.0, 79.5], [23.0, 643.0], [6.0, 92.0], [29.0, 278.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[5.0, 76.0], [3.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 44.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.5166666666666667, "minX": 1.6389432E12, "maxY": 5.15, "series": [{"data": [[1.63894326E12, 0.5166666666666667], [1.6389432E12, 5.15]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63894326E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6389432E12, "maxY": 3.716666666666667, "series": [{"data": [[1.63894326E12, 0.5166666666666667], [1.6389432E12, 3.716666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.63894326E12, 0.15], [1.6389432E12, 1.25]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.63894326E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.63894326E12, 0.016666666666666666]], "isOverall": false, "label": "405", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63894326E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6389432E12, "maxY": 1.25, "series": [{"data": [[1.63894326E12, 0.15], [1.6389432E12, 1.25]], "isOverall": false, "label": "Create Student-success", "isController": false}, {"data": [[1.63894326E12, 0.016666666666666666]], "isOverall": false, "label": "Create Student-failure", "isController": false}, {"data": [[1.63894326E12, 0.16666666666666666], [1.6389432E12, 1.25]], "isOverall": false, "label": "Get Student-success", "isController": false}, {"data": [[1.63894326E12, 0.18333333333333332], [1.6389432E12, 1.2333333333333334]], "isOverall": false, "label": "Get Specific Student-success", "isController": false}, {"data": [[1.63894326E12, 0.16666666666666666], [1.6389432E12, 1.2333333333333334]], "isOverall": false, "label": "Update Student-success", "isController": false}, {"data": [[1.63894326E12, 0.016666666666666666]], "isOverall": false, "label": "Update Student-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63894326E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6389432E12, "maxY": 4.966666666666667, "series": [{"data": [[1.63894326E12, 0.6666666666666666], [1.6389432E12, 4.966666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.63894326E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63894326E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

